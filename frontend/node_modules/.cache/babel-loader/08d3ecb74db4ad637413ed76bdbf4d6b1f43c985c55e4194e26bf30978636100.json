{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, Avatar, Menu, MenuItem, Select, FormControl, CircularProgress, InputAdornment, Popover, Tooltip } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreIcon, VideoCall as VideoIcon, OpenInFull as ExpandIcon, Image as ImageIcon, EmojiEmotions as EmojiIcon, Stop as StopIcon, Add as AddIcon } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst ChatHeader = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = ChatHeader;\nconst MessageList = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px'\n  }\n}));\n_c3 = MessageList;\nconst Message = styled(Box)(({\n  theme,\n  align\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2)\n}));\n_c4 = Message;\nconst MessageContent = styled(Box)(({\n  theme,\n  align\n}) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0)\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5)\n  }\n}));\n_c5 = MessageContent;\nconst ChatFooter = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c6 = ChatFooter;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1)\n}));\n_c7 = InputContainer;\nconst ErrorMessage = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c8 = ErrorMessage;\nconst ModelSelector = styled(FormControl)(({\n  theme\n}) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent'\n  }\n}));\n_c9 = ModelSelector;\nconst ConversationSelector = styled(FormControl)(({\n  theme\n}) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem'\n  }\n}));\n_c10 = ConversationSelector;\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl\n}) {\n  _s();\n  var _models$find, _models$find2;\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{\n      id: 'new',\n      name: 'New Chat',\n      messages: []\n    }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState('new');\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingResponse]);\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      setSelectedModel((preferredModel === null || preferredModel === void 0 ? void 0 : preferredModel.id) || models[0].id);\n    }\n  }, [models, selectedModel]);\n  useEffect(() => {\n    const conversation = conversations.find(c => c.id === currentConversationId);\n    setMessages((conversation === null || conversation === void 0 ? void 0 : conversation.messages) || []);\n  }, [currentConversationId, conversations]);\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n  useEffect(() => {\n    if (currentConversationId) {\n      setConversations(prevConversations => prevConversations.map(conv => conv.id === currentConversationId ? {\n        ...conv,\n        messages\n      } : conv));\n    }\n  }, [messages, currentConversationId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: ''\n      }));\n    }\n  };\n  const startNewConversation = () => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Chat',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n    setMessages([]);\n  };\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n\n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 ? firstMessage.content.substring(0, 30) + '...' : firstMessage.content;\n    setConversations(prev => prev.map(conv => conv.id === id ? {\n      ...conv,\n      name\n    } : conv));\n  };\n  const updateStreamingResponse = useCallback(newContent => {\n    responseBuffer.current += newContent;\n\n    // Clear any pending timeout\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n\n    // Schedule the update with a 50ms debounce\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 50);\n  }, [position, setStreamingResponses]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    if (!models.length) {\n      setMessages(prev => [...prev, {\n        content: 'No AI models available in LM Studio. Please load a model first.',\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      return;\n    }\n    if (!selectedModel) {\n      var _models$;\n      setSelectedModel((_models$ = models[0]) === null || _models$ === void 0 ? void 0 : _models$.id);\n      return;\n    }\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user'\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInputValue('');\n    setThinking(prev => ({\n      ...prev,\n      [position]: true\n    }));\n\n    // Update conversation name if this is the first message\n    if (messages.length === 0) {\n      updateConversationName(currentConversationId, newMessage);\n    }\n    let retryCount = 0;\n    const maxRetries = 2;\n    const attemptSend = async () => {\n      try {\n        // Create new AbortController for this request\n        abortControllerRef.current = new AbortController();\n        const timeoutId = setTimeout(() => {\n          if (abortControllerRef.current) {\n            abortControllerRef.current.abort();\n          }\n        }, 30000);\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'POST',\n          signal: abortControllerRef.current.signal,\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            model: selectedModel,\n            messages: [...messages, newMessage].map(msg => ({\n              role: msg.role === 'error' ? 'assistant' : msg.role,\n              content: msg.content\n            })),\n            stream: true,\n            temperature: 0.7,\n            max_tokens: 2000\n          })\n        });\n        clearTimeout(timeoutId);\n        if (!response.ok) {\n          throw new Error(`Server returned ${response.status}: ${response.statusText}`);\n        }\n        if (!response.body) {\n          throw new Error('Server response has no body');\n        }\n        const reader = response.body.getReader();\n        let responseText = '';\n        responseBuffer.current = '';\n        try {\n          while (true) {\n            const {\n              done,\n              value\n            } = await reader.read();\n            if (done) break;\n            const chunk = new TextDecoder().decode(value);\n            const lines = chunk.split('\\n');\n            for (const line of lines) {\n              if (!line.trim() || line.includes('[DONE]')) continue;\n              try {\n                var _data$choices$, _data$choices$$delta;\n                const jsonStr = line.replace(/^data: /, '');\n                const data = JSON.parse(jsonStr);\n                if (data.choices && (_data$choices$ = data.choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$delta = _data$choices$.delta) !== null && _data$choices$$delta !== void 0 && _data$choices$$delta.content) {\n                  const newContent = data.choices[0].delta.content;\n                  responseText += newContent;\n                  updateStreamingResponse(newContent);\n                }\n              } catch (e) {\n                console.warn('Error parsing chunk:', e);\n              }\n            }\n          }\n        } finally {\n          // Clear any pending timeout\n          if (updateTimeoutRef.current) {\n            clearTimeout(updateTimeoutRef.current);\n            updateTimeoutRef.current = null;\n          }\n          if (responseText) {\n            setMessages(prev => [...prev, {\n              content: responseText,\n              timestamp: new Date().toISOString(),\n              role: 'assistant'\n            }]);\n          }\n          setStreamingResponses(prev => ({\n            ...prev,\n            [position]: ''\n          }));\n          setThinking(prev => ({\n            ...prev,\n            [position]: false\n          }));\n          responseBuffer.current = '';\n          abortControllerRef.current = null;\n        }\n        return true; // Success\n      } catch (error) {\n        if (error.name === 'AbortError') {\n          console.log('Request aborted');\n          return true; // Don't retry if aborted\n        }\n        console.error('Error:', error);\n        if (retryCount < maxRetries) {\n          retryCount++;\n          const delay = Math.min(1000 * Math.pow(2, retryCount), 4000);\n          console.log(`Retrying in ${delay / 1000} seconds... (Attempt ${retryCount}/${maxRetries})`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n          return false; // Retry needed\n        }\n        let errorMessage = 'Unable to get response from LM Studio. ';\n        if (error.name === 'AbortError') {\n          errorMessage += 'Request timed out. The model might be too slow or not responding.';\n        } else if (error.message === 'Failed to fetch') {\n          errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct`;\n        } else {\n          errorMessage += error.message;\n        }\n        setMessages(prev => [...prev, {\n          content: errorMessage,\n          timestamp: new Date().toISOString(),\n          role: 'error'\n        }]);\n        setThinking(prev => ({\n          ...prev,\n          [position]: false\n        }));\n        return true; // Stop retrying\n      }\n    };\n\n    // Keep trying until success or max retries reached\n    while (!(await attemptSend())) {\n      // Continue retrying\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleEmojiClick = emojiData => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = inputValue.slice(0, cursorPosition) + emoji + inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n      setThinking(prev => ({\n        ...prev,\n        [position]: true\n      }));\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n      const data = await response.json();\n\n      // Add file message to chat\n      setMessages(prev => [...prev, {\n        content: `📎 Uploaded file: ${file.name}`,\n        timestamp: new Date().toISOString(),\n        role: 'user',\n        fileId: data.id\n      }]);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      setMessages(prev => [...prev, {\n        content: `Failed to upload file: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n    } finally {\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  const supportsFileUpload = () => {\n    var _currentModel$name, _currentModel$capabil;\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$name = currentModel.name) === null || _currentModel$name === void 0 ? void 0 : _currentModel$name.toLowerCase()) || '';\n\n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$capabil = currentModel.capabilities) === null || _currentModel$capabil === void 0 ? void 0 : _currentModel$capabil.includes('file_upload')) || false;\n  };\n  const getModelLetter = modelName => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    return modelName.charAt(0).toUpperCase();\n  };\n  const getModelColor = modelName => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    return '#757575'; // Grey for unknown models\n  };\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: selectedModel ? getModelColor(((_models$find = models.find(m => m.id === selectedModel)) === null || _models$find === void 0 ? void 0 : _models$find.name) || '') : 'primary.main',\n            transition: 'all 0.3s ease',\n            fontWeight: 600\n          },\n          children: selectedModel ? getModelLetter(((_models$find2 = models.find(m => m.id === selectedModel)) === null || _models$find2 === void 0 ? void 0 : _models$find2.name) || '') : 'A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ConversationSelector, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: currentConversationId,\n              onChange: e => setCurrentConversationId(e.target.value),\n              variant: \"standard\",\n              sx: {\n                fontSize: '0.875rem'\n              },\n              children: conversations.map(conv => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: conv.id,\n                children: conv.name || 'New Chat'\n              }, conv.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), models.length > 0 ? /*#__PURE__*/_jsxDEV(ModelSelector, {\n            size: \"small\",\n            sx: {\n              minWidth: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedModel || '',\n              onChange: e => setSelectedModel(e.target.value),\n              variant: \"standard\",\n              displayEmpty: true,\n              children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: model.id,\n                children: model.name\n              }, model.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"No AI models available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: startNewConversation,\n          title: \"New Chat\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => setMenuAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        align: msg.role === 'user' ? 'right' : 'left',\n        children: msg.role === 'error' ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 16,\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n            align: msg.role === 'user' ? 'right' : 'left',\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 0.5,\n              opacity: 0.7,\n              fontSize: '0.7rem'\n            },\n            children: new Date(msg.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(Message, {\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(MessageContent, {\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: streamingResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this), isThinking && /*#__PURE__*/_jsxDEV(Message, {\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(MessageContent, {\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Thinking...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: handleStopResponse,\n              sx: {\n                ml: 1,\n                bgcolor: 'error.main',\n                color: 'error.contrastText',\n                '&:hover': {\n                  bgcolor: 'error.dark'\n                },\n                width: 24,\n                height: 24\n              },\n              children: /*#__PURE__*/_jsxDEV(StopIcon, {\n                sx: {\n                  fontSize: 16\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: e => setEmojiAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: Boolean(emojiAnchor),\n          anchorEl: emojiAnchor,\n          onClose: () => setEmojiAnchor(null),\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n              onEmojiClick: handleEmojiClick,\n              autoFocusSearch: false,\n              theme: \"dark\",\n              searchPlaceHolder: \"Search emojis...\",\n              width: 320,\n              height: 400,\n              previewConfig: {\n                showPreview: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload,\n          accept: \"image/*,.pdf,.txt,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: !selectedModel ? \"Please select a model first\" : !supportsFileUpload() ? \"This model doesn't support file uploads\" : \"Upload a file\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              disabled: !supportsFileUpload(),\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n                sx: {\n                  color: theme => !supportsFileUpload() ? theme.palette.action.disabled : 'inherit'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 4,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSendMessage,\n                disabled: !inputValue.trim() || !selectedModel,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"error\",\n        sx: {\n          mt: 1,\n          display: 'block'\n        },\n        onClick: () => setUploadError(''),\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: () => setMenuAnchor(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          startNewConversation();\n          setMenuAnchor(null);\n        },\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setMessages([]);\n          setMenuAnchor(null);\n        },\n        children: \"Clear Current Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setConversations(prev => prev.filter(conv => conv.id !== currentConversationId));\n          startNewConversation();\n          setMenuAnchor(null);\n        },\n        children: \"Delete Current Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 542,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"/6sATuYLxBshwOZLc5doOaIcphE=\");\n_c11 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessageList\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"MessageContent\");\n$RefreshReg$(_c6, \"ChatFooter\");\n$RefreshReg$(_c7, \"InputContainer\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"ModelSelector\");\n$RefreshReg$(_c10, \"ConversationSelector\");\n$RefreshReg$(_c11, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","Box","Paper","TextField","IconButton","Typography","Avatar","Menu","MenuItem","Select","FormControl","CircularProgress","InputAdornment","Popover","Tooltip","Send","SendIcon","MoreVert","MoreIcon","VideoCall","VideoIcon","OpenInFull","ExpandIcon","Image","ImageIcon","EmojiEmotions","EmojiIcon","Stop","StopIcon","Add","AddIcon","ReactMarkdown","styled","EmojiPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","display","flexDirection","height","flex","overflow","backgroundColor","palette","background","paper","borderRadius","spacing","_c","ChatHeader","padding","alignItems","justifyContent","borderBottom","divider","_c2","MessageList","flexGrow","default","width","grey","_c3","Message","align","marginBottom","_c4","MessageContent","maxWidth","primary","main","color","contrastText","text","boxShadow","shadows","margin","fontFamily","_c5","ChatFooter","borderTop","_c6","InputContainer","gap","_c7","ErrorMessage","error","dark","_c8","ModelSelector","paddingBottom","borderBottomColor","_c9","ConversationSelector","minWidth","fontSize","_c10","ChatWindow","position","models","streamingResponse","isThinking","setStreamingResponses","setThinking","serverUrl","_s","_models$find","_models$find2","messages","setMessages","conversations","setConversations","saved","localStorage","getItem","JSON","parse","id","name","currentConversationId","setCurrentConversationId","inputValue","setInputValue","selectedModel","setSelectedModel","menuAnchor","setMenuAnchor","emojiAnchor","setEmojiAnchor","uploadError","setUploadError","fileInputRef","messagesEndRef","abortControllerRef","responseBuffer","updateTimeoutRef","scrollToBottom","length","preferredModel","find","m","toLowerCase","includes","conversation","c","setItem","stringify","prevConversations","map","conv","_messagesEndRef$curre","current","scrollIntoView","behavior","handleStopResponse","abort","prev","startNewConversation","newId","Date","now","toString","newConversation","timestamp","toISOString","updateConversationName","firstMessage","content","substring","updateStreamingResponse","newContent","clearTimeout","setTimeout","handleSendMessage","trim","role","_models$","newMessage","retryCount","maxRetries","attemptSend","AbortController","timeoutId","response","fetch","method","signal","headers","body","model","msg","stream","temperature","max_tokens","ok","Error","status","statusText","reader","getReader","responseText","done","value","read","chunk","TextDecoder","decode","lines","split","line","_data$choices$","_data$choices$$delta","jsonStr","replace","data","choices","delta","e","console","warn","log","delay","Math","min","pow","Promise","resolve","errorMessage","message","handleKeyPress","event","key","shiftKey","preventDefault","handleEmojiClick","emojiData","emoji","cursorPosition","document","querySelector","selectionStart","updatedText","slice","handleFileUpload","_event$target$files","file","target","files","size","formData","FormData","append","json","fileId","supportsFileUpload","_currentModel$name","_currentModel$capabil","currentModel","modelName","capabilities","getModelLetter","charAt","toUpperCase","getModelColor","elevation","children","sx","bgcolor","transition","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","variant","displayEmpty","onClick","title","currentTarget","index","mt","opacity","toLocaleTimeString","ml","ref","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","border","onEmojiClick","autoFocusSearch","searchPlaceHolder","previewConfig","showPreview","type","style","accept","disabled","_fileInputRef$current","click","action","fullWidth","multiline","maxRows","onKeyPress","placeholder","InputProps","disableUnderline","endAdornment","filter","_c11","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  IconButton,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  Select,\n  FormControl,\n  CircularProgress,\n  InputAdornment,\n  Popover,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  MoreVert as MoreIcon,\n  VideoCall as VideoIcon,\n  OpenInFull as ExpandIcon,\n  Image as ImageIcon,\n  EmojiEmotions as EmojiIcon,\n  Stop as StopIcon,\n  Add as AddIcon,\n} from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3),\n}));\n\nconst ChatHeader = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n}));\n\nconst MessageList = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px',\n  },\n}));\n\nconst Message = styled(Box)(({ theme, align }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2),\n}));\n\nconst MessageContent = styled(Box)(({ theme, align }) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0,\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0),\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5),\n  },\n}));\n\nconst ChatFooter = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1),\n}));\n\nconst ErrorMessage = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n}));\n\nconst ModelSelector = styled(FormControl)(({ theme }) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0,\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent',\n  },\n}));\n\nconst ConversationSelector = styled(FormControl)(({ theme }) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem',\n  },\n}));\n\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl,\n}) {\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{ id: 'new', name: 'New Chat', messages: [] }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState('new');\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingResponse]);\n\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      setSelectedModel(preferredModel?.id || models[0].id);\n    }\n  }, [models, selectedModel]);\n\n  useEffect(() => {\n    const conversation = conversations.find(c => c.id === currentConversationId);\n    setMessages(conversation?.messages || []);\n  }, [currentConversationId, conversations]);\n\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n\n  useEffect(() => {\n    if (currentConversationId) {\n      setConversations(prevConversations => \n        prevConversations.map(conv => \n          conv.id === currentConversationId \n            ? { ...conv, messages } \n            : conv\n        )\n      );\n    }\n  }, [messages, currentConversationId]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({ ...prev, [position]: false }));\n      setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n    }\n  };\n\n  const startNewConversation = () => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Chat',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n    setMessages([]);\n  };\n\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n    \n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 \n      ? firstMessage.content.substring(0, 30) + '...'\n      : firstMessage.content;\n\n    setConversations(prev => \n      prev.map(conv => \n        conv.id === id \n          ? { ...conv, name } \n          : conv\n      )\n    );\n  };\n\n  const updateStreamingResponse = useCallback((newContent) => {\n    responseBuffer.current += newContent;\n    \n    // Clear any pending timeout\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n\n    // Schedule the update with a 50ms debounce\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 50);\n  }, [position, setStreamingResponses]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    if (!models.length) {\n      setMessages(prev => [\n        ...prev,\n        {\n          content: 'No AI models available in LM Studio. Please load a model first.',\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n      return;\n    }\n    if (!selectedModel) {\n      setSelectedModel(models[0]?.id);\n      return;\n    }\n\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user',\n    };\n\n    setMessages(prev => [...prev, newMessage]);\n    setInputValue('');\n    setThinking(prev => ({ ...prev, [position]: true }));\n\n    // Update conversation name if this is the first message\n    if (messages.length === 0) {\n      updateConversationName(currentConversationId, newMessage);\n    }\n\n    let retryCount = 0;\n    const maxRetries = 2;\n\n    const attemptSend = async () => {\n      try {\n        // Create new AbortController for this request\n        abortControllerRef.current = new AbortController();\n        const timeoutId = setTimeout(() => {\n          if (abortControllerRef.current) {\n            abortControllerRef.current.abort();\n          }\n        }, 30000);\n\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'POST',\n          signal: abortControllerRef.current.signal,\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            model: selectedModel,\n            messages: [...messages, newMessage].map(msg => ({\n              role: msg.role === 'error' ? 'assistant' : msg.role,\n              content: msg.content\n            })),\n            stream: true,\n            temperature: 0.7,\n            max_tokens: 2000\n          }),\n        });\n\n        clearTimeout(timeoutId);\n\n        if (!response.ok) {\n          throw new Error(`Server returned ${response.status}: ${response.statusText}`);\n        }\n\n        if (!response.body) {\n          throw new Error('Server response has no body');\n        }\n\n        const reader = response.body.getReader();\n        let responseText = '';\n        responseBuffer.current = '';\n\n        try {\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            const chunk = new TextDecoder().decode(value);\n            const lines = chunk.split('\\n');\n\n            for (const line of lines) {\n              if (!line.trim() || line.includes('[DONE]')) continue;\n\n              try {\n                const jsonStr = line.replace(/^data: /, '');\n                const data = JSON.parse(jsonStr);\n\n                if (data.choices && data.choices[0]?.delta?.content) {\n                  const newContent = data.choices[0].delta.content;\n                  responseText += newContent;\n                  updateStreamingResponse(newContent);\n                }\n              } catch (e) {\n                console.warn('Error parsing chunk:', e);\n              }\n            }\n          }\n        } finally {\n          // Clear any pending timeout\n          if (updateTimeoutRef.current) {\n            clearTimeout(updateTimeoutRef.current);\n            updateTimeoutRef.current = null;\n          }\n\n          if (responseText) {\n            setMessages(prev => [...prev, {\n              content: responseText,\n              timestamp: new Date().toISOString(),\n              role: 'assistant',\n            }]);\n          }\n          setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n          setThinking(prev => ({ ...prev, [position]: false }));\n          responseBuffer.current = '';\n          abortControllerRef.current = null;\n        }\n        return true; // Success\n      } catch (error) {\n        if (error.name === 'AbortError') {\n          console.log('Request aborted');\n          return true; // Don't retry if aborted\n        }\n\n        console.error('Error:', error);\n        if (retryCount < maxRetries) {\n          retryCount++;\n          const delay = Math.min(1000 * Math.pow(2, retryCount), 4000);\n          console.log(`Retrying in ${delay/1000} seconds... (Attempt ${retryCount}/${maxRetries})`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n          return false; // Retry needed\n        }\n        \n        let errorMessage = 'Unable to get response from LM Studio. ';\n        if (error.name === 'AbortError') {\n          errorMessage += 'Request timed out. The model might be too slow or not responding.';\n        } else if (error.message === 'Failed to fetch') {\n          errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct`;\n        } else {\n          errorMessage += error.message;\n        }\n        \n        setMessages(prev => [\n          ...prev,\n          {\n            content: errorMessage,\n            timestamp: new Date().toISOString(),\n            role: 'error',\n          },\n        ]);\n        setThinking(prev => ({ ...prev, [position]: false }));\n        return true; // Stop retrying\n      }\n    };\n\n    // Keep trying until success or max retries reached\n    while (!(await attemptSend())) {\n      // Continue retrying\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = \n      inputValue.slice(0, cursorPosition) + \n      emoji + \n      inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n\n      setThinking(prev => ({ ...prev, [position]: true }));\n\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      // Add file message to chat\n      setMessages(prev => [...prev, {\n        content: `📎 Uploaded file: ${file.name}`,\n        timestamp: new Date().toISOString(),\n        role: 'user',\n        fileId: data.id,\n      }]);\n\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      setMessages(prev => [...prev, {\n        content: `Failed to upload file: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error',\n      }]);\n    } finally {\n      setThinking(prev => ({ ...prev, [position]: false }));\n    }\n  };\n\n  const supportsFileUpload = () => {\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = currentModel?.name?.toLowerCase() || '';\n    \n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return currentModel?.capabilities?.includes('file_upload') || false;\n  };\n\n  const getModelLetter = (modelName) => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    return modelName.charAt(0).toUpperCase();\n  };\n\n  const getModelColor = (modelName) => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    return '#757575'; // Grey for unknown models\n  };\n\n  return (\n    <StyledPaper elevation={3}>\n      <ChatHeader>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Avatar sx={{ \n            bgcolor: selectedModel ? \n              getModelColor(models.find(m => m.id === selectedModel)?.name || '') :\n              'primary.main',\n            transition: 'all 0.3s ease',\n            fontWeight: 600\n          }}>\n            {selectedModel ? \n              getModelLetter(models.find(m => m.id === selectedModel)?.name || '') \n              : 'A'\n            }\n          </Avatar>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            <ConversationSelector size=\"small\">\n              <Select\n                value={currentConversationId}\n                onChange={(e) => setCurrentConversationId(e.target.value)}\n                variant=\"standard\"\n                sx={{ fontSize: '0.875rem' }}\n              >\n                {conversations.map((conv) => (\n                  <MenuItem key={conv.id} value={conv.id}>\n                    {conv.name || 'New Chat'}\n                  </MenuItem>\n                ))}\n              </Select>\n            </ConversationSelector>\n            {models.length > 0 ? (\n              <ModelSelector size=\"small\" sx={{ minWidth: 200 }}>\n                <Select\n                  value={selectedModel || ''}\n                  onChange={(e) => setSelectedModel(e.target.value)}\n                  variant=\"standard\"\n                  displayEmpty\n                >\n                  {models.map((model) => (\n                    <MenuItem key={model.id} value={model.id}>\n                      {model.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </ModelSelector>\n            ) : (\n              <Typography variant=\"caption\" color=\"error\">\n                No AI models available\n              </Typography>\n            )}\n          </Box>\n        </Box>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <IconButton \n            onClick={startNewConversation}\n            title=\"New Chat\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\n            <MoreIcon />\n          </IconButton>\n        </Box>\n      </ChatHeader>\n\n      <MessageList>\n        {messages.map((msg, index) => (\n          <Message key={index} align={msg.role === 'user' ? 'right' : 'left'}>\n            {msg.role === 'error' ? (\n              <ErrorMessage>\n                <CircularProgress size={16} color=\"error\" />\n                <Typography variant=\"body2\">{msg.content}</Typography>\n              </ErrorMessage>\n            ) : (\n              <>\n                <MessageContent align={msg.role === 'user' ? 'right' : 'left'}>\n                  <ReactMarkdown>{msg.content}</ReactMarkdown>\n                </MessageContent>\n                <Typography \n                  variant=\"caption\" \n                  color=\"textSecondary\" \n                  sx={{ \n                    mt: 0.5,\n                    opacity: 0.7,\n                    fontSize: '0.7rem',\n                  }}\n                >\n                  {new Date(msg.timestamp).toLocaleTimeString()}\n                </Typography>\n              </>\n            )}\n          </Message>\n        ))}\n        {streamingResponse && (\n          <Message align=\"left\">\n            <MessageContent align=\"left\">\n              <ReactMarkdown>{streamingResponse}</ReactMarkdown>\n            </MessageContent>\n          </Message>\n        )}\n        {isThinking && (\n          <Message align=\"left\">\n            <MessageContent align=\"left\">\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                <CircularProgress size={16} />\n                <Typography variant=\"body2\">Thinking...</Typography>\n                <IconButton \n                  size=\"small\" \n                  onClick={handleStopResponse}\n                  sx={{ \n                    ml: 1,\n                    bgcolor: 'error.main',\n                    color: 'error.contrastText',\n                    '&:hover': {\n                      bgcolor: 'error.dark',\n                    },\n                    width: 24,\n                    height: 24,\n                  }}\n                >\n                  <StopIcon sx={{ fontSize: 16 }} />\n                </IconButton>\n              </Box>\n            </MessageContent>\n          </Message>\n        )}\n        <div ref={messagesEndRef} />\n      </MessageList>\n\n      <ChatFooter>\n        <InputContainer>\n          <IconButton \n            size=\"small\" \n            onClick={(e) => setEmojiAnchor(e.currentTarget)}\n          >\n            <EmojiIcon />\n          </IconButton>\n          <Popover\n            open={Boolean(emojiAnchor)}\n            anchorEl={emojiAnchor}\n            onClose={() => setEmojiAnchor(null)}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            <Box sx={{ \n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n              }\n            }}>\n              <EmojiPicker\n                onEmojiClick={handleEmojiClick}\n                autoFocusSearch={false}\n                theme=\"dark\"\n                searchPlaceHolder=\"Search emojis...\"\n                width={320}\n                height={400}\n                previewConfig={{\n                  showPreview: false\n                }}\n              />\n            </Box>\n          </Popover>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleFileUpload}\n            accept=\"image/*,.pdf,.txt,.doc,.docx\"\n          />\n          <Tooltip title={\n            !selectedModel ? \"Please select a model first\" :\n            !supportsFileUpload() ? \"This model doesn't support file uploads\" :\n            \"Upload a file\"\n          }>\n            <span>\n              <IconButton \n                size=\"small\"\n                disabled={!supportsFileUpload()}\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <ImageIcon sx={{ \n                  color: theme => !supportsFileUpload() ? \n                    theme.palette.action.disabled : \n                    'inherit'\n                }} />\n              </IconButton>\n            </span>\n          </Tooltip>\n          <TextField\n            fullWidth\n            multiline\n            maxRows={4}\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            variant=\"standard\"\n            InputProps={{\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={handleSendMessage}\n                    disabled={!inputValue.trim() || !selectedModel}\n                    color=\"primary\"\n                  >\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </InputContainer>\n        {uploadError && (\n          <Typography \n            variant=\"caption\" \n            color=\"error\" \n            sx={{ mt: 1, display: 'block' }}\n            onClick={() => setUploadError('')}\n          >\n            {uploadError}\n          </Typography>\n        )}\n      </ChatFooter>\n\n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={() => setMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => {\n          startNewConversation();\n          setMenuAnchor(null);\n        }}>\n          New Chat\n        </MenuItem>\n        <MenuItem onClick={() => {\n          setMessages([]);\n          setMenuAnchor(null);\n        }}>\n          Clear Current Chat\n        </MenuItem>\n        <MenuItem onClick={() => {\n          setConversations(prev => prev.filter(conv => conv.id !== currentConversationId));\n          startNewConversation();\n          setMenuAnchor(null);\n        }}>\n          Delete Current Chat\n        </MenuItem>\n      </Menu>\n    </StyledPaper>\n  );\n}\n\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}