{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, Avatar, Menu, MenuItem, Select, FormControl, CircularProgress, InputAdornment } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreIcon, VideoCall as VideoIcon, OpenInFull as ExpandIcon, Image as ImageIcon, EmojiEmotions as EmojiIcon } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst ChatHeader = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = ChatHeader;\nconst MessageList = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.grey[50],\n  '&::-webkit-scrollbar': {\n    width: '4px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[300],\n    borderRadius: '4px'\n  }\n}));\n_c3 = MessageList;\nconst Message = styled(Box)(({\n  theme,\n  align\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2)\n}));\n_c4 = Message;\nconst MessageContent = styled(Box)(({\n  theme,\n  align\n}) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1]\n}));\n_c5 = MessageContent;\nconst ChatFooter = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c6 = ChatFooter;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.grey[50],\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1)\n}));\n_c7 = InputContainer;\nconst ErrorMessage = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.light,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c8 = ErrorMessage;\nconst ModelSelector = styled(FormControl)(({\n  theme\n}) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent'\n  }\n}));\n_c9 = ModelSelector;\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('qwen2.5-7b-instruct-1m');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingResponse]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    if (!models.length) {\n      setMessages(prev => [...prev, {\n        content: 'No AI models available in LM Studio. Please load a model first.',\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      return;\n    }\n    if (!selectedModel) {\n      var _models$;\n      setSelectedModel((_models$ = models[0]) === null || _models$ === void 0 ? void 0 : _models$.id);\n      return;\n    }\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user'\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInputValue('');\n    setThinking(prev => ({\n      ...prev,\n      [position]: true\n    }));\n    let retryCount = 0;\n    const maxRetries = 2;\n    const attemptSend = async () => {\n      try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 30000);\n\n        // First try an OPTIONS request to handle CORS\n        await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'OPTIONS',\n          signal: controller.signal,\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Origin': window.location.origin\n          }\n        });\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'POST',\n          signal: controller.signal,\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Origin': window.location.origin\n          },\n          body: JSON.stringify({\n            model: selectedModel,\n            messages: [...messages, newMessage].map(msg => ({\n              role: msg.role === 'error' ? 'assistant' : msg.role,\n              content: msg.content\n            })),\n            stream: true,\n            temperature: 0.7,\n            max_tokens: 2000\n          })\n        });\n        clearTimeout(timeoutId);\n        if (!response.ok) {\n          throw new Error(`Server returned ${response.status}: ${response.statusText}`);\n        }\n        if (!response.body) {\n          throw new Error('Server response has no body');\n        }\n        const reader = response.body.getReader();\n        let responseText = '';\n        try {\n          while (true) {\n            const {\n              done,\n              value\n            } = await reader.read();\n            if (done) break;\n            const chunk = new TextDecoder().decode(value);\n            const lines = chunk.split('\\n');\n            for (const line of lines) {\n              if (!line.trim() || line.includes('[DONE]')) continue;\n              try {\n                var _data$choices$, _data$choices$$delta;\n                const jsonStr = line.replace(/^data: /, '');\n                const data = JSON.parse(jsonStr);\n                if (data.choices && (_data$choices$ = data.choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$delta = _data$choices$.delta) !== null && _data$choices$$delta !== void 0 && _data$choices$$delta.content) {\n                  responseText += data.choices[0].delta.content;\n                  setStreamingResponses(prev => ({\n                    ...prev,\n                    [position]: responseText\n                  }));\n                }\n              } catch (e) {\n                console.warn('Error parsing chunk:', e);\n              }\n            }\n          }\n        } finally {\n          if (responseText) {\n            setMessages(prev => [...prev, {\n              content: responseText,\n              timestamp: new Date().toISOString(),\n              role: 'assistant'\n            }]);\n          }\n          setStreamingResponses(prev => ({\n            ...prev,\n            [position]: ''\n          }));\n          setThinking(prev => ({\n            ...prev,\n            [position]: false\n          }));\n        }\n        return true; // Success\n      } catch (error) {\n        console.error('Error:', error);\n        if (retryCount < maxRetries) {\n          retryCount++;\n          const delay = Math.min(1000 * Math.pow(2, retryCount), 4000);\n          console.log(`Retrying in ${delay / 1000} seconds... (Attempt ${retryCount}/${maxRetries})`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n          return false; // Retry needed\n        }\n        let errorMessage = 'Unable to get response from LM Studio. ';\n        if (error.name === 'AbortError') {\n          errorMessage += 'Request timed out. The model might be too slow or not responding.';\n        } else if (error.message === 'Failed to fetch') {\n          errorMessage += 'Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. A model is loaded';\n        } else {\n          errorMessage += error.message;\n        }\n        setMessages(prev => [...prev, {\n          content: errorMessage,\n          timestamp: new Date().toISOString(),\n          role: 'error'\n        }]);\n        setThinking(prev => ({\n          ...prev,\n          [position]: false\n        }));\n        return true; // Stop retrying\n      }\n    };\n\n    // Keep trying until success or max retries reached\n    while (!(await attemptSend())) {\n      // Continue retrying\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'primary.main'\n          },\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            fontWeight: \"bold\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), models.length > 0 ? /*#__PURE__*/_jsxDEV(ModelSelector, {\n            size: \"small\",\n            sx: {\n              minWidth: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedModel || '',\n              onChange: e => setSelectedModel(e.target.value),\n              variant: \"standard\",\n              displayEmpty: true,\n              children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: model.id,\n                children: model.name\n              }, model.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"No AI models available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          disabled: models.length === 0,\n          children: /*#__PURE__*/_jsxDEV(VideoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ExpandIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => setMenuAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        align: msg.role === 'user' ? 'right' : 'left',\n        children: msg.role === 'error' ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 16,\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n            align: msg.role === 'user' ? 'right' : 'left',\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 0.5,\n              opacity: 0.7,\n              fontSize: '0.7rem'\n            },\n            children: new Date(msg.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(Message, {\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(MessageContent, {\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: streamingResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), isThinking && /*#__PURE__*/_jsxDEV(Message, {\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(MessageContent, {\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Thinking...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 4,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSendMessage,\n                disabled: !inputValue.trim() || !selectedModel,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: () => setMenuAnchor(null),\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setMessages([]);\n          setMenuAnchor(null);\n        },\n        children: \"Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"z/21mnp/UOJxoX1pWPoh7yeqRwY=\");\n_c10 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessageList\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"MessageContent\");\n$RefreshReg$(_c6, \"ChatFooter\");\n$RefreshReg$(_c7, \"InputContainer\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"ModelSelector\");\n$RefreshReg$(_c10, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Paper","TextField","IconButton","Typography","Avatar","Menu","MenuItem","Select","FormControl","CircularProgress","InputAdornment","Send","SendIcon","MoreVert","MoreIcon","VideoCall","VideoIcon","OpenInFull","ExpandIcon","Image","ImageIcon","EmojiEmotions","EmojiIcon","ReactMarkdown","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","display","flexDirection","height","flex","overflow","backgroundColor","palette","background","paper","borderRadius","spacing","_c","ChatHeader","padding","alignItems","justifyContent","borderBottom","divider","_c2","MessageList","flexGrow","grey","width","_c3","Message","align","marginBottom","_c4","MessageContent","maxWidth","primary","main","color","contrastText","text","boxShadow","shadows","_c5","ChatFooter","borderTop","_c6","InputContainer","gap","_c7","ErrorMessage","error","light","_c8","ModelSelector","paddingBottom","borderBottomColor","_c9","ChatWindow","position","models","streamingResponse","isThinking","setStreamingResponses","setThinking","serverUrl","_s","messages","setMessages","inputValue","setInputValue","selectedModel","setSelectedModel","menuAnchor","setMenuAnchor","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","length","prev","content","timestamp","Date","toISOString","role","_models$","id","newMessage","retryCount","maxRetries","attemptSend","controller","AbortController","timeoutId","setTimeout","abort","fetch","method","signal","headers","window","location","origin","response","body","JSON","stringify","model","map","msg","stream","temperature","max_tokens","clearTimeout","ok","Error","status","statusText","reader","getReader","responseText","done","value","read","chunk","TextDecoder","decode","lines","split","line","includes","_data$choices$","_data$choices$$delta","jsonStr","replace","data","parse","choices","delta","e","console","warn","delay","Math","min","pow","log","Promise","resolve","errorMessage","name","message","handleKeyPress","event","key","shiftKey","preventDefault","elevation","children","sx","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","size","minWidth","onChange","target","displayEmpty","disabled","onClick","currentTarget","index","mt","opacity","fontSize","toLocaleTimeString","ref","fullWidth","multiline","maxRows","onKeyPress","placeholder","InputProps","disableUnderline","endAdornment","anchorEl","open","Boolean","onClose","_c10","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  Avatar,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  CircularProgress,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport {\r\n  Send as SendIcon,\r\n  MoreVert as MoreIcon,\r\n  VideoCall as VideoIcon,\r\n  OpenInFull as ExpandIcon,\r\n  Image as ImageIcon,\r\n  EmojiEmotions as EmojiIcon,\r\n} from '@mui/icons-material';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100%',\r\n  flex: 1,\r\n  overflow: 'hidden',\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderRadius: theme.spacing(3),\r\n}));\r\n\r\nconst ChatHeader = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\nconst MessageList = styled(Box)(({ theme }) => ({\r\n  flexGrow: 1,\r\n  overflow: 'auto',\r\n  padding: theme.spacing(2),\r\n  backgroundColor: theme.palette.grey[50],\r\n  '&::-webkit-scrollbar': {\r\n    width: '4px',\r\n  },\r\n  '&::-webkit-scrollbar-track': {\r\n    background: 'transparent',\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    background: theme.palette.grey[300],\r\n    borderRadius: '4px',\r\n  },\r\n}));\r\n\r\nconst Message = styled(Box)(({ theme, align }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst MessageContent = styled(Box)(({ theme, align }) => ({\r\n  maxWidth: '70%',\r\n  padding: theme.spacing(1.5),\r\n  borderRadius: theme.spacing(2),\r\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\r\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\r\n  boxShadow: theme.shadows[1],\r\n}));\r\n\r\nconst ChatFooter = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: `1px solid ${theme.palette.divider}`,\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nconst InputContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(1),\r\n  backgroundColor: theme.palette.grey[50],\r\n  borderRadius: theme.spacing(3),\r\n  padding: theme.spacing(1),\r\n}));\r\n\r\nconst ErrorMessage = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: theme.palette.error.light,\r\n  color: theme.palette.error.contrastText,\r\n  borderRadius: theme.spacing(1),\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(1),\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst ModelSelector = styled(FormControl)(({ theme }) => ({\r\n  '& .MuiSelect-select': {\r\n    paddingBottom: 0,\r\n  },\r\n  '& .MuiInput-underline:before': {\r\n    borderBottomColor: 'transparent',\r\n  },\r\n}));\r\n\r\nfunction ChatWindow({\r\n  position,\r\n  models,\r\n  streamingResponse,\r\n  isThinking,\r\n  setStreamingResponses,\r\n  setThinking,\r\n  serverUrl,\r\n}) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [selectedModel, setSelectedModel] = useState('qwen2.5-7b-instruct-1m');\r\n  const [menuAnchor, setMenuAnchor] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, streamingResponse]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n    if (!models.length) {\r\n      setMessages(prev => [\r\n        ...prev,\r\n        {\r\n          content: 'No AI models available in LM Studio. Please load a model first.',\r\n          timestamp: new Date().toISOString(),\r\n          role: 'error',\r\n        },\r\n      ]);\r\n      return;\r\n    }\r\n    if (!selectedModel) {\r\n      setSelectedModel(models[0]?.id);\r\n      return;\r\n    }\r\n\r\n    const newMessage = {\r\n      content: inputValue,\r\n      timestamp: new Date().toISOString(),\r\n      role: 'user',\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n    setInputValue('');\r\n    setThinking(prev => ({ ...prev, [position]: true }));\r\n\r\n    let retryCount = 0;\r\n    const maxRetries = 2;\r\n\r\n    const attemptSend = async () => {\r\n      try {\r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), 30000);\r\n\r\n        // First try an OPTIONS request to handle CORS\r\n        await fetch(`${serverUrl}/v1/chat/completions`, {\r\n          method: 'OPTIONS',\r\n          signal: controller.signal,\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Origin': window.location.origin\r\n          },\r\n        });\r\n\r\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\r\n          method: 'POST',\r\n          signal: controller.signal,\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Origin': window.location.origin\r\n          },\r\n          body: JSON.stringify({\r\n            model: selectedModel,\r\n            messages: [...messages, newMessage].map(msg => ({\r\n              role: msg.role === 'error' ? 'assistant' : msg.role,\r\n              content: msg.content\r\n            })),\r\n            stream: true,\r\n            temperature: 0.7,\r\n            max_tokens: 2000\r\n          }),\r\n        });\r\n\r\n        clearTimeout(timeoutId);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Server returned ${response.status}: ${response.statusText}`);\r\n        }\r\n\r\n        if (!response.body) {\r\n          throw new Error('Server response has no body');\r\n        }\r\n\r\n        const reader = response.body.getReader();\r\n        let responseText = '';\r\n\r\n        try {\r\n          while (true) {\r\n            const { done, value } = await reader.read();\r\n            if (done) break;\r\n\r\n            const chunk = new TextDecoder().decode(value);\r\n            const lines = chunk.split('\\n');\r\n\r\n            for (const line of lines) {\r\n              if (!line.trim() || line.includes('[DONE]')) continue;\r\n\r\n              try {\r\n                const jsonStr = line.replace(/^data: /, '');\r\n                const data = JSON.parse(jsonStr);\r\n\r\n                if (data.choices && data.choices[0]?.delta?.content) {\r\n                  responseText += data.choices[0].delta.content;\r\n                  setStreamingResponses(prev => ({\r\n                    ...prev,\r\n                    [position]: responseText\r\n                  }));\r\n                }\r\n              } catch (e) {\r\n                console.warn('Error parsing chunk:', e);\r\n              }\r\n            }\r\n          }\r\n        } finally {\r\n          if (responseText) {\r\n            setMessages(prev => [...prev, {\r\n              content: responseText,\r\n              timestamp: new Date().toISOString(),\r\n              role: 'assistant',\r\n            }]);\r\n          }\r\n          setStreamingResponses(prev => ({ ...prev, [position]: '' }));\r\n          setThinking(prev => ({ ...prev, [position]: false }));\r\n        }\r\n        return true; // Success\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        if (retryCount < maxRetries) {\r\n          retryCount++;\r\n          const delay = Math.min(1000 * Math.pow(2, retryCount), 4000);\r\n          console.log(`Retrying in ${delay/1000} seconds... (Attempt ${retryCount}/${maxRetries})`);\r\n          await new Promise(resolve => setTimeout(resolve, delay));\r\n          return false; // Retry needed\r\n        }\r\n        \r\n        let errorMessage = 'Unable to get response from LM Studio. ';\r\n        if (error.name === 'AbortError') {\r\n          errorMessage += 'Request timed out. The model might be too slow or not responding.';\r\n        } else if (error.message === 'Failed to fetch') {\r\n          errorMessage += 'Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. A model is loaded';\r\n        } else {\r\n          errorMessage += error.message;\r\n        }\r\n        \r\n        setMessages(prev => [\r\n          ...prev,\r\n          {\r\n            content: errorMessage,\r\n            timestamp: new Date().toISOString(),\r\n            role: 'error',\r\n          },\r\n        ]);\r\n        setThinking(prev => ({ ...prev, [position]: false }));\r\n        return true; // Stop retrying\r\n      }\r\n    };\r\n\r\n    // Keep trying until success or max retries reached\r\n    while (!(await attemptSend())) {\r\n      // Continue retrying\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledPaper elevation={3}>\r\n      <ChatHeader>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n          <Avatar sx={{ bgcolor: 'primary.main' }}>U</Avatar>\r\n          <Box>\r\n            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n              User Name\r\n            </Typography>\r\n            {models.length > 0 ? (\r\n              <ModelSelector size=\"small\" sx={{ minWidth: 200 }}>\r\n                <Select\r\n                  value={selectedModel || ''}\r\n                  onChange={(e) => setSelectedModel(e.target.value)}\r\n                  variant=\"standard\"\r\n                  displayEmpty\r\n                >\r\n                  {models.map((model) => (\r\n                    <MenuItem key={model.id} value={model.id}>\r\n                      {model.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </ModelSelector>\r\n            ) : (\r\n              <Typography variant=\"caption\" color=\"error\">\r\n                No AI models available\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <IconButton disabled={models.length === 0}>\r\n            <VideoIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ExpandIcon />\r\n          </IconButton>\r\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\r\n            <MoreIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </ChatHeader>\r\n\r\n      <MessageList>\r\n        {messages.map((msg, index) => (\r\n          <Message key={index} align={msg.role === 'user' ? 'right' : 'left'}>\r\n            {msg.role === 'error' ? (\r\n              <ErrorMessage>\r\n                <CircularProgress size={16} color=\"error\" />\r\n                <Typography variant=\"body2\">{msg.content}</Typography>\r\n              </ErrorMessage>\r\n            ) : (\r\n              <>\r\n                <MessageContent align={msg.role === 'user' ? 'right' : 'left'}>\r\n                  <ReactMarkdown>{msg.content}</ReactMarkdown>\r\n                </MessageContent>\r\n                <Typography \r\n                  variant=\"caption\" \r\n                  color=\"textSecondary\" \r\n                  sx={{ \r\n                    mt: 0.5,\r\n                    opacity: 0.7,\r\n                    fontSize: '0.7rem',\r\n                  }}\r\n                >\r\n                  {new Date(msg.timestamp).toLocaleTimeString()}\r\n                </Typography>\r\n              </>\r\n            )}\r\n          </Message>\r\n        ))}\r\n        {streamingResponse && (\r\n          <Message align=\"left\">\r\n            <MessageContent align=\"left\">\r\n              <ReactMarkdown>{streamingResponse}</ReactMarkdown>\r\n            </MessageContent>\r\n          </Message>\r\n        )}\r\n        {isThinking && (\r\n          <Message align=\"left\">\r\n            <MessageContent align=\"left\">\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <CircularProgress size={16} />\r\n                <Typography variant=\"body2\">Thinking...</Typography>\r\n              </Box>\r\n            </MessageContent>\r\n          </Message>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </MessageList>\r\n\r\n      <ChatFooter>\r\n        <InputContainer>\r\n          <IconButton size=\"small\">\r\n            <EmojiIcon />\r\n          </IconButton>\r\n          <IconButton size=\"small\">\r\n            <ImageIcon />\r\n          </IconButton>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            maxRows={4}\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your message...\"\r\n            variant=\"standard\"\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={handleSendMessage}\r\n                    disabled={!inputValue.trim() || !selectedModel}\r\n                    color=\"primary\"\r\n                  >\r\n                    <SendIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </InputContainer>\r\n      </ChatFooter>\r\n\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={Boolean(menuAnchor)}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        <MenuItem onClick={() => {\r\n          setMessages([]);\r\n          setMenuAnchor(null);\r\n        }}>\r\n          Clear Chat\r\n        </MenuItem>\r\n      </Menu>\r\n    </StyledPaper>\r\n  );\r\n}\r\n\r\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}