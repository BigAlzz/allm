{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, Avatar, Menu, MenuItem, Select, FormControl, CircularProgress, InputAdornment, Popover, Tooltip } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreIcon, VideoCall as VideoIcon, OpenInFull as ExpandIcon, Image as ImageIcon, EmojiEmotions as EmojiIcon, Stop as StopIcon, Add as AddIcon } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst ChatHeader = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = ChatHeader;\nconst MessageList = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px'\n  }\n}));\n_c3 = MessageList;\nconst Message = styled(Box)(({\n  theme,\n  align\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2)\n}));\n_c4 = Message;\nconst MessageContent = styled(Box)(({\n  theme,\n  align\n}) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0)\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5)\n  }\n}));\n_c5 = MessageContent;\nconst ChatFooter = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c6 = ChatFooter;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1)\n}));\n_c7 = InputContainer;\nconst ErrorMessage = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c8 = ErrorMessage;\nconst ModelSelector = styled(FormControl)(({\n  theme\n}) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent'\n  }\n}));\n_c9 = ModelSelector;\nconst ConversationSelector = styled(FormControl)(({\n  theme\n}) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem'\n  }\n}));\n_c10 = ConversationSelector;\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl\n}) {\n  _s();\n  var _models$find, _models$find2;\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{\n      id: 'new',\n      name: 'New Chat',\n      messages: []\n    }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState('new');\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingResponse]);\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      setSelectedModel((preferredModel === null || preferredModel === void 0 ? void 0 : preferredModel.id) || models[0].id);\n    }\n  }, [models, selectedModel]);\n  useEffect(() => {\n    const conversation = conversations.find(c => c.id === currentConversationId);\n    setMessages((conversation === null || conversation === void 0 ? void 0 : conversation.messages) || []);\n  }, [currentConversationId, conversations]);\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n  useEffect(() => {\n    if (currentConversationId) {\n      setConversations(prevConversations => prevConversations.map(conv => conv.id === currentConversationId ? {\n        ...conv,\n        messages\n      } : conv));\n    }\n  }, [messages, currentConversationId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: ''\n      }));\n    }\n  };\n  const startNewConversation = () => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Chat',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n    setMessages([]);\n  };\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n\n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 ? firstMessage.content.substring(0, 30) + '...' : firstMessage.content;\n    setConversations(prev => prev.map(conv => conv.id === id ? {\n      ...conv,\n      name\n    } : conv));\n  };\n  const updateStreamingResponse = useCallback(newContent => {\n    responseBuffer.current += newContent;\n\n    // Clear any pending timeout\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n\n    // Increase debounce to 1500ms (1.5 seconds) to significantly reduce update frequency\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 1500);\n  }, [position, setStreamingResponses]);\n\n  // Batch updates for message list scrolling with longer delay\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [messages, streamingResponse]);\n\n  // Add rate limiting for streaming updates\n  const processStreamingChunk = useCallback(chunk => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n      try {\n        var _data$choices$, _data$choices$$delta;\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n        if (data.choices && (_data$choices$ = data.choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$delta = _data$choices$.delta) !== null && _data$choices$$delta !== void 0 && _data$choices$$delta.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n    return accumulatedContent;\n  }, []);\n\n  // Clean up timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const processStreamingResponse = async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = '';\n    let lastUpdateTime = Date.now();\n    const updateInterval = 1500; // Update every 1.5 seconds\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        lastActivityTimestamp = Date.now();\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        responseText += newContent;\n        accumulatedContent += newContent;\n\n        // Only update UI if enough time has passed\n        if (Date.now() - lastUpdateTime >= updateInterval) {\n          updateStreamingResponse(accumulatedContent);\n          accumulatedContent = '';\n          lastUpdateTime = Date.now();\n        }\n      }\n\n      // Final update for any remaining content\n      if (accumulatedContent) {\n        updateStreamingResponse(accumulatedContent);\n      }\n      return responseText;\n    } catch (error) {\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  };\n  const attemptSend = async () => {\n    try {\n      abortControllerRef.current = new AbortController();\n      const timeoutId = setTimeout(() => {\n        if (abortControllerRef.current) {\n          abortControllerRef.current.abort();\n        }\n      }, 180000); // 3 minutes timeout\n\n      const headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Keep-Alive': 'timeout=180',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      };\n\n      // Only do health check if we haven't communicated with the server recently\n      const lastHealthCheck = parseInt(localStorage.getItem('lastHealthCheck') || '0');\n      const healthCheckInterval = 30000; // 30 seconds between health checks\n\n      if (Date.now() - lastHealthCheck > healthCheckInterval) {\n        try {\n          const healthCheck = await fetch(`${serverUrl}/v1/models`, {\n            method: 'GET',\n            headers,\n            signal: AbortSignal.timeout(5000),\n            cache: 'no-store'\n          });\n          if (!healthCheck.ok) {\n            throw new Error('Server is not responding properly');\n          }\n          localStorage.setItem('lastHealthCheck', Date.now().toString());\n        } catch (healthError) {\n          if (healthError.name !== 'AbortError') {\n            throw new Error('Cannot connect to server. Please check your connection.');\n          }\n        }\n      }\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        signal: abortControllerRef.current.signal,\n        headers,\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: [...messages, newMessage].map(msg => ({\n            role: msg.role === 'error' ? 'assistant' : msg.role,\n            content: msg.content\n          })),\n          stream: true,\n          temperature: 0.7,\n          max_tokens: 2000\n        }),\n        cache: 'no-store'\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\n      }\n      if (!response.body) {\n        throw new Error('Server response has no body');\n      }\n      const reader = response.body.getReader();\n      responseBuffer.current = '';\n      try {\n        const responseText = await processStreamingResponse(reader);\n        if (responseText) {\n          setMessages(prev => [...prev, {\n            content: responseText,\n            timestamp: new Date().toISOString(),\n            role: 'assistant'\n          }]);\n        }\n      } finally {\n        if (updateTimeoutRef.current) {\n          clearTimeout(updateTimeoutRef.current);\n          updateTimeoutRef.current = null;\n        }\n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: ''\n        }));\n        setThinking(prev => ({\n          ...prev,\n          [position]: false\n        }));\n        responseBuffer.current = '';\n        abortControllerRef.current = null;\n      }\n      return true;\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Request aborted');\n        return true;\n      }\n      console.error('Error:', error);\n      if (retryCount < maxRetries) {\n        retryCount++;\n        const delay = Math.min(1000 * Math.pow(2, retryCount), 8000);\n        console.log(`Retrying in ${delay / 1000} seconds... (Attempt ${retryCount}/${maxRetries})`);\n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: `Connection lost. Retrying in ${delay / 1000} seconds... (Attempt ${retryCount}/${maxRetries})`\n        }));\n        await new Promise(resolve => setTimeout(resolve, delay));\n        return false;\n      }\n      let errorMessage = 'Unable to get response from LM Studio. ';\n      if (error.name === 'AbortError') {\n        errorMessage += 'Request timed out. The model might be too slow or not responding.';\n      } else if (error.message === 'Failed to fetch') {\n        errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct\\n4. Your internet connection is stable`;\n      } else {\n        errorMessage += error.message;\n      }\n      setMessages(prev => [...prev, {\n        content: errorMessage,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n      return true;\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    if (!models.length) {\n      setMessages(prev => [...prev, {\n        content: 'No AI models available in LM Studio. Please load a model first.',\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      return;\n    }\n    if (!selectedModel) {\n      var _models$;\n      setSelectedModel((_models$ = models[0]) === null || _models$ === void 0 ? void 0 : _models$.id);\n      return;\n    }\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user'\n    };\n\n    // Batch state updates\n    requestAnimationFrame(() => {\n      setMessages(prev => [...prev, newMessage]);\n      setInputValue('');\n      setThinking(prev => ({\n        ...prev,\n        [position]: true\n      }));\n    });\n\n    // Update conversation name if this is the first message\n    if (messages.length === 0) {\n      updateConversationName(currentConversationId, newMessage);\n    }\n    let retryCount = 0;\n    const maxRetries = 3;\n    let retryAttempts = 0;\n    const maxRetryAttempts = 5;\n\n    // Keep trying until success or max retries reached\n    while (retryAttempts < maxRetryAttempts && !(await attemptSend())) {\n      retryAttempts++;\n    }\n  };\n  const handleEmojiClick = emojiData => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = inputValue.slice(0, cursorPosition) + emoji + inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n      setThinking(prev => ({\n        ...prev,\n        [position]: true\n      }));\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n      const data = await response.json();\n\n      // Add file message to chat\n      setMessages(prev => [...prev, {\n        content: `📎 Uploaded file: ${file.name}`,\n        timestamp: new Date().toISOString(),\n        role: 'user',\n        fileId: data.id\n      }]);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      setMessages(prev => [...prev, {\n        content: `Failed to upload file: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n    } finally {\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  const supportsFileUpload = () => {\n    var _currentModel$name, _currentModel$capabil;\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$name = currentModel.name) === null || _currentModel$name === void 0 ? void 0 : _currentModel$name.toLowerCase()) || '';\n\n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$capabil = currentModel.capabilities) === null || _currentModel$capabil === void 0 ? void 0 : _currentModel$capabil.includes('file_upload')) || false;\n  };\n  const getModelLetter = modelName => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    return modelName.charAt(0).toUpperCase();\n  };\n  const getModelColor = modelName => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    return '#757575'; // Grey for unknown models\n  };\n\n  // Memoize individual message components to prevent unnecessary re-renders\n  const MessageComponent = /*#__PURE__*/React.memo(({\n    message,\n    align\n  }) => /*#__PURE__*/_jsxDEV(Message, {\n    align: align,\n    children: message.role === 'error' ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 16,\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n        align: align,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        sx: {\n          mt: 0.5,\n          opacity: 0.7,\n          fontSize: '0.7rem'\n        },\n        children: new Date(message.timestamp).toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 5\n  }, this));\n\n  // Memoize streaming response component\n  const StreamingResponseComponent = /*#__PURE__*/React.memo(({\n    content\n  }) => content ? /*#__PURE__*/_jsxDEV(Message, {\n    align: \"left\",\n    children: /*#__PURE__*/_jsxDEV(MessageContent, {\n      align: \"left\",\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 662,\n    columnNumber: 7\n  }, this) : null);\n\n  // Memoize thinking indicator\n  const ThinkingIndicator = /*#__PURE__*/React.memo(({\n    isThinking,\n    onStop\n  }) => isThinking ? /*#__PURE__*/_jsxDEV(Message, {\n    align: \"left\",\n    children: /*#__PURE__*/_jsxDEV(MessageContent, {\n      align: \"left\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: onStop,\n          sx: {\n            ml: 1,\n            bgcolor: 'error.main',\n            color: 'error.contrastText',\n            '&:hover': {\n              bgcolor: 'error.dark'\n            },\n            width: 24,\n            height: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(StopIcon, {\n            sx: {\n              fontSize: 16\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 673,\n    columnNumber: 7\n  }, this) : null);\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: selectedModel ? getModelColor(((_models$find = models.find(m => m.id === selectedModel)) === null || _models$find === void 0 ? void 0 : _models$find.name) || '') : 'primary.main',\n            transition: 'all 0.3s ease',\n            fontWeight: 600\n          },\n          children: selectedModel ? getModelLetter(((_models$find2 = models.find(m => m.id === selectedModel)) === null || _models$find2 === void 0 ? void 0 : _models$find2.name) || '') : 'A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ConversationSelector, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: currentConversationId,\n              onChange: e => setCurrentConversationId(e.target.value),\n              variant: \"standard\",\n              sx: {\n                fontSize: '0.875rem'\n              },\n              children: conversations.map(conv => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: conv.id,\n                children: conv.name || 'New Chat'\n              }, conv.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), models.length > 0 ? /*#__PURE__*/_jsxDEV(ModelSelector, {\n            size: \"small\",\n            sx: {\n              minWidth: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedModel || '',\n              onChange: e => setSelectedModel(e.target.value),\n              variant: \"standard\",\n              displayEmpty: true,\n              children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: model.id,\n                children: model.name\n              }, model.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"No AI models available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: startNewConversation,\n          title: \"New Chat\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => setMenuAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageComponent, {\n        message: msg,\n        align: msg.role === 'user' ? 'right' : 'left'\n      }, `${msg.timestamp}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(StreamingResponseComponent, {\n        content: streamingResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThinkingIndicator, {\n        isThinking: isThinking,\n        onStop: handleStopResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: e => setEmojiAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: Boolean(emojiAnchor),\n          anchorEl: emojiAnchor,\n          onClose: () => setEmojiAnchor(null),\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n              onEmojiClick: handleEmojiClick,\n              autoFocusSearch: false,\n              theme: \"dark\",\n              searchPlaceHolder: \"Search emojis...\",\n              width: 320,\n              height: 400,\n              previewConfig: {\n                showPreview: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload,\n          accept: \"image/*,.pdf,.txt,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: !selectedModel ? \"Please select a model first\" : !supportsFileUpload() ? \"This model doesn't support file uploads\" : \"Upload a file\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              disabled: !supportsFileUpload(),\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n                sx: {\n                  color: theme => !supportsFileUpload() ? theme.palette.action.disabled : 'inherit'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 4,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSendMessage,\n                disabled: !inputValue.trim() || !selectedModel,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"error\",\n        sx: {\n          mt: 1,\n          display: 'block'\n        },\n        onClick: () => setUploadError(''),\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: () => setMenuAnchor(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          startNewConversation();\n          setMenuAnchor(null);\n        },\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setMessages([]);\n          setMenuAnchor(null);\n        },\n        children: \"Clear Current Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setConversations(prev => prev.filter(conv => conv.id !== currentConversationId));\n          startNewConversation();\n          setMenuAnchor(null);\n        },\n        children: \"Delete Current Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 701,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"afbouHAx9Qxi8vmqD+f+mWw4OyE=\");\n_c11 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessageList\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"MessageContent\");\n$RefreshReg$(_c6, \"ChatFooter\");\n$RefreshReg$(_c7, \"InputContainer\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"ModelSelector\");\n$RefreshReg$(_c10, \"ConversationSelector\");\n$RefreshReg$(_c11, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","Box","Paper","TextField","IconButton","Typography","Avatar","Menu","MenuItem","Select","FormControl","CircularProgress","InputAdornment","Popover","Tooltip","Send","SendIcon","MoreVert","MoreIcon","VideoCall","VideoIcon","OpenInFull","ExpandIcon","Image","ImageIcon","EmojiEmotions","EmojiIcon","Stop","StopIcon","Add","AddIcon","ReactMarkdown","styled","EmojiPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","display","flexDirection","height","flex","overflow","backgroundColor","palette","background","paper","borderRadius","spacing","_c","ChatHeader","padding","alignItems","justifyContent","borderBottom","divider","_c2","MessageList","flexGrow","default","width","grey","_c3","Message","align","marginBottom","_c4","MessageContent","maxWidth","primary","main","color","contrastText","text","boxShadow","shadows","margin","fontFamily","_c5","ChatFooter","borderTop","_c6","InputContainer","gap","_c7","ErrorMessage","error","dark","_c8","ModelSelector","paddingBottom","borderBottomColor","_c9","ConversationSelector","minWidth","fontSize","_c10","ChatWindow","position","models","streamingResponse","isThinking","setStreamingResponses","setThinking","serverUrl","_s","_models$find","_models$find2","messages","setMessages","conversations","setConversations","saved","localStorage","getItem","JSON","parse","id","name","currentConversationId","setCurrentConversationId","inputValue","setInputValue","selectedModel","setSelectedModel","menuAnchor","setMenuAnchor","emojiAnchor","setEmojiAnchor","uploadError","setUploadError","fileInputRef","messagesEndRef","abortControllerRef","responseBuffer","updateTimeoutRef","scrollToBottom","length","preferredModel","find","m","toLowerCase","includes","conversation","c","setItem","stringify","prevConversations","map","conv","_messagesEndRef$curre","current","scrollIntoView","behavior","handleStopResponse","abort","prev","startNewConversation","newId","Date","now","toString","newConversation","timestamp","toISOString","updateConversationName","firstMessage","content","substring","updateStreamingResponse","newContent","clearTimeout","setTimeout","scrollTimer","processStreamingChunk","chunk","lines","split","accumulatedContent","line","trim","_data$choices$","_data$choices$$delta","jsonStr","replace","data","choices","delta","e","console","warn","handleKeyPress","event","key","shiftKey","preventDefault","handleSendMessage","processStreamingResponse","reader","responseText","maxIterations","iterations","lastUpdateTime","updateInterval","done","value","read","lastActivityTimestamp","TextDecoder","decode","attemptSend","AbortController","timeoutId","headers","lastHealthCheck","parseInt","healthCheckInterval","healthCheck","fetch","method","signal","AbortSignal","timeout","cache","ok","Error","healthError","response","body","model","newMessage","msg","role","stream","temperature","max_tokens","errorText","status","getReader","log","retryCount","maxRetries","delay","Math","min","pow","Promise","resolve","errorMessage","message","_models$","requestAnimationFrame","retryAttempts","maxRetryAttempts","handleEmojiClick","emojiData","emoji","cursorPosition","document","querySelector","selectionStart","updatedText","slice","handleFileUpload","_event$target$files","file","target","files","size","formData","FormData","append","statusText","json","fileId","supportsFileUpload","_currentModel$name","_currentModel$capabil","currentModel","modelName","capabilities","getModelLetter","charAt","toUpperCase","getModelColor","MessageComponent","memo","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","mt","opacity","toLocaleTimeString","StreamingResponseComponent","ThinkingIndicator","onStop","onClick","ml","bgcolor","elevation","transition","fontWeight","onChange","displayEmpty","title","currentTarget","index","ref","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","border","onEmojiClick","autoFocusSearch","searchPlaceHolder","previewConfig","showPreview","type","style","accept","disabled","_fileInputRef$current","click","action","fullWidth","multiline","maxRows","onKeyPress","placeholder","InputProps","disableUnderline","endAdornment","filter","_c11","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  IconButton,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  Select,\n  FormControl,\n  CircularProgress,\n  InputAdornment,\n  Popover,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  MoreVert as MoreIcon,\n  VideoCall as VideoIcon,\n  OpenInFull as ExpandIcon,\n  Image as ImageIcon,\n  EmojiEmotions as EmojiIcon,\n  Stop as StopIcon,\n  Add as AddIcon,\n} from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3),\n}));\n\nconst ChatHeader = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n}));\n\nconst MessageList = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px',\n  },\n}));\n\nconst Message = styled(Box)(({ theme, align }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2),\n}));\n\nconst MessageContent = styled(Box)(({ theme, align }) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0,\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0),\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5),\n  },\n}));\n\nconst ChatFooter = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1),\n}));\n\nconst ErrorMessage = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n}));\n\nconst ModelSelector = styled(FormControl)(({ theme }) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0,\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent',\n  },\n}));\n\nconst ConversationSelector = styled(FormControl)(({ theme }) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem',\n  },\n}));\n\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl,\n}) {\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{ id: 'new', name: 'New Chat', messages: [] }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState('new');\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingResponse]);\n\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      setSelectedModel(preferredModel?.id || models[0].id);\n    }\n  }, [models, selectedModel]);\n\n  useEffect(() => {\n    const conversation = conversations.find(c => c.id === currentConversationId);\n    setMessages(conversation?.messages || []);\n  }, [currentConversationId, conversations]);\n\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n\n  useEffect(() => {\n    if (currentConversationId) {\n      setConversations(prevConversations => \n        prevConversations.map(conv => \n          conv.id === currentConversationId \n            ? { ...conv, messages } \n            : conv\n        )\n      );\n    }\n  }, [messages, currentConversationId]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({ ...prev, [position]: false }));\n      setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n    }\n  };\n\n  const startNewConversation = () => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Chat',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n    setMessages([]);\n  };\n\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n    \n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 \n      ? firstMessage.content.substring(0, 30) + '...'\n      : firstMessage.content;\n\n    setConversations(prev => \n      prev.map(conv => \n        conv.id === id \n          ? { ...conv, name } \n          : conv\n      )\n    );\n  };\n\n  const updateStreamingResponse = useCallback((newContent) => {\n    responseBuffer.current += newContent;\n    \n    // Clear any pending timeout\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n\n    // Increase debounce to 1500ms (1.5 seconds) to significantly reduce update frequency\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 1500);\n  }, [position, setStreamingResponses]);\n\n  // Batch updates for message list scrolling with longer delay\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [messages, streamingResponse]);\n\n  // Add rate limiting for streaming updates\n  const processStreamingChunk = useCallback((chunk) => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n\n      try {\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n\n        if (data.choices && data.choices[0]?.delta?.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n\n    return accumulatedContent;\n  }, []);\n\n  // Clean up timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const processStreamingResponse = async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = '';\n    let lastUpdateTime = Date.now();\n    const updateInterval = 1500; // Update every 1.5 seconds\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        lastActivityTimestamp = Date.now();\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        responseText += newContent;\n        accumulatedContent += newContent;\n\n        // Only update UI if enough time has passed\n        if (Date.now() - lastUpdateTime >= updateInterval) {\n          updateStreamingResponse(accumulatedContent);\n          accumulatedContent = '';\n          lastUpdateTime = Date.now();\n        }\n      }\n\n      // Final update for any remaining content\n      if (accumulatedContent) {\n        updateStreamingResponse(accumulatedContent);\n      }\n\n      return responseText;\n    } catch (error) {\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  };\n\n  const attemptSend = async () => {\n    try {\n      abortControllerRef.current = new AbortController();\n      const timeoutId = setTimeout(() => {\n        if (abortControllerRef.current) {\n          abortControllerRef.current.abort();\n        }\n      }, 180000); // 3 minutes timeout\n\n      const headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Keep-Alive': 'timeout=180',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      };\n\n      // Only do health check if we haven't communicated with the server recently\n      const lastHealthCheck = parseInt(localStorage.getItem('lastHealthCheck') || '0');\n      const healthCheckInterval = 30000; // 30 seconds between health checks\n\n      if (Date.now() - lastHealthCheck > healthCheckInterval) {\n        try {\n          const healthCheck = await fetch(`${serverUrl}/v1/models`, {\n            method: 'GET',\n            headers,\n            signal: AbortSignal.timeout(5000),\n            cache: 'no-store'\n          });\n          \n          if (!healthCheck.ok) {\n            throw new Error('Server is not responding properly');\n          }\n          localStorage.setItem('lastHealthCheck', Date.now().toString());\n        } catch (healthError) {\n          if (healthError.name !== 'AbortError') {\n            throw new Error('Cannot connect to server. Please check your connection.');\n          }\n        }\n      }\n\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        signal: abortControllerRef.current.signal,\n        headers,\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: [...messages, newMessage].map(msg => ({\n            role: msg.role === 'error' ? 'assistant' : msg.role,\n            content: msg.content\n          })),\n          stream: true,\n          temperature: 0.7,\n          max_tokens: 2000\n        }),\n        cache: 'no-store'\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\n      }\n\n      if (!response.body) {\n        throw new Error('Server response has no body');\n      }\n\n      const reader = response.body.getReader();\n      responseBuffer.current = '';\n      \n      try {\n        const responseText = await processStreamingResponse(reader);\n        \n        if (responseText) {\n          setMessages(prev => [...prev, {\n            content: responseText,\n            timestamp: new Date().toISOString(),\n            role: 'assistant',\n          }]);\n        }\n      } finally {\n        if (updateTimeoutRef.current) {\n          clearTimeout(updateTimeoutRef.current);\n          updateTimeoutRef.current = null;\n        }\n\n        setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n        setThinking(prev => ({ ...prev, [position]: false }));\n        responseBuffer.current = '';\n        abortControllerRef.current = null;\n      }\n      return true;\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Request aborted');\n        return true;\n      }\n\n      console.error('Error:', error);\n      if (retryCount < maxRetries) {\n        retryCount++;\n        const delay = Math.min(1000 * Math.pow(2, retryCount), 8000);\n        console.log(`Retrying in ${delay/1000} seconds... (Attempt ${retryCount}/${maxRetries})`);\n        \n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: `Connection lost. Retrying in ${delay/1000} seconds... (Attempt ${retryCount}/${maxRetries})`\n        }));\n        \n        await new Promise(resolve => setTimeout(resolve, delay));\n        return false;\n      }\n      \n      let errorMessage = 'Unable to get response from LM Studio. ';\n      if (error.name === 'AbortError') {\n        errorMessage += 'Request timed out. The model might be too slow or not responding.';\n      } else if (error.message === 'Failed to fetch') {\n        errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct\\n4. Your internet connection is stable`;\n      } else {\n        errorMessage += error.message;\n      }\n      \n      setMessages(prev => [\n        ...prev,\n        {\n          content: errorMessage,\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n      setThinking(prev => ({ ...prev, [position]: false }));\n      return true;\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    if (!models.length) {\n      setMessages(prev => [\n        ...prev,\n        {\n          content: 'No AI models available in LM Studio. Please load a model first.',\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n      return;\n    }\n    if (!selectedModel) {\n      setSelectedModel(models[0]?.id);\n      return;\n    }\n\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user',\n    };\n\n    // Batch state updates\n    requestAnimationFrame(() => {\n      setMessages(prev => [...prev, newMessage]);\n      setInputValue('');\n      setThinking(prev => ({ ...prev, [position]: true }));\n    });\n\n    // Update conversation name if this is the first message\n    if (messages.length === 0) {\n      updateConversationName(currentConversationId, newMessage);\n    }\n\n    let retryCount = 0;\n    const maxRetries = 3;\n    let retryAttempts = 0;\n    const maxRetryAttempts = 5;\n\n    // Keep trying until success or max retries reached\n    while (retryAttempts < maxRetryAttempts && !(await attemptSend())) {\n      retryAttempts++;\n    }\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = \n      inputValue.slice(0, cursorPosition) + \n      emoji + \n      inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n\n      setThinking(prev => ({ ...prev, [position]: true }));\n\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      // Add file message to chat\n      setMessages(prev => [...prev, {\n        content: `📎 Uploaded file: ${file.name}`,\n        timestamp: new Date().toISOString(),\n        role: 'user',\n        fileId: data.id,\n      }]);\n\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      setMessages(prev => [...prev, {\n        content: `Failed to upload file: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error',\n      }]);\n    } finally {\n      setThinking(prev => ({ ...prev, [position]: false }));\n    }\n  };\n\n  const supportsFileUpload = () => {\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = currentModel?.name?.toLowerCase() || '';\n    \n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return currentModel?.capabilities?.includes('file_upload') || false;\n  };\n\n  const getModelLetter = (modelName) => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    return modelName.charAt(0).toUpperCase();\n  };\n\n  const getModelColor = (modelName) => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    return '#757575'; // Grey for unknown models\n  };\n\n  // Memoize individual message components to prevent unnecessary re-renders\n  const MessageComponent = React.memo(({ message, align }) => (\n    <Message align={align}>\n      {message.role === 'error' ? (\n        <ErrorMessage>\n          <CircularProgress size={16} color=\"error\" />\n          <Typography variant=\"body2\">{message.content}</Typography>\n        </ErrorMessage>\n      ) : (\n        <>\n          <MessageContent align={align}>\n            <ReactMarkdown>{message.content}</ReactMarkdown>\n          </MessageContent>\n          <Typography \n            variant=\"caption\" \n            color=\"textSecondary\" \n            sx={{ \n              mt: 0.5,\n              opacity: 0.7,\n              fontSize: '0.7rem',\n            }}\n          >\n            {new Date(message.timestamp).toLocaleTimeString()}\n          </Typography>\n        </>\n      )}\n    </Message>\n  ));\n\n  // Memoize streaming response component\n  const StreamingResponseComponent = React.memo(({ content }) => (\n    content ? (\n      <Message align=\"left\">\n        <MessageContent align=\"left\">\n          <ReactMarkdown>{content}</ReactMarkdown>\n        </MessageContent>\n      </Message>\n    ) : null\n  ));\n\n  // Memoize thinking indicator\n  const ThinkingIndicator = React.memo(({ isThinking, onStop }) => (\n    isThinking ? (\n      <Message align=\"left\">\n        <MessageContent align=\"left\">\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <CircularProgress size={16} />\n            <Typography variant=\"body2\">Thinking...</Typography>\n            <IconButton \n              size=\"small\" \n              onClick={onStop}\n              sx={{ \n                ml: 1,\n                bgcolor: 'error.main',\n                color: 'error.contrastText',\n                '&:hover': {\n                  bgcolor: 'error.dark',\n                },\n                width: 24,\n                height: 24,\n              }}\n            >\n              <StopIcon sx={{ fontSize: 16 }} />\n            </IconButton>\n          </Box>\n        </MessageContent>\n      </Message>\n    ) : null\n  ));\n\n  return (\n    <StyledPaper elevation={3}>\n      <ChatHeader>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Avatar sx={{ \n            bgcolor: selectedModel ? \n              getModelColor(models.find(m => m.id === selectedModel)?.name || '') :\n              'primary.main',\n            transition: 'all 0.3s ease',\n            fontWeight: 600\n          }}>\n            {selectedModel ? \n              getModelLetter(models.find(m => m.id === selectedModel)?.name || '') \n              : 'A'\n            }\n          </Avatar>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            <ConversationSelector size=\"small\">\n              <Select\n                value={currentConversationId}\n                onChange={(e) => setCurrentConversationId(e.target.value)}\n                variant=\"standard\"\n                sx={{ fontSize: '0.875rem' }}\n              >\n                {conversations.map((conv) => (\n                  <MenuItem key={conv.id} value={conv.id}>\n                    {conv.name || 'New Chat'}\n                  </MenuItem>\n                ))}\n              </Select>\n            </ConversationSelector>\n            {models.length > 0 ? (\n              <ModelSelector size=\"small\" sx={{ minWidth: 200 }}>\n                <Select\n                  value={selectedModel || ''}\n                  onChange={(e) => setSelectedModel(e.target.value)}\n                  variant=\"standard\"\n                  displayEmpty\n                >\n                  {models.map((model) => (\n                    <MenuItem key={model.id} value={model.id}>\n                      {model.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </ModelSelector>\n            ) : (\n              <Typography variant=\"caption\" color=\"error\">\n                No AI models available\n              </Typography>\n            )}\n          </Box>\n        </Box>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <IconButton \n            onClick={startNewConversation}\n            title=\"New Chat\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\n            <MoreIcon />\n          </IconButton>\n        </Box>\n      </ChatHeader>\n\n      <MessageList>\n        {messages.map((msg, index) => (\n          <MessageComponent\n            key={`${msg.timestamp}-${index}`}\n            message={msg}\n            align={msg.role === 'user' ? 'right' : 'left'}\n          />\n        ))}\n        <StreamingResponseComponent content={streamingResponse} />\n        <ThinkingIndicator \n          isThinking={isThinking} \n          onStop={handleStopResponse}\n        />\n        <div ref={messagesEndRef} />\n      </MessageList>\n\n      <ChatFooter>\n        <InputContainer>\n          <IconButton \n            size=\"small\" \n            onClick={(e) => setEmojiAnchor(e.currentTarget)}\n          >\n            <EmojiIcon />\n          </IconButton>\n          <Popover\n            open={Boolean(emojiAnchor)}\n            anchorEl={emojiAnchor}\n            onClose={() => setEmojiAnchor(null)}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            <Box sx={{ \n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n              }\n            }}>\n              <EmojiPicker\n                onEmojiClick={handleEmojiClick}\n                autoFocusSearch={false}\n                theme=\"dark\"\n                searchPlaceHolder=\"Search emojis...\"\n                width={320}\n                height={400}\n                previewConfig={{\n                  showPreview: false\n                }}\n              />\n            </Box>\n          </Popover>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleFileUpload}\n            accept=\"image/*,.pdf,.txt,.doc,.docx\"\n          />\n          <Tooltip title={\n            !selectedModel ? \"Please select a model first\" :\n            !supportsFileUpload() ? \"This model doesn't support file uploads\" :\n            \"Upload a file\"\n          }>\n            <span>\n              <IconButton \n                size=\"small\"\n                disabled={!supportsFileUpload()}\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <ImageIcon sx={{ \n                  color: theme => !supportsFileUpload() ? \n                    theme.palette.action.disabled : \n                    'inherit'\n                }} />\n              </IconButton>\n            </span>\n          </Tooltip>\n          <TextField\n            fullWidth\n            multiline\n            maxRows={4}\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            variant=\"standard\"\n            InputProps={{\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={handleSendMessage}\n                    disabled={!inputValue.trim() || !selectedModel}\n                    color=\"primary\"\n                  >\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </InputContainer>\n        {uploadError && (\n          <Typography \n            variant=\"caption\" \n            color=\"error\" \n            sx={{ mt: 1, display: 'block' }}\n            onClick={() => setUploadError('')}\n          >\n            {uploadError}\n          </Typography>\n        )}\n      </ChatFooter>\n\n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={() => setMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => {\n          startNewConversation();\n          setMenuAnchor(null);\n        }}>\n          New Chat\n        </MenuItem>\n        <MenuItem onClick={() => {\n          setMessages([]);\n          setMenuAnchor(null);\n        }}>\n          Clear Current Chat\n        </MenuItem>\n        <MenuItem onClick={() => {\n          setConversations(prev => prev.filter(conv => conv.id !== currentConversationId));\n          startNewConversation();\n          setMenuAnchor(null);\n        }}>\n          Delete Current Chat\n        </MenuItem>\n      </Menu>\n    </StyledPaper>\n  );\n}\n\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}