{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, Avatar, Menu, MenuItem, Select, FormControl, CircularProgress, InputAdornment, Popover, Tooltip } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreIcon, VideoCall as VideoIcon, OpenInFull as ExpandIcon, Image as ImageIcon, EmojiEmotions as EmojiIcon, Stop as StopIcon, Add as AddIcon } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst ChatHeader = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = ChatHeader;\nconst MessageList = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px'\n  }\n}));\n_c3 = MessageList;\nconst Message = styled(Box)(({\n  theme,\n  align\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2)\n}));\n_c4 = Message;\nconst MessageContent = styled(Box)(({\n  theme,\n  align\n}) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0)\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5)\n  }\n}));\n_c5 = MessageContent;\nconst ChatFooter = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c6 = ChatFooter;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1)\n}));\n_c7 = InputContainer;\nconst ErrorMessage = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c8 = ErrorMessage;\nconst ModelSelector = styled(FormControl)(({\n  theme\n}) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent'\n  }\n}));\n_c9 = ModelSelector;\nconst ConversationSelector = styled(FormControl)(({\n  theme\n}) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem'\n  }\n}));\n_c10 = ConversationSelector;\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl\n}) {\n  _s();\n  var _models$find;\n  // Move startNewConversation definition before any hooks that use it\n  const startNewConversation = useCallback(() => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Chat',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n  }, []); // Empty dependency array since it only uses setState functions\n\n  // Initialize state\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{\n      id: 'new',\n      name: 'New Chat',\n      messages: []\n    }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState('new');\n\n  // Remove separate messages state and use conversation messages directly\n  const currentConversation = useMemo(() => conversations.find(c => c.id === currentConversationId) || conversations[0], [conversations, currentConversationId]);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  // Add health check state\n  const [lastHealthCheck, setLastHealthCheck] = useState(() => {\n    return parseInt(localStorage.getItem('lastHealthCheck') || '0');\n  });\n\n  // Throttle health checks\n  const checkServerHealth = useCallback(async headers => {\n    const now = Date.now();\n    const healthCheckInterval = 60000; // Increase to 60 seconds between health checks\n\n    // Only check if enough time has passed\n    if (now - lastHealthCheck > healthCheckInterval) {\n      try {\n        const healthCheck = await fetch(`${serverUrl}/v1/models`, {\n          method: 'GET',\n          headers,\n          signal: AbortSignal.timeout(5000),\n          cache: 'no-store'\n        });\n        if (!healthCheck.ok) {\n          throw new Error('Server is not responding properly');\n        }\n        setLastHealthCheck(now);\n        localStorage.setItem('lastHealthCheck', now.toString());\n      } catch (healthError) {\n        if (healthError.name !== 'AbortError') {\n          throw new Error('Cannot connect to server. Please check your connection.');\n        }\n      }\n    }\n  }, [serverUrl, lastHealthCheck]);\n\n  // Update conversation messages\n  const updateConversationMessages = useCallback(newMessages => {\n    setConversations(prev => prev.map(conv => conv.id === currentConversationId ? {\n      ...conv,\n      messages: newMessages\n    } : conv));\n  }, [currentConversationId]);\n\n  // Handle conversation switch\n  const handleConversationChange = useCallback(newId => {\n    // Clear any ongoing streaming\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n    setCurrentConversationId(newId);\n  }, [position, setStreamingResponses, setThinking]);\n\n  // Optimize streaming updates\n  const updateStreamingResponse = useCallback(newContent => {\n    responseBuffer.current = newContent;\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 1500); // 1.5 second debounce\n  }, [position, setStreamingResponses]);\n\n  // Update handleSendMessage to use the new health check\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || !selectedModel) return;\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user'\n    };\n\n    // Update conversation with new message\n    const updatedMessages = [...currentConversation.messages, newMessage];\n    updateConversationMessages(updatedMessages);\n    setInputValue('');\n    setThinking(prev => ({\n      ...prev,\n      [position]: true\n    }));\n\n    // Update conversation name if this is the first message\n    if (currentConversation.messages.length === 0) {\n      updateConversationName(currentConversationId, newMessage);\n    }\n    try {\n      abortControllerRef.current = new AbortController();\n      const timeoutId = setTimeout(() => {\n        if (abortControllerRef.current) {\n          abortControllerRef.current.abort();\n        }\n      }, 180000); // 3 minutes timeout\n\n      const headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Keep-Alive': 'timeout=180',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      };\n\n      // Perform health check with throttling\n      await checkServerHealth(headers);\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        signal: abortControllerRef.current.signal,\n        headers,\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: updatedMessages.map(msg => ({\n            role: msg.role === 'error' ? 'assistant' : msg.role,\n            content: msg.content\n          })),\n          stream: true,\n          temperature: 0.7,\n          max_tokens: 2000\n        }),\n        cache: 'no-store'\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\n      }\n      if (!response.body) {\n        throw new Error('Server response has no body');\n      }\n      const reader = response.body.getReader();\n      responseBuffer.current = '';\n      try {\n        const responseText = await processStreamingResponse(reader);\n        if (responseText) {\n          const updatedMessagesWithResponse = [...updatedMessages, {\n            content: responseText,\n            timestamp: new Date().toISOString(),\n            role: 'assistant'\n          }];\n          updateConversationMessages(updatedMessagesWithResponse);\n        }\n      } finally {\n        if (updateTimeoutRef.current) {\n          clearTimeout(updateTimeoutRef.current);\n          updateTimeoutRef.current = null;\n        }\n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: ''\n        }));\n        setThinking(prev => ({\n          ...prev,\n          [position]: false\n        }));\n        responseBuffer.current = '';\n        abortControllerRef.current = null;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'Unable to get response from LM Studio. ';\n      if (error.name === 'AbortError') {\n        errorMessage += 'Request timed out. The model might be too slow or not responding.';\n      } else if (error.message === 'Failed to fetch') {\n        errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct\\n4. Your internet connection is stable`;\n      } else {\n        errorMessage += error.message;\n      }\n      updateConversationMessages([...updatedMessages, {\n        content: errorMessage,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      setSelectedModel((preferredModel === null || preferredModel === void 0 ? void 0 : preferredModel.id) || models[0].id);\n    }\n  }, [models, selectedModel]);\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n  useEffect(() => {\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n  }, [currentConversationId, position, setStreamingResponses]);\n  const handleClearChat = useCallback(() => {\n    updateConversationMessages([]); // Clear messages in current conversation\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  }, [position, setStreamingResponses, setThinking, updateConversationMessages]);\n  const handleMenuAction = useCallback(action => {\n    switch (action) {\n      case 'new':\n        startNewConversation();\n        break;\n      case 'clear':\n        handleClearChat();\n        break;\n      case 'delete':\n        setConversations(prev => prev.filter(conv => conv.id !== currentConversationId));\n        startNewConversation();\n        break;\n      default:\n        break;\n    }\n    setMenuAnchor(null);\n  }, [currentConversationId, handleClearChat, startNewConversation]);\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: ''\n      }));\n    }\n  };\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n\n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 ? firstMessage.content.substring(0, 30) + '...' : firstMessage.content;\n    setConversations(prev => prev.map(conv => conv.id === id ? {\n      ...conv,\n      name\n    } : conv));\n  };\n\n  // Batch updates for message list scrolling with longer delay\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  // Add rate limiting for streaming updates\n  const processStreamingChunk = useCallback(chunk => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n      try {\n        var _data$choices$, _data$choices$$delta;\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n        if (data.choices && (_data$choices$ = data.choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$delta = _data$choices$.delta) !== null && _data$choices$$delta !== void 0 && _data$choices$$delta.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n    return accumulatedContent;\n  }, []);\n\n  // Clean up timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const processStreamingResponse = async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = '';\n    let lastUpdateTime = Date.now();\n    const updateInterval = 1500; // Update every 1.5 seconds\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        responseText += newContent;\n        accumulatedContent += newContent;\n\n        // Only update UI if enough time has passed\n        if (Date.now() - lastUpdateTime >= updateInterval) {\n          updateStreamingResponse(accumulatedContent);\n          accumulatedContent = '';\n          lastUpdateTime = Date.now();\n        }\n      }\n\n      // Final update for any remaining content\n      if (accumulatedContent) {\n        updateStreamingResponse(accumulatedContent);\n      }\n      return responseText;\n    } catch (error) {\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  };\n  const handleEmojiClick = emojiData => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = inputValue.slice(0, cursorPosition) + emoji + inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n      setThinking(prev => ({\n        ...prev,\n        [position]: true\n      }));\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n      const data = await response.json();\n\n      // Add file message to chat\n      updateConversationMessages([...currentConversation.messages, {\n        content: `📎 Uploaded file: ${file.name}`,\n        timestamp: new Date().toISOString(),\n        role: 'user',\n        fileId: data.id\n      }]);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      updateConversationMessages([...currentConversation.messages, {\n        content: `Failed to upload file: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n    } finally {\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  const supportsFileUpload = () => {\n    var _currentModel$name, _currentModel$capabil;\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$name = currentModel.name) === null || _currentModel$name === void 0 ? void 0 : _currentModel$name.toLowerCase()) || '';\n\n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$capabil = currentModel.capabilities) === null || _currentModel$capabil === void 0 ? void 0 : _currentModel$capabil.includes('file_upload')) || false;\n  };\n  const getModelLetter = modelName => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    return modelName.charAt(0).toUpperCase();\n  };\n  const getModelColor = modelName => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    return '#757575'; // Grey for unknown models\n  };\n  const getModelImage = modelName => {\n    if (!modelName) return null;\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return './Images/Deepseek.png';\n    if (name.includes('qwen')) return './Images/Qwen2.png';\n    if (name.includes('starcoder')) return './Images/StarCoder.jpg';\n    if (name.includes('gemma')) return './Images/Gemma.png';\n    return null;\n  };\n\n  // Memoize individual message components to prevent unnecessary re-renders\n  const MessageComponent = /*#__PURE__*/React.memo(({\n    message,\n    align\n  }) => /*#__PURE__*/_jsxDEV(Message, {\n    align: align,\n    children: message.role === 'error' ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 16,\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n        align: align,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"textSecondary\",\n        sx: {\n          mt: 0.5,\n          opacity: 0.7,\n          fontSize: '0.7rem'\n        },\n        children: new Date(message.timestamp).toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 679,\n    columnNumber: 5\n  }, this));\n\n  // Memoize streaming response component\n  const StreamingResponseComponent = /*#__PURE__*/React.memo(({\n    content\n  }) => content ? /*#__PURE__*/_jsxDEV(Message, {\n    align: \"left\",\n    children: /*#__PURE__*/_jsxDEV(MessageContent, {\n      align: \"left\",\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 709,\n    columnNumber: 7\n  }, this) : null);\n\n  // Memoize thinking indicator\n  const ThinkingIndicator = /*#__PURE__*/React.memo(({\n    isThinking,\n    onStop\n  }) => isThinking ? /*#__PURE__*/_jsxDEV(Message, {\n    align: \"left\",\n    children: /*#__PURE__*/_jsxDEV(MessageContent, {\n      align: \"left\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: onStop,\n          sx: {\n            ml: 1,\n            bgcolor: 'error.main',\n            color: 'error.contrastText',\n            '&:hover': {\n              bgcolor: 'error.dark'\n            },\n            width: 24,\n            height: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(StopIcon, {\n            sx: {\n              fontSize: 16\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 720,\n    columnNumber: 7\n  }, this) : null);\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: selectedModel ? getModelColor(((_models$find = models.find(m => m.id === selectedModel)) === null || _models$find === void 0 ? void 0 : _models$find.name) || '') : 'primary.main',\n            transition: 'all 0.3s ease',\n            fontWeight: 600,\n            width: 40,\n            height: 40,\n            '& img': {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            }\n          },\n          children: selectedModel ? (_models$find2 => {\n            const modelName = ((_models$find2 = models.find(m => m.id === selectedModel)) === null || _models$find2 === void 0 ? void 0 : _models$find2.name) || '';\n            const imagePath = getModelImage(modelName);\n            return imagePath ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePath,\n              alt: modelName,\n              style: {\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 19\n            }, this) : getModelLetter(modelName);\n          })() : 'A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ConversationSelector, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: currentConversationId,\n              onChange: e => handleConversationChange(e.target.value),\n              variant: \"standard\",\n              sx: {\n                fontSize: '0.875rem'\n              },\n              children: conversations.map(conv => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: conv.id,\n                children: conv.name || 'New Chat'\n              }, conv.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 13\n          }, this), models.length > 0 ? /*#__PURE__*/_jsxDEV(ModelSelector, {\n            size: \"small\",\n            sx: {\n              minWidth: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedModel || '',\n              onChange: e => setSelectedModel(e.target.value),\n              variant: \"standard\",\n              displayEmpty: true,\n              children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: model.id,\n                children: model.name\n              }, model.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"No AI models available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: startNewConversation,\n          title: \"New Chat\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => setMenuAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      children: [currentConversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageComponent, {\n        message: msg,\n        align: msg.role === 'user' ? 'right' : 'left'\n      }, `${msg.timestamp}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(StreamingResponseComponent, {\n        content: streamingResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThinkingIndicator, {\n        isThinking: isThinking,\n        onStop: handleStopResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: e => setEmojiAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: Boolean(emojiAnchor),\n          anchorEl: emojiAnchor,\n          onClose: () => setEmojiAnchor(null),\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n              onEmojiClick: handleEmojiClick,\n              autoFocusSearch: false,\n              theme: \"dark\",\n              searchPlaceHolder: \"Search emojis...\",\n              width: 320,\n              height: 400,\n              previewConfig: {\n                showPreview: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload,\n          accept: \"image/*,.pdf,.txt,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: !selectedModel ? \"Please select a model first\" : !supportsFileUpload() ? \"This model doesn't support file uploads\" : \"Upload a file\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              disabled: !supportsFileUpload(),\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n                sx: {\n                  color: theme => !supportsFileUpload() ? theme.palette.action.disabled : 'inherit'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 4,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSendMessage,\n                disabled: !inputValue.trim() || !selectedModel,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 943,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"error\",\n        sx: {\n          mt: 1,\n          display: 'block'\n        },\n        onClick: () => setUploadError(''),\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: () => setMenuAnchor(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('new'),\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('clear'),\n        children: \"Clear Current Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('delete'),\n        children: \"Delete Current Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 748,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"iSVEWCj6PDSLu3LbB3S6XNScFuM=\");\n_c11 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessageList\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"MessageContent\");\n$RefreshReg$(_c6, \"ChatFooter\");\n$RefreshReg$(_c7, \"InputContainer\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"ModelSelector\");\n$RefreshReg$(_c10, \"ConversationSelector\");\n$RefreshReg$(_c11, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","Box","Paper","TextField","IconButton","Typography","Avatar","Menu","MenuItem","Select","FormControl","CircularProgress","InputAdornment","Popover","Tooltip","Send","SendIcon","MoreVert","MoreIcon","VideoCall","VideoIcon","OpenInFull","ExpandIcon","Image","ImageIcon","EmojiEmotions","EmojiIcon","Stop","StopIcon","Add","AddIcon","ReactMarkdown","styled","EmojiPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","display","flexDirection","height","flex","overflow","backgroundColor","palette","background","paper","borderRadius","spacing","_c","ChatHeader","padding","alignItems","justifyContent","borderBottom","divider","_c2","MessageList","flexGrow","default","width","grey","_c3","Message","align","marginBottom","_c4","MessageContent","maxWidth","primary","main","color","contrastText","text","boxShadow","shadows","margin","fontFamily","_c5","ChatFooter","borderTop","_c6","InputContainer","gap","_c7","ErrorMessage","error","dark","_c8","ModelSelector","paddingBottom","borderBottomColor","_c9","ConversationSelector","minWidth","fontSize","_c10","ChatWindow","position","models","streamingResponse","isThinking","setStreamingResponses","setThinking","serverUrl","_s","_models$find","startNewConversation","newId","Date","now","toString","newConversation","id","name","messages","timestamp","toISOString","setConversations","prev","setCurrentConversationId","conversations","saved","localStorage","getItem","JSON","parse","currentConversationId","currentConversation","find","c","inputValue","setInputValue","selectedModel","setSelectedModel","menuAnchor","setMenuAnchor","emojiAnchor","setEmojiAnchor","uploadError","setUploadError","fileInputRef","messagesEndRef","abortControllerRef","responseBuffer","updateTimeoutRef","lastHealthCheck","setLastHealthCheck","parseInt","checkServerHealth","headers","healthCheckInterval","healthCheck","fetch","method","signal","AbortSignal","timeout","cache","ok","Error","setItem","healthError","updateConversationMessages","newMessages","map","conv","handleConversationChange","current","abort","updateStreamingResponse","newContent","clearTimeout","setTimeout","handleSendMessage","trim","newMessage","content","role","updatedMessages","length","updateConversationName","AbortController","timeoutId","response","body","stringify","model","msg","stream","temperature","max_tokens","errorText","status","reader","getReader","responseText","processStreamingResponse","updatedMessagesWithResponse","console","errorMessage","message","preferredModel","m","toLowerCase","includes","scrollToBottom","scrollIntoView","behavior","scrollTimer","handleClearChat","handleMenuAction","action","filter","handleStopResponse","firstMessage","substring","processStreamingChunk","chunk","lines","split","accumulatedContent","line","_data$choices$","_data$choices$$delta","jsonStr","replace","data","choices","delta","e","warn","handleKeyPress","event","key","shiftKey","preventDefault","maxIterations","iterations","lastUpdateTime","updateInterval","done","value","read","TextDecoder","decode","handleEmojiClick","emojiData","emoji","cursorPosition","document","querySelector","selectionStart","updatedText","slice","handleFileUpload","_event$target$files","file","target","files","size","formData","FormData","append","statusText","json","fileId","supportsFileUpload","_currentModel$name","_currentModel$capabil","currentModel","modelName","capabilities","getModelLetter","charAt","toUpperCase","getModelColor","getModelImage","MessageComponent","memo","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","mt","opacity","toLocaleTimeString","StreamingResponseComponent","ThinkingIndicator","onStop","onClick","ml","bgcolor","elevation","transition","fontWeight","objectFit","_models$find2","imagePath","src","alt","style","onChange","displayEmpty","title","currentTarget","index","ref","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","border","onEmojiClick","autoFocusSearch","searchPlaceHolder","previewConfig","showPreview","type","accept","disabled","_fileInputRef$current","click","fullWidth","multiline","maxRows","onKeyPress","placeholder","InputProps","disableUnderline","endAdornment","_c11","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  IconButton,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  Select,\n  FormControl,\n  CircularProgress,\n  InputAdornment,\n  Popover,\n  Tooltip,\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  MoreVert as MoreIcon,\n  VideoCall as VideoIcon,\n  OpenInFull as ExpandIcon,\n  Image as ImageIcon,\n  EmojiEmotions as EmojiIcon,\n  Stop as StopIcon,\n  Add as AddIcon,\n} from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3),\n}));\n\nconst ChatHeader = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n}));\n\nconst MessageList = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px',\n  },\n}));\n\nconst Message = styled(Box)(({ theme, align }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2),\n}));\n\nconst MessageContent = styled(Box)(({ theme, align }) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0,\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0),\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5),\n  },\n}));\n\nconst ChatFooter = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1),\n}));\n\nconst ErrorMessage = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n}));\n\nconst ModelSelector = styled(FormControl)(({ theme }) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0,\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent',\n  },\n}));\n\nconst ConversationSelector = styled(FormControl)(({ theme }) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem',\n  },\n}));\n\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl,\n}) {\n  // Move startNewConversation definition before any hooks that use it\n  const startNewConversation = useCallback(() => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Chat',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n  }, []); // Empty dependency array since it only uses setState functions\n\n  // Initialize state\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{ id: 'new', name: 'New Chat', messages: [] }];\n  });\n\n  const [currentConversationId, setCurrentConversationId] = useState('new');\n\n  // Remove separate messages state and use conversation messages directly\n  const currentConversation = useMemo(() => \n    conversations.find(c => c.id === currentConversationId) || conversations[0],\n    [conversations, currentConversationId]\n  );\n\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  // Add health check state\n  const [lastHealthCheck, setLastHealthCheck] = useState(() => {\n    return parseInt(localStorage.getItem('lastHealthCheck') || '0');\n  });\n\n  // Throttle health checks\n  const checkServerHealth = useCallback(async (headers) => {\n    const now = Date.now();\n    const healthCheckInterval = 60000; // Increase to 60 seconds between health checks\n\n    // Only check if enough time has passed\n    if (now - lastHealthCheck > healthCheckInterval) {\n      try {\n        const healthCheck = await fetch(`${serverUrl}/v1/models`, {\n          method: 'GET',\n          headers,\n          signal: AbortSignal.timeout(5000),\n          cache: 'no-store'\n        });\n        \n        if (!healthCheck.ok) {\n          throw new Error('Server is not responding properly');\n        }\n        \n        setLastHealthCheck(now);\n        localStorage.setItem('lastHealthCheck', now.toString());\n      } catch (healthError) {\n        if (healthError.name !== 'AbortError') {\n          throw new Error('Cannot connect to server. Please check your connection.');\n        }\n      }\n    }\n  }, [serverUrl, lastHealthCheck]);\n\n  // Update conversation messages\n  const updateConversationMessages = useCallback((newMessages) => {\n    setConversations(prev => prev.map(conv => \n      conv.id === currentConversationId\n        ? { ...conv, messages: newMessages }\n        : conv\n    ));\n  }, [currentConversationId]);\n\n  // Handle conversation switch\n  const handleConversationChange = useCallback((newId) => {\n    // Clear any ongoing streaming\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n    setCurrentConversationId(newId);\n  }, [position, setStreamingResponses, setThinking]);\n\n  // Optimize streaming updates\n  const updateStreamingResponse = useCallback((newContent) => {\n    responseBuffer.current = newContent;\n    \n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 1500); // 1.5 second debounce\n  }, [position, setStreamingResponses]);\n\n  // Update handleSendMessage to use the new health check\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || !selectedModel) return;\n\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user',\n    };\n\n    // Update conversation with new message\n    const updatedMessages = [...currentConversation.messages, newMessage];\n    updateConversationMessages(updatedMessages);\n    setInputValue('');\n    setThinking(prev => ({ ...prev, [position]: true }));\n\n    // Update conversation name if this is the first message\n    if (currentConversation.messages.length === 0) {\n      updateConversationName(currentConversationId, newMessage);\n    }\n\n    try {\n      abortControllerRef.current = new AbortController();\n      const timeoutId = setTimeout(() => {\n        if (abortControllerRef.current) {\n          abortControllerRef.current.abort();\n        }\n      }, 180000); // 3 minutes timeout\n\n      const headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Keep-Alive': 'timeout=180',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      };\n\n      // Perform health check with throttling\n      await checkServerHealth(headers);\n\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        signal: abortControllerRef.current.signal,\n        headers,\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: updatedMessages.map(msg => ({\n            role: msg.role === 'error' ? 'assistant' : msg.role,\n            content: msg.content\n          })),\n          stream: true,\n          temperature: 0.7,\n          max_tokens: 2000\n        }),\n        cache: 'no-store'\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\n      }\n\n      if (!response.body) {\n        throw new Error('Server response has no body');\n      }\n\n      const reader = response.body.getReader();\n      responseBuffer.current = '';\n      \n      try {\n        const responseText = await processStreamingResponse(reader);\n        \n        if (responseText) {\n          const updatedMessagesWithResponse = [...updatedMessages, {\n            content: responseText,\n            timestamp: new Date().toISOString(),\n            role: 'assistant',\n          }];\n          updateConversationMessages(updatedMessagesWithResponse);\n        }\n      } finally {\n        if (updateTimeoutRef.current) {\n          clearTimeout(updateTimeoutRef.current);\n          updateTimeoutRef.current = null;\n        }\n\n        setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n        setThinking(prev => ({ ...prev, [position]: false }));\n        responseBuffer.current = '';\n        abortControllerRef.current = null;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'Unable to get response from LM Studio. ';\n      if (error.name === 'AbortError') {\n        errorMessage += 'Request timed out. The model might be too slow or not responding.';\n      } else if (error.message === 'Failed to fetch') {\n        errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct\\n4. Your internet connection is stable`;\n      } else {\n        errorMessage += error.message;\n      }\n      \n      updateConversationMessages([\n        ...updatedMessages,\n        {\n          content: errorMessage,\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n      setThinking(prev => ({ ...prev, [position]: false }));\n    }\n  };\n\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      setSelectedModel(preferredModel?.id || models[0].id);\n    }\n  }, [models, selectedModel]);\n\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, []);\n\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  useEffect(() => {\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n  }, [currentConversationId, position, setStreamingResponses]);\n\n  const handleClearChat = useCallback(() => {\n    updateConversationMessages([]); // Clear messages in current conversation\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  }, [position, setStreamingResponses, setThinking, updateConversationMessages]);\n\n  const handleMenuAction = useCallback((action) => {\n    switch (action) {\n      case 'new':\n        startNewConversation();\n        break;\n      case 'clear':\n        handleClearChat();\n        break;\n      case 'delete':\n        setConversations(prev => prev.filter(conv => conv.id !== currentConversationId));\n        startNewConversation();\n        break;\n      default:\n        break;\n    }\n    setMenuAnchor(null);\n  }, [currentConversationId, handleClearChat, startNewConversation]);\n\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({ ...prev, [position]: false }));\n      setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n    }\n  };\n\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n    \n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 \n      ? firstMessage.content.substring(0, 30) + '...'\n      : firstMessage.content;\n\n    setConversations(prev => \n      prev.map(conv => \n        conv.id === id \n          ? { ...conv, name } \n          : conv\n      )\n    );\n  };\n\n  // Batch updates for message list scrolling with longer delay\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  // Add rate limiting for streaming updates\n  const processStreamingChunk = useCallback((chunk) => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n\n      try {\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n\n        if (data.choices && data.choices[0]?.delta?.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n\n    return accumulatedContent;\n  }, []);\n\n  // Clean up timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const processStreamingResponse = async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = '';\n    let lastUpdateTime = Date.now();\n    const updateInterval = 1500; // Update every 1.5 seconds\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        responseText += newContent;\n        accumulatedContent += newContent;\n\n        // Only update UI if enough time has passed\n        if (Date.now() - lastUpdateTime >= updateInterval) {\n          updateStreamingResponse(accumulatedContent);\n          accumulatedContent = '';\n          lastUpdateTime = Date.now();\n        }\n      }\n\n      // Final update for any remaining content\n      if (accumulatedContent) {\n        updateStreamingResponse(accumulatedContent);\n      }\n\n      return responseText;\n    } catch (error) {\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = \n      inputValue.slice(0, cursorPosition) + \n      emoji + \n      inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n\n      setThinking(prev => ({ ...prev, [position]: true }));\n\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      // Add file message to chat\n      updateConversationMessages([\n        ...currentConversation.messages,\n        {\n          content: `📎 Uploaded file: ${file.name}`,\n          timestamp: new Date().toISOString(),\n          role: 'user',\n          fileId: data.id,\n        },\n      ]);\n\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      updateConversationMessages([\n        ...currentConversation.messages,\n        {\n          content: `Failed to upload file: ${error.message}`,\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n    } finally {\n      setThinking(prev => ({ ...prev, [position]: false }));\n    }\n  };\n\n  const supportsFileUpload = () => {\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = currentModel?.name?.toLowerCase() || '';\n    \n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return currentModel?.capabilities?.includes('file_upload') || false;\n  };\n\n  const getModelLetter = (modelName) => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    return modelName.charAt(0).toUpperCase();\n  };\n\n  const getModelColor = (modelName) => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    return '#757575'; // Grey for unknown models\n  };\n\n  const getModelImage = (modelName) => {\n    if (!modelName) return null;\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return './Images/Deepseek.png';\n    if (name.includes('qwen')) return './Images/Qwen2.png';\n    if (name.includes('starcoder')) return './Images/StarCoder.jpg';\n    if (name.includes('gemma')) return './Images/Gemma.png';\n    return null;\n  };\n\n  // Memoize individual message components to prevent unnecessary re-renders\n  const MessageComponent = React.memo(({ message, align }) => (\n    <Message align={align}>\n      {message.role === 'error' ? (\n        <ErrorMessage>\n          <CircularProgress size={16} color=\"error\" />\n          <Typography variant=\"body2\">{message.content}</Typography>\n        </ErrorMessage>\n      ) : (\n        <>\n          <MessageContent align={align}>\n            <ReactMarkdown>{message.content}</ReactMarkdown>\n          </MessageContent>\n          <Typography \n            variant=\"caption\" \n            color=\"textSecondary\" \n            sx={{ \n              mt: 0.5,\n              opacity: 0.7,\n              fontSize: '0.7rem',\n            }}\n          >\n            {new Date(message.timestamp).toLocaleTimeString()}\n          </Typography>\n        </>\n      )}\n    </Message>\n  ));\n\n  // Memoize streaming response component\n  const StreamingResponseComponent = React.memo(({ content }) => (\n    content ? (\n      <Message align=\"left\">\n        <MessageContent align=\"left\">\n          <ReactMarkdown>{content}</ReactMarkdown>\n        </MessageContent>\n      </Message>\n    ) : null\n  ));\n\n  // Memoize thinking indicator\n  const ThinkingIndicator = React.memo(({ isThinking, onStop }) => (\n    isThinking ? (\n      <Message align=\"left\">\n        <MessageContent align=\"left\">\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <CircularProgress size={16} />\n            <Typography variant=\"body2\">Thinking...</Typography>\n            <IconButton \n              size=\"small\" \n              onClick={onStop}\n              sx={{ \n                ml: 1,\n                bgcolor: 'error.main',\n                color: 'error.contrastText',\n                '&:hover': {\n                  bgcolor: 'error.dark',\n                },\n                width: 24,\n                height: 24,\n              }}\n            >\n              <StopIcon sx={{ fontSize: 16 }} />\n            </IconButton>\n          </Box>\n        </MessageContent>\n      </Message>\n    ) : null\n  ));\n\n  return (\n    <StyledPaper elevation={3}>\n      <ChatHeader>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Avatar sx={{ \n            bgcolor: selectedModel ? \n              getModelColor(models.find(m => m.id === selectedModel)?.name || '') :\n              'primary.main',\n            transition: 'all 0.3s ease',\n            fontWeight: 600,\n            width: 40,\n            height: 40,\n            '& img': {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover',\n            }\n          }}>\n            {selectedModel ? (\n              (() => {\n                const modelName = models.find(m => m.id === selectedModel)?.name || '';\n                const imagePath = getModelImage(modelName);\n                return imagePath ? (\n                  <img \n                    src={imagePath} \n                    alt={modelName}\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      objectFit: 'cover',\n                    }}\n                  />\n                ) : (\n                  getModelLetter(modelName)\n                );\n              })()\n            ) : 'A'}\n          </Avatar>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            <ConversationSelector size=\"small\">\n              <Select\n                value={currentConversationId}\n                onChange={(e) => handleConversationChange(e.target.value)}\n                variant=\"standard\"\n                sx={{ fontSize: '0.875rem' }}\n              >\n                {conversations.map((conv) => (\n                  <MenuItem key={conv.id} value={conv.id}>\n                    {conv.name || 'New Chat'}\n                  </MenuItem>\n                ))}\n              </Select>\n            </ConversationSelector>\n            {models.length > 0 ? (\n              <ModelSelector size=\"small\" sx={{ minWidth: 200 }}>\n                <Select\n                  value={selectedModel || ''}\n                  onChange={(e) => setSelectedModel(e.target.value)}\n                  variant=\"standard\"\n                  displayEmpty\n                >\n                  {models.map((model) => (\n                    <MenuItem key={model.id} value={model.id}>\n                      {model.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </ModelSelector>\n            ) : (\n              <Typography variant=\"caption\" color=\"error\">\n                No AI models available\n              </Typography>\n            )}\n          </Box>\n        </Box>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <IconButton \n            onClick={startNewConversation}\n            title=\"New Chat\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\n            <MoreIcon />\n          </IconButton>\n        </Box>\n      </ChatHeader>\n\n      <MessageList>\n        {currentConversation.messages.map((msg, index) => (\n          <MessageComponent\n            key={`${msg.timestamp}-${index}`}\n            message={msg}\n            align={msg.role === 'user' ? 'right' : 'left'}\n          />\n        ))}\n        <StreamingResponseComponent content={streamingResponse} />\n        <ThinkingIndicator \n          isThinking={isThinking} \n          onStop={handleStopResponse}\n        />\n        <div ref={messagesEndRef} />\n      </MessageList>\n\n      <ChatFooter>\n        <InputContainer>\n          <IconButton \n            size=\"small\" \n            onClick={(e) => setEmojiAnchor(e.currentTarget)}\n          >\n            <EmojiIcon />\n          </IconButton>\n          <Popover\n            open={Boolean(emojiAnchor)}\n            anchorEl={emojiAnchor}\n            onClose={() => setEmojiAnchor(null)}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            <Box sx={{ \n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n              }\n            }}>\n              <EmojiPicker\n                onEmojiClick={handleEmojiClick}\n                autoFocusSearch={false}\n                theme=\"dark\"\n                searchPlaceHolder=\"Search emojis...\"\n                width={320}\n                height={400}\n                previewConfig={{\n                  showPreview: false\n                }}\n              />\n            </Box>\n          </Popover>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleFileUpload}\n            accept=\"image/*,.pdf,.txt,.doc,.docx\"\n          />\n          <Tooltip title={\n            !selectedModel ? \"Please select a model first\" :\n            !supportsFileUpload() ? \"This model doesn't support file uploads\" :\n            \"Upload a file\"\n          }>\n            <span>\n              <IconButton \n                size=\"small\"\n                disabled={!supportsFileUpload()}\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <ImageIcon sx={{ \n                  color: theme => !supportsFileUpload() ? \n                    theme.palette.action.disabled : \n                    'inherit'\n                }} />\n              </IconButton>\n            </span>\n          </Tooltip>\n          <TextField\n            fullWidth\n            multiline\n            maxRows={4}\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            variant=\"standard\"\n            InputProps={{\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={handleSendMessage}\n                    disabled={!inputValue.trim() || !selectedModel}\n                    color=\"primary\"\n                  >\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </InputContainer>\n        {uploadError && (\n          <Typography \n            variant=\"caption\" \n            color=\"error\" \n            sx={{ mt: 1, display: 'block' }}\n            onClick={() => setUploadError('')}\n          >\n            {uploadError}\n          </Typography>\n        )}\n      </ChatFooter>\n\n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={() => setMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => handleMenuAction('new')}>\n          New Chat\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('clear')}>\n          Clear Current Chat\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('delete')}>\n          Delete Current Chat\n        </MenuItem>\n      </Menu>\n    </StyledPaper>\n  );\n}\n\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}