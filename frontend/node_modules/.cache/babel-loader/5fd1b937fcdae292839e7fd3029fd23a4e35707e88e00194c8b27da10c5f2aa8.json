{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\BrainstormControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Paper, IconButton, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, Select, MenuItem, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Collapse, CircularProgress, Divider, Switch, FormControlLabel, Badge } from '@mui/material';\nimport { DragHandle as DragIcon, PlayArrow as PlayIcon, Delete as DeleteIcon, Send as SendIcon, Add as AddIcon, Settings as SettingsIcon, Info as InfoIcon, ExpandMore as ExpandMoreIcon, ExpandLess as ExpandLessIcon, MenuBook as NotebookIcon, Download as DownloadIcon, Psychology as BrainstormIcon, Loop as LoopIcon, ArrowUpward as ArrowUpIcon, ArrowDownward as ArrowDownIcon } from '@mui/icons-material';\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\n\n// Model configuration presets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_PRESETS = {\n  creative: {\n    name: \"Creative\",\n    config: {\n      temperature: 0.9,\n      max_tokens: 2000,\n      top_p: 0.95,\n      frequency_penalty: 0.5,\n      presence_penalty: 0.5\n    }\n  },\n  balanced: {\n    name: \"Balanced\",\n    config: {\n      temperature: 0.7,\n      max_tokens: 2000,\n      top_p: 0.9,\n      frequency_penalty: 0.2,\n      presence_penalty: 0.2\n    }\n  },\n  precise: {\n    name: \"Precise\",\n    config: {\n      temperature: 0.3,\n      max_tokens: 2000,\n      top_p: 0.8,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    }\n  }\n};\nconst BrainstormControl = ({\n  panels,\n  onSubmitToPanels,\n  currentMessage,\n  onToggleNotebook,\n  models\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentProcessingIndex, setCurrentProcessingIndex] = useState(-1);\n  const [brainstormEnabled, setBrainstormEnabled] = useState(false);\n  const [iterationCounts, setIterationCounts] = useState({});\n\n  // Process message through the sequence\n  const processSequence = useCallback(async message => {\n    if (!message || sequence.length === 0 || !brainstormEnabled) return;\n    setIsProcessing(true);\n    setResults(null);\n    try {\n      let currentMessage = message;\n      const results = [];\n\n      // Process through each assistant in sequence\n      for (let i = 0; i < sequence.length; i++) {\n        const item = sequence[i];\n        setCurrentProcessingIndex(i);\n\n        // Process with current assistant\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId, item.config);\n        results.push({\n          panelId: item.panelId,\n          modelId: item.modelId,\n          response\n        });\n\n        // Update current message for next iteration\n        currentMessage = response.response;\n\n        // Submit intermediate results to panel\n        onSubmitToPanels(item.panelId, response.response);\n      }\n      setResults(results);\n    } catch (error) {\n      console.error('Brainstorm error:', error);\n    } finally {\n      setIsProcessing(false);\n      setCurrentProcessingIndex(-1);\n    }\n  }, [sequence, brainstormEnabled, onSubmitToPanels]);\n\n  // Update useEffect to use processSequence\n  useEffect(() => {\n    if (currentMessage) {\n      processSequence(currentMessage);\n    }\n  }, [currentMessage, processSequence]);\n\n  // Add a panel to the sequence with default preset\n  const handleAddToSequence = useCallback(panelId => {\n    const panel = panels.find(p => p.id === panelId);\n    if (!panel || !panel.selectedModel) return;\n    const newItem = {\n      id: `seq-${Date.now()}`,\n      panelId,\n      modelId: panel.selectedModel,\n      preset: 'balanced',\n      config: {\n        ...MODEL_PRESETS.balanced.config\n      },\n      iterationCount: (iterationCounts[panelId] || 0) + 1\n    };\n    setSequence(prev => [...prev, newItem]);\n    setIterationCounts(prev => ({\n      ...prev,\n      [panelId]: (prev[panelId] || 0) + 1\n    }));\n  }, [panels, iterationCounts]);\n\n  // Move an item up in the sequence\n  const handleMoveUp = useCallback(index => {\n    if (index <= 0) return;\n    setSequence(prev => {\n      const newSequence = [...prev];\n      [newSequence[index], newSequence[index - 1]] = [newSequence[index - 1], newSequence[index]];\n      return newSequence;\n    });\n  }, []);\n\n  // Move an item down in the sequence\n  const handleMoveDown = useCallback(index => {\n    if (index >= sequence.length - 1) return;\n    setSequence(prev => {\n      const newSequence = [...prev];\n      [newSequence[index], newSequence[index + 1]] = [newSequence[index + 1], newSequence[index]];\n      return newSequence;\n    });\n  }, [sequence.length]);\n\n  // Helper function to get assistant name from panel\n  const getAssistantName = panelId => {\n    const panel = panels.find(p => p.id === panelId);\n    return (panel === null || panel === void 0 ? void 0 : panel.assistantName) || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\n  };\n\n  // Display current configuration\n  const renderConfigInfo = item => {\n    const preset = item.preset || 'balanced';\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Preset: \", MODEL_PRESETS[preset].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"medium\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Remove a panel from the sequence\n  const handleRemoveFromSequence = sequenceId => {\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\n  };\n\n  // Open model settings dialog\n  const handleOpenModelSettings = sequenceItem => {\n    // Find the panel's current model\n    const panel = panels.find(p => p.id === sequenceItem.panelId);\n\n    // Update the sequence item to use the panel's selected model if it exists\n    const updatedItem = {\n      ...sequenceItem,\n      modelId: (panel === null || panel === void 0 ? void 0 : panel.selectedModel) || sequenceItem.modelId\n    };\n    setSelectedPanelForSettings(updatedItem);\n    setModelSettingsOpen(true);\n  };\n\n  // Update model for a panel\n  const handleModelChange = modelId => {\n    if (!selectedPanelForSettings) return;\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      modelId\n    } : item));\n    setModelSettingsOpen(false);\n  };\n  const handleDownloadReport = () => {\n    if (!results) return;\n    const formatTimestamp = date => {\n      return new Date(date).toLocaleString();\n    };\n    const formatEntry = (entry, index) => {\n      return `Assistant ${index + 1} Response:\nModel: ${entry.modelId}\n${entry.response}\n-------------------\n`;\n    };\n    const report = `AI Brainstorm Report\nGenerated: ${formatTimestamp(new Date())}\n===================\n\nOriginal Message:\n${currentMessage}\n\nProcessing Sequence:\n${sequence.map((item, index) => `${index + 1}. ${getAssistantName(item.panelId)} (${item.modelId})`).join('\\n')}\n\nResults:\n${results.map((entry, index) => formatEntry(entry, index)).join('\\n')}\n\nSummary:\n${results.reduce((acc, entry) => {\n      const key = entry.panelId;\n      acc[key] = entry.response;\n      return acc;\n    }, {})}\n`;\n    const blob = new Blob([report], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `brainstorm-report-${new Date().toISOString()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      mb: isExpanded ? 1 : 0\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: isExpanded ? 1 : 0.5,\n        m: 1,\n        minHeight: isExpanded ? 'auto' : '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: isExpanded ? 1 : 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(BrainstormIcon, {\n            sx: {\n              color: brainstormEnabled ? 'primary.main' : 'text.secondary',\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: brainstormEnabled,\n              onChange: e => setBrainstormEnabled(e.target.checked),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                fontSize: isExpanded ? '1.1rem' : '1rem',\n                color: brainstormEnabled ? 'primary.main' : 'text.primary'\n              },\n              children: [\"AI Brainstorm \", brainstormEnabled ? '(Active)' : '(Off)']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), isProcessing && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Processing \", currentProcessingIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [results && /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Download Report\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleDownloadReport,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Open Notebook\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: onToggleNotebook,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(NotebookIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: isExpanded ? \"Collapse\" : \"Expand\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => setIsExpanded(prev => !prev),\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: isExpanded,\n        timeout: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Processing Sequence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            sx: {\n              minHeight: sequence.length ? 'auto' : '50px'\n            },\n            children: sequence.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                mb: 0.5,\n                borderRadius: 1,\n                border: '1px solid',\n                borderColor: 'divider',\n                bgcolor: 'background.paper',\n                '&:hover': {\n                  bgcolor: 'action.hover'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: getAssistantName(item.panelId),\n                secondary: `Model: ${item.modelId}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: `Iteration ${item.iterationCount}`,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(LoopIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      sx: {\n                        ml: 0.5\n                      },\n                      children: item.iterationCount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    mr: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleMoveUp(index),\n                    size: \"small\",\n                    disabled: index === 0,\n                    sx: {\n                      p: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleMoveDown(index),\n                    size: \"small\",\n                    disabled: index === sequence.length - 1,\n                    sx: {\n                      p: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleOpenModelSettings(item),\n                  size: \"small\",\n                  children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleRemoveFromSequence(item.id),\n                  size: \"small\",\n                  color: \"error\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1,\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 0.5\n            },\n            children: panels.map(panel => /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: `Add to sequence (${iterationCounts[panel.id] || 0} iterations)`,\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 27\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 0.5\n                  },\n                  children: [getAssistantName(panel.id), /*#__PURE__*/_jsxDEV(Badge, {\n                    badgeContent: iterationCounts[panel.id] || 0,\n                    color: \"primary\",\n                    sx: {\n                      ml: 0.5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(LoopIcon, {\n                      sx: {\n                        fontSize: 14\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 23\n                }, this),\n                onClick: () => handleAddToSequence(panel.id),\n                color: \"primary\",\n                variant: \"outlined\",\n                size: \"small\",\n                sx: {\n                  cursor: 'pointer',\n                  '&:hover': {\n                    bgcolor: 'action.hover'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)\n            }, panel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Summary Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              display: 'block',\n              mb: 0.5\n            },\n            children: \"Select an assistant to generate the final summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedOutputPanel,\n            onChange: e => setSelectedOutputPanel(e.target.value),\n            fullWidth: true,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), panels.map(panel => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: panel.id,\n              children: getAssistantName(panel.id)\n            }, panel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), results && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            sx: {\n              p: 1\n            },\n            children: results.map((result, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: index < results.length - 1 ? 1 : 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"primary\",\n                sx: {\n                  mb: 0.5\n                },\n                children: result.isSummary ? 'Final Summary' : `${getAssistantName(result.panelId)} (${result.modelId})`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: result.response\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 21\n              }, this), index < results.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: modelSettingsOpen,\n        onClose: () => setModelSettingsOpen(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Model Settings for \", selectedPanelForSettings ? getAssistantName(selectedPanelForSettings.panelId) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Available Models:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    margin: '8px 0',\n                    paddingLeft: '20px'\n                  },\n                  children: models.map(model => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: model.name\n                  }, model.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"These are the same models available in your chat assistants. Each model has different capabilities and characteristics:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    margin: '8px 0',\n                    paddingLeft: '20px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Hermes/Nous: Good for general tasks and coding\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Gemma: Efficient for shorter responses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Mixtral/Mistral: Strong reasoning and analysis\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Neural/Code-Llama: Specialized for code generation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 17\n              }, this),\n              placement: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: (selectedPanelForSettings === null || selectedPanelForSettings === void 0 ? void 0 : selectedPanelForSettings.modelId) || '',\n                onChange: e => handleModelChange(e.target.value),\n                label: \"Model\",\n                children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: model.id,\n                  children: model.name\n                }, model.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModelSettingsOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(BrainstormControl, \"P5xM/S/Mbcswn52nQFBikBV0ol4=\");\n_c = BrainstormControl;\nexport default _c2 = /*#__PURE__*/React.memo(BrainstormControl);\nvar _c, _c2;\n$RefreshReg$(_c, \"BrainstormControl\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Paper","IconButton","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","Select","MenuItem","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Collapse","CircularProgress","Divider","Switch","FormControlLabel","Badge","DragHandle","DragIcon","PlayArrow","PlayIcon","Delete","DeleteIcon","Send","SendIcon","Add","AddIcon","Settings","SettingsIcon","Info","InfoIcon","ExpandMore","ExpandMoreIcon","ExpandLess","ExpandLessIcon","MenuBook","NotebookIcon","Download","DownloadIcon","Psychology","BrainstormIcon","Loop","LoopIcon","ArrowUpward","ArrowUpIcon","ArrowDownward","ArrowDownIcon","processWithAssistant","generateSummary","jsxDEV","_jsxDEV","MODEL_PRESETS","creative","name","config","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","balanced","precise","BrainstormControl","panels","onSubmitToPanels","currentMessage","onToggleNotebook","models","_s","sequence","setSequence","selectedOutputPanel","setSelectedOutputPanel","isProcessing","setIsProcessing","results","setResults","modelSettingsOpen","setModelSettingsOpen","selectedPanelForSettings","setSelectedPanelForSettings","isExpanded","setIsExpanded","currentProcessingIndex","setCurrentProcessingIndex","brainstormEnabled","setBrainstormEnabled","iterationCounts","setIterationCounts","processSequence","message","length","i","item","response","panelId","modelId","push","error","console","handleAddToSequence","panel","find","p","id","selectedModel","newItem","Date","now","preset","iterationCount","prev","handleMoveUp","index","newSequence","handleMoveDown","getAssistantName","assistantName","findIndex","renderConfigInfo","sx","display","alignItems","ml","children","title","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","color","handleRemoveFromSequence","sequenceId","filter","handleOpenModelSettings","sequenceItem","updatedItem","handleModelChange","map","handleDownloadReport","formatTimestamp","date","toLocaleString","formatEntry","entry","report","join","reduce","acc","key","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","position","mb","m","minHeight","justifyContent","gap","mr","control","checked","onChange","e","target","label","fontSize","onClick","in","timeout","dense","borderRadius","border","borderColor","bgcolor","primary","secondary","flexDirection","disabled","mt","flexWrap","icon","badgeContent","cursor","value","fullWidth","result","isSummary","whiteSpace","my","open","onClose","maxWidth","style","margin","paddingLeft","model","placement","_c","_c2","memo","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/BrainstormControl.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Collapse,\r\n  CircularProgress,\r\n  Divider,\r\n  Switch,\r\n  FormControlLabel,\r\n  Badge,\r\n} from '@mui/material';\r\nimport {\r\n  DragHandle as DragIcon,\r\n  PlayArrow as PlayIcon,\r\n  Delete as DeleteIcon,\r\n  Send as SendIcon,\r\n  Add as AddIcon,\r\n  Settings as SettingsIcon,\r\n  Info as InfoIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  ExpandLess as ExpandLessIcon,\r\n  MenuBook as NotebookIcon,\r\n  Download as DownloadIcon,\r\n  Psychology as BrainstormIcon,\r\n  Loop as LoopIcon,\r\n  ArrowUpward as ArrowUpIcon,\r\n  ArrowDownward as ArrowDownIcon,\r\n} from '@mui/icons-material';\r\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\r\n\r\n// Model configuration presets\r\nconst MODEL_PRESETS = {\r\n  creative: {\r\n    name: \"Creative\",\r\n    config: {\r\n      temperature: 0.9,\r\n      max_tokens: 2000,\r\n      top_p: 0.95,\r\n      frequency_penalty: 0.5,\r\n      presence_penalty: 0.5\r\n    }\r\n  },\r\n  balanced: {\r\n    name: \"Balanced\",\r\n    config: {\r\n      temperature: 0.7,\r\n      max_tokens: 2000,\r\n      top_p: 0.9,\r\n      frequency_penalty: 0.2,\r\n      presence_penalty: 0.2\r\n    }\r\n  },\r\n  precise: {\r\n    name: \"Precise\",\r\n    config: {\r\n      temperature: 0.3,\r\n      max_tokens: 2000,\r\n      top_p: 0.8,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst BrainstormControl = ({ panels, onSubmitToPanels, currentMessage, onToggleNotebook, models }) => {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\r\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [currentProcessingIndex, setCurrentProcessingIndex] = useState(-1);\r\n  const [brainstormEnabled, setBrainstormEnabled] = useState(false);\r\n  const [iterationCounts, setIterationCounts] = useState({});\r\n\r\n  // Process message through the sequence\r\n  const processSequence = useCallback(async (message) => {\r\n    if (!message || sequence.length === 0 || !brainstormEnabled) return;\r\n    \r\n    setIsProcessing(true);\r\n    setResults(null);\r\n    \r\n    try {\r\n      let currentMessage = message;\r\n      const results = [];\r\n      \r\n      // Process through each assistant in sequence\r\n      for (let i = 0; i < sequence.length; i++) {\r\n        const item = sequence[i];\r\n        setCurrentProcessingIndex(i);\r\n        \r\n        // Process with current assistant\r\n        const response = await processWithAssistant(\r\n          item.panelId, \r\n          currentMessage,\r\n          item.modelId,\r\n          item.config\r\n        );\r\n        \r\n        results.push({\r\n          panelId: item.panelId,\r\n          modelId: item.modelId,\r\n          response\r\n        });\r\n\r\n        // Update current message for next iteration\r\n        currentMessage = response.response;\r\n        \r\n        // Submit intermediate results to panel\r\n        onSubmitToPanels(item.panelId, response.response);\r\n      }\r\n\r\n      setResults(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Brainstorm error:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n      setCurrentProcessingIndex(-1);\r\n    }\r\n  }, [sequence, brainstormEnabled, onSubmitToPanels]);\r\n\r\n  // Update useEffect to use processSequence\r\n  useEffect(() => {\r\n    if (currentMessage) {\r\n      processSequence(currentMessage);\r\n    }\r\n  }, [currentMessage, processSequence]);\r\n\r\n  // Add a panel to the sequence with default preset\r\n  const handleAddToSequence = useCallback((panelId) => {\r\n    const panel = panels.find(p => p.id === panelId);\r\n    if (!panel || !panel.selectedModel) return;\r\n\r\n    const newItem = {\r\n      id: `seq-${Date.now()}`,\r\n      panelId,\r\n      modelId: panel.selectedModel,\r\n      preset: 'balanced',\r\n      config: { ...MODEL_PRESETS.balanced.config },\r\n      iterationCount: (iterationCounts[panelId] || 0) + 1\r\n    };\r\n\r\n    setSequence(prev => [...prev, newItem]);\r\n    setIterationCounts(prev => ({\r\n      ...prev,\r\n      [panelId]: (prev[panelId] || 0) + 1\r\n    }));\r\n  }, [panels, iterationCounts]);\r\n\r\n  // Move an item up in the sequence\r\n  const handleMoveUp = useCallback((index) => {\r\n    if (index <= 0) return;\r\n    setSequence(prev => {\r\n      const newSequence = [...prev];\r\n      [newSequence[index], newSequence[index - 1]] = [newSequence[index - 1], newSequence[index]];\r\n      return newSequence;\r\n    });\r\n  }, []);\r\n\r\n  // Move an item down in the sequence\r\n  const handleMoveDown = useCallback((index) => {\r\n    if (index >= sequence.length - 1) return;\r\n    setSequence(prev => {\r\n      const newSequence = [...prev];\r\n      [newSequence[index], newSequence[index + 1]] = [newSequence[index + 1], newSequence[index]];\r\n      return newSequence;\r\n    });\r\n  }, [sequence.length]);\r\n\r\n  // Helper function to get assistant name from panel\r\n  const getAssistantName = (panelId) => {\r\n    const panel = panels.find(p => p.id === panelId);\r\n    return panel?.assistantName || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\r\n  };\r\n\r\n  // Display current configuration\r\n  const renderConfigInfo = (item) => {\r\n    const preset = item.preset || 'balanced';\r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n        <Tooltip title={\r\n          <Box>\r\n            <Typography variant=\"body2\">Preset: {MODEL_PRESETS[preset].name}</Typography>\r\n          </Box>\r\n        }>\r\n          <IconButton size=\"medium\" color=\"primary\">\r\n            <InfoIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Remove a panel from the sequence\r\n  const handleRemoveFromSequence = (sequenceId) => {\r\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\r\n  };\r\n\r\n  // Open model settings dialog\r\n  const handleOpenModelSettings = (sequenceItem) => {\r\n    // Find the panel's current model\r\n    const panel = panels.find(p => p.id === sequenceItem.panelId);\r\n    \r\n    // Update the sequence item to use the panel's selected model if it exists\r\n    const updatedItem = {\r\n      ...sequenceItem,\r\n      modelId: panel?.selectedModel || sequenceItem.modelId\r\n    };\r\n    \r\n    setSelectedPanelForSettings(updatedItem);\r\n    setModelSettingsOpen(true);\r\n  };\r\n\r\n  // Update model for a panel\r\n  const handleModelChange = (modelId) => {\r\n    if (!selectedPanelForSettings) return;\r\n    \r\n    setSequence(prev => prev.map(item => \r\n      item.id === selectedPanelForSettings.id\r\n        ? { ...item, modelId }\r\n        : item\r\n    ));\r\n    setModelSettingsOpen(false);\r\n  };\r\n\r\n  const handleDownloadReport = () => {\r\n    if (!results) return;\r\n\r\n    const formatTimestamp = (date) => {\r\n      return new Date(date).toLocaleString();\r\n    };\r\n\r\n    const formatEntry = (entry, index) => {\r\n      return `Assistant ${index + 1} Response:\r\nModel: ${entry.modelId}\r\n${entry.response}\r\n-------------------\r\n`;\r\n    };\r\n\r\n    const report = `AI Brainstorm Report\r\nGenerated: ${formatTimestamp(new Date())}\r\n===================\r\n\r\nOriginal Message:\r\n${currentMessage}\r\n\r\nProcessing Sequence:\r\n${sequence.map((item, index) => `${index + 1}. ${getAssistantName(item.panelId)} (${item.modelId})`).join('\\n')}\r\n\r\nResults:\r\n${results.map((entry, index) => formatEntry(entry, index)).join('\\n')}\r\n\r\nSummary:\r\n${results.reduce((acc, entry) => {\r\n  const key = entry.panelId;\r\n  acc[key] = entry.response;\r\n  return acc;\r\n}, {})}\r\n`;\r\n\r\n    const blob = new Blob([report], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `brainstorm-report-${new Date().toISOString()}.txt`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', mb: isExpanded ? 1 : 0 }}>\r\n      <Paper sx={{ \r\n        p: isExpanded ? 1 : 0.5,\r\n        m: 1,\r\n        minHeight: isExpanded ? 'auto' : '40px'\r\n      }}>\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          justifyContent: 'space-between', \r\n          alignItems: 'center',\r\n          mb: isExpanded ? 1 : 0\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n            <BrainstormIcon \r\n              sx={{ \r\n                color: brainstormEnabled ? 'primary.main' : 'text.secondary',\r\n                mr: 1\r\n              }} \r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={brainstormEnabled}\r\n                  onChange={(e) => setBrainstormEnabled(e.target.checked)}\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  sx={{ \r\n                    fontSize: isExpanded ? '1.1rem' : '1rem',\r\n                    color: brainstormEnabled ? 'primary.main' : 'text.primary'\r\n                  }}\r\n                >\r\n                  AI Brainstorm {brainstormEnabled ? '(Active)' : '(Off)'}\r\n                </Typography>\r\n              }\r\n            />\r\n            {isProcessing && (\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                <CircularProgress size={16} />\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Processing {currentProcessingIndex + 1}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            {results && (\r\n              <Tooltip title=\"Download Report\">\r\n                <IconButton \r\n                  onClick={handleDownloadReport}\r\n                  color=\"primary\"\r\n                >\r\n                  <DownloadIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            <Tooltip title=\"Open Notebook\">\r\n              <IconButton \r\n                onClick={onToggleNotebook}\r\n                color=\"primary\"\r\n              >\r\n                <NotebookIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={isExpanded ? \"Collapse\" : \"Expand\"}>\r\n              <IconButton onClick={() => setIsExpanded(prev => !prev)}>\r\n                {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Collapse in={isExpanded} timeout=\"auto\">\r\n          {/* Sequence Builder */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n              Processing Sequence\r\n            </Typography>\r\n            <List dense sx={{ minHeight: sequence.length ? 'auto' : '50px' }}>\r\n              {sequence.map((item, index) => (\r\n                <ListItem\r\n                  key={item.id}\r\n                  sx={{ \r\n                    mb: 0.5,\r\n                    borderRadius: 1,\r\n                    border: '1px solid',\r\n                    borderColor: 'divider',\r\n                    bgcolor: 'background.paper',\r\n                    '&:hover': {\r\n                      bgcolor: 'action.hover',\r\n                    }\r\n                  }}\r\n                >\r\n                  <ListItemText \r\n                    primary={getAssistantName(item.panelId)}\r\n                    secondary={`Model: ${item.modelId}`}\r\n                  />\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    <Tooltip title={`Iteration ${item.iterationCount}`}>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <LoopIcon fontSize=\"small\" />\r\n                        <Typography variant=\"caption\" sx={{ ml: 0.5 }}>\r\n                          {item.iterationCount}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Tooltip>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'column', mr: 1 }}>\r\n                      <IconButton \r\n                        onClick={() => handleMoveUp(index)}\r\n                        size=\"small\"\r\n                        disabled={index === 0}\r\n                        sx={{ p: 0.5 }}\r\n                      >\r\n                        <ArrowUpIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                      <IconButton \r\n                        onClick={() => handleMoveDown(index)}\r\n                        size=\"small\"\r\n                        disabled={index === sequence.length - 1}\r\n                        sx={{ p: 0.5 }}\r\n                      >\r\n                        <ArrowDownIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Box>\r\n                    <IconButton \r\n                      onClick={() => handleOpenModelSettings(item)}\r\n                      size=\"small\"\r\n                    >\r\n                      <SettingsIcon />\r\n                    </IconButton>\r\n                    <IconButton \r\n                      onClick={() => handleRemoveFromSequence(item.id)}\r\n                      size=\"small\"\r\n                      color=\"error\"\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Box>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n\r\n            {/* Assistant Pills */}\r\n            <Box sx={{ mt: 1, display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n              {panels.map((panel) => (\r\n                <Tooltip \r\n                  key={panel.id} \r\n                  title={`Add to sequence (${iterationCounts[panel.id] || 0} iterations)`}\r\n                >\r\n                  <Chip\r\n                    icon={<AddIcon />}\r\n                    label={\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                        {getAssistantName(panel.id)}\r\n                        <Badge \r\n                          badgeContent={iterationCounts[panel.id] || 0} \r\n                          color=\"primary\"\r\n                          sx={{ ml: 0.5 }}\r\n                        >\r\n                          <LoopIcon sx={{ fontSize: 14 }} />\r\n                        </Badge>\r\n                      </Box>\r\n                    }\r\n                    onClick={() => handleAddToSequence(panel.id)}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    sx={{ \r\n                      cursor: 'pointer',\r\n                      '&:hover': {\r\n                        bgcolor: 'action.hover'\r\n                      }\r\n                    }}\r\n                  />\r\n                </Tooltip>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n          \r\n          {/* Output Panel Selector */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n              Summary Assistant\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\r\n              Select an assistant to generate the final summary\r\n            </Typography>\r\n            <Select\r\n              value={selectedOutputPanel}\r\n              onChange={(e) => setSelectedOutputPanel(e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {panels.map((panel) => (\r\n                <MenuItem key={panel.id} value={panel.id}>\r\n                  {getAssistantName(panel.id)}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Box>\r\n          \r\n          {/* Results Display */}\r\n          {results && (\r\n            <Box sx={{ mt: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                Results\r\n              </Typography>\r\n              <Paper variant=\"outlined\" sx={{ p: 1 }}>\r\n                {results.map((result, index) => (\r\n                  <Box key={index} sx={{ mb: index < results.length - 1 ? 1 : 0 }}>\r\n                    <Typography variant=\"subtitle2\" color=\"primary\" sx={{ mb: 0.5 }}>\r\n                      {result.isSummary ? 'Final Summary' : `${getAssistantName(result.panelId)} (${result.modelId})`}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {result.response}\r\n                    </Typography>\r\n                    {index < results.length - 1 && (\r\n                      <Divider sx={{ my: 1 }} />\r\n                    )}\r\n                  </Box>\r\n                ))}\r\n              </Paper>\r\n            </Box>\r\n          )}\r\n        </Collapse>\r\n\r\n        {/* Model Settings Dialog */}\r\n        <Dialog \r\n          open={modelSettingsOpen} \r\n          onClose={() => setModelSettingsOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>\r\n            Model Settings for {selectedPanelForSettings ? \r\n              getAssistantName(selectedPanelForSettings.panelId) : \r\n              ''}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Model</InputLabel>\r\n              <Tooltip title={\r\n                <Box>\r\n                  <Typography variant=\"body2\">Available Models:</Typography>\r\n                  <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>\r\n                    {models.map(model => (\r\n                      <li key={model.id}>{model.name}</li>\r\n                    ))}\r\n                  </ul>\r\n                  <Typography variant=\"body2\">\r\n                    These are the same models available in your chat assistants.\r\n                    Each model has different capabilities and characteristics:\r\n                  </Typography>\r\n                  <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>\r\n                    <li>Hermes/Nous: Good for general tasks and coding</li>\r\n                    <li>Gemma: Efficient for shorter responses</li>\r\n                    <li>Mixtral/Mistral: Strong reasoning and analysis</li>\r\n                    <li>Neural/Code-Llama: Specialized for code generation</li>\r\n                  </ul>\r\n                </Box>\r\n              } placement=\"right\">\r\n                <Select\r\n                  value={selectedPanelForSettings?.modelId || ''}\r\n                  onChange={(e) => handleModelChange(e.target.value)}\r\n                  label=\"Model\"\r\n                >\r\n                  {models.map((model) => (\r\n                    <MenuItem key={model.id} value={model.id}>\r\n                      {model.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Tooltip>\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setModelSettingsOpen(false)}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(BrainstormControl); "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SACEC,GAAG,EACHC,KAAK,EACLC,UAAU,EACVC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,EACvBC,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,IAAI,EACJC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,gBAAgB,EAChBC,OAAO,EACPC,MAAM,EACNC,gBAAgB,EAChBC,KAAK,QACA,eAAe;AACtB,SACEC,UAAU,IAAIC,QAAQ,EACtBC,SAAS,IAAIC,QAAQ,EACrBC,MAAM,IAAIC,UAAU,EACpBC,IAAI,IAAIC,QAAQ,EAChBC,GAAG,IAAIC,OAAO,EACdC,QAAQ,IAAIC,YAAY,EACxBC,IAAI,IAAIC,QAAQ,EAChBC,UAAU,IAAIC,cAAc,EAC5BC,UAAU,IAAIC,cAAc,EAC5BC,QAAQ,IAAIC,YAAY,EACxBC,QAAQ,IAAIC,YAAY,EACxBC,UAAU,IAAIC,cAAc,EAC5BC,IAAI,IAAIC,QAAQ,EAChBC,WAAW,IAAIC,WAAW,EAC1BC,aAAa,IAAIC,aAAa,QACzB,qBAAqB;AAC5B,SAASC,oBAAoB,EAAEC,eAAe,QAAQ,0BAA0B;;AAEhF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE;IACRC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE;MACNC,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,IAAI;MACXC,iBAAiB,EAAE,GAAG;MACtBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRP,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE;MACNC,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,GAAG;MACVC,iBAAiB,EAAE,GAAG;MACtBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDE,OAAO,EAAE;IACPR,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;MACNC,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,GAAG;MACVC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE;IACpB;EACF;AACF,CAAC;AAED,MAAMG,iBAAiB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,gBAAgB;EAAEC,cAAc;EAAEC,gBAAgB;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkF,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACoF,YAAY,EAAEC,eAAe,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsF,OAAO,EAAEC,UAAU,CAAC,GAAGvF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwF,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzF,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC0F,wBAAwB,EAAEC,2BAA2B,CAAC,GAAG3F,QAAQ,CAAC,IAAI,CAAC;EAC9E,MAAM,CAAC4F,UAAU,EAAEC,aAAa,CAAC,GAAG7F,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8F,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG/F,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxE,MAAM,CAACgG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjG,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACkG,eAAe,EAAEC,kBAAkB,CAAC,GAAGnG,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMoG,eAAe,GAAGlG,WAAW,CAAC,MAAOmG,OAAO,IAAK;IACrD,IAAI,CAACA,OAAO,IAAIrB,QAAQ,CAACsB,MAAM,KAAK,CAAC,IAAI,CAACN,iBAAiB,EAAE;IAE7DX,eAAe,CAAC,IAAI,CAAC;IACrBE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,IAAIX,cAAc,GAAGyB,OAAO;MAC5B,MAAMf,OAAO,GAAG,EAAE;;MAElB;MACA,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,QAAQ,CAACsB,MAAM,EAAEC,CAAC,EAAE,EAAE;QACxC,MAAMC,IAAI,GAAGxB,QAAQ,CAACuB,CAAC,CAAC;QACxBR,yBAAyB,CAACQ,CAAC,CAAC;;QAE5B;QACA,MAAME,QAAQ,GAAG,MAAM/C,oBAAoB,CACzC8C,IAAI,CAACE,OAAO,EACZ9B,cAAc,EACd4B,IAAI,CAACG,OAAO,EACZH,IAAI,CAACvC,MACP,CAAC;QAEDqB,OAAO,CAACsB,IAAI,CAAC;UACXF,OAAO,EAAEF,IAAI,CAACE,OAAO;UACrBC,OAAO,EAAEH,IAAI,CAACG,OAAO;UACrBF;QACF,CAAC,CAAC;;QAEF;QACA7B,cAAc,GAAG6B,QAAQ,CAACA,QAAQ;;QAElC;QACA9B,gBAAgB,CAAC6B,IAAI,CAACE,OAAO,EAAED,QAAQ,CAACA,QAAQ,CAAC;MACnD;MAEAlB,UAAU,CAACD,OAAO,CAAC;IAErB,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,SAAS;MACRxB,eAAe,CAAC,KAAK,CAAC;MACtBU,yBAAyB,CAAC,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAACf,QAAQ,EAAEgB,iBAAiB,EAAErB,gBAAgB,CAAC,CAAC;;EAEnD;EACA1E,SAAS,CAAC,MAAM;IACd,IAAI2E,cAAc,EAAE;MAClBwB,eAAe,CAACxB,cAAc,CAAC;IACjC;EACF,CAAC,EAAE,CAACA,cAAc,EAAEwB,eAAe,CAAC,CAAC;;EAErC;EACA,MAAMW,mBAAmB,GAAG7G,WAAW,CAAEwG,OAAO,IAAK;IACnD,MAAMM,KAAK,GAAGtC,MAAM,CAACuC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKT,OAAO,CAAC;IAChD,IAAI,CAACM,KAAK,IAAI,CAACA,KAAK,CAACI,aAAa,EAAE;IAEpC,MAAMC,OAAO,GAAG;MACdF,EAAE,EAAE,OAAOG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACvBb,OAAO;MACPC,OAAO,EAAEK,KAAK,CAACI,aAAa;MAC5BI,MAAM,EAAE,UAAU;MAClBvD,MAAM,EAAE;QAAE,GAAGH,aAAa,CAACS,QAAQ,CAACN;MAAO,CAAC;MAC5CwD,cAAc,EAAE,CAACvB,eAAe,CAACQ,OAAO,CAAC,IAAI,CAAC,IAAI;IACpD,CAAC;IAEDzB,WAAW,CAACyC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,OAAO,CAAC,CAAC;IACvClB,kBAAkB,CAACuB,IAAI,KAAK;MAC1B,GAAGA,IAAI;MACP,CAAChB,OAAO,GAAG,CAACgB,IAAI,CAAChB,OAAO,CAAC,IAAI,CAAC,IAAI;IACpC,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAAChC,MAAM,EAAEwB,eAAe,CAAC,CAAC;;EAE7B;EACA,MAAMyB,YAAY,GAAGzH,WAAW,CAAE0H,KAAK,IAAK;IAC1C,IAAIA,KAAK,IAAI,CAAC,EAAE;IAChB3C,WAAW,CAACyC,IAAI,IAAI;MAClB,MAAMG,WAAW,GAAG,CAAC,GAAGH,IAAI,CAAC;MAC7B,CAACG,WAAW,CAACD,KAAK,CAAC,EAAEC,WAAW,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAACC,WAAW,CAACD,KAAK,GAAG,CAAC,CAAC,EAAEC,WAAW,CAACD,KAAK,CAAC,CAAC;MAC3F,OAAOC,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,cAAc,GAAG5H,WAAW,CAAE0H,KAAK,IAAK;IAC5C,IAAIA,KAAK,IAAI5C,QAAQ,CAACsB,MAAM,GAAG,CAAC,EAAE;IAClCrB,WAAW,CAACyC,IAAI,IAAI;MAClB,MAAMG,WAAW,GAAG,CAAC,GAAGH,IAAI,CAAC;MAC7B,CAACG,WAAW,CAACD,KAAK,CAAC,EAAEC,WAAW,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAACC,WAAW,CAACD,KAAK,GAAG,CAAC,CAAC,EAAEC,WAAW,CAACD,KAAK,CAAC,CAAC;MAC3F,OAAOC,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC7C,QAAQ,CAACsB,MAAM,CAAC,CAAC;;EAErB;EACA,MAAMyB,gBAAgB,GAAIrB,OAAO,IAAK;IACpC,MAAMM,KAAK,GAAGtC,MAAM,CAACuC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKT,OAAO,CAAC;IAChD,OAAO,CAAAM,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEgB,aAAa,KAAI,aAAatD,MAAM,CAACuD,SAAS,CAACf,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKT,OAAO,CAAC,GAAG,CAAC,EAAE;EAC3F,CAAC;;EAED;EACA,MAAMwB,gBAAgB,GAAI1B,IAAI,IAAK;IACjC,MAAMgB,MAAM,GAAGhB,IAAI,CAACgB,MAAM,IAAI,UAAU;IACxC,oBACE3D,OAAA,CAAC1D,GAAG;MAACgI,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eACxD1E,OAAA,CAAClD,OAAO;QAAC6H,KAAK,eACZ3E,OAAA,CAAC1D,GAAG;UAAAoI,QAAA,eACF1E,OAAA,CAACvD,UAAU;YAACmI,OAAO,EAAC,OAAO;YAAAF,QAAA,GAAC,UAAQ,EAACzE,aAAa,CAAC0D,MAAM,CAAC,CAACxD,IAAI;UAAA;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CACN;QAAAN,QAAA,eACC1E,OAAA,CAACxD,UAAU;UAACyI,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAC,SAAS;UAAAR,QAAA,eACvC1E,OAAA,CAACpB,QAAQ;YAAAiG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV,CAAC;;EAED;EACA,MAAMG,wBAAwB,GAAIC,UAAU,IAAK;IAC/ChE,WAAW,CAACyC,IAAI,IAAIA,IAAI,CAACwB,MAAM,CAAC1C,IAAI,IAAIA,IAAI,CAACW,EAAE,KAAK8B,UAAU,CAAC,CAAC;EAClE,CAAC;;EAED;EACA,MAAME,uBAAuB,GAAIC,YAAY,IAAK;IAChD;IACA,MAAMpC,KAAK,GAAGtC,MAAM,CAACuC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKiC,YAAY,CAAC1C,OAAO,CAAC;;IAE7D;IACA,MAAM2C,WAAW,GAAG;MAClB,GAAGD,YAAY;MACfzC,OAAO,EAAE,CAAAK,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEI,aAAa,KAAIgC,YAAY,CAACzC;IAChD,CAAC;IAEDhB,2BAA2B,CAAC0D,WAAW,CAAC;IACxC5D,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM6D,iBAAiB,GAAI3C,OAAO,IAAK;IACrC,IAAI,CAACjB,wBAAwB,EAAE;IAE/BT,WAAW,CAACyC,IAAI,IAAIA,IAAI,CAAC6B,GAAG,CAAC/C,IAAI,IAC/BA,IAAI,CAACW,EAAE,KAAKzB,wBAAwB,CAACyB,EAAE,GACnC;MAAE,GAAGX,IAAI;MAAEG;IAAQ,CAAC,GACpBH,IACN,CAAC,CAAC;IACFf,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAM+D,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAClE,OAAO,EAAE;IAEd,MAAMmE,eAAe,GAAIC,IAAI,IAAK;MAChC,OAAO,IAAIpC,IAAI,CAACoC,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;IACxC,CAAC;IAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEjC,KAAK,KAAK;MACpC,OAAO,aAAaA,KAAK,GAAG,CAAC;AACnC,SAASiC,KAAK,CAAClD,OAAO;AACtB,EAAEkD,KAAK,CAACpD,QAAQ;AAChB;AACA,CAAC;IACG,CAAC;IAED,MAAMqD,MAAM,GAAG;AACnB,aAAaL,eAAe,CAAC,IAAInC,IAAI,CAAC,CAAC,CAAC;AACxC;AACA;AACA;AACA,EAAE1C,cAAc;AAChB;AACA;AACA,EAAEI,QAAQ,CAACuE,GAAG,CAAC,CAAC/C,IAAI,EAAEoB,KAAK,KAAK,GAAGA,KAAK,GAAG,CAAC,KAAKG,gBAAgB,CAACvB,IAAI,CAACE,OAAO,CAAC,KAAKF,IAAI,CAACG,OAAO,GAAG,CAAC,CAACoD,IAAI,CAAC,IAAI,CAAC;AAC/G;AACA;AACA,EAAEzE,OAAO,CAACiE,GAAG,CAAC,CAACM,KAAK,EAAEjC,KAAK,KAAKgC,WAAW,CAACC,KAAK,EAAEjC,KAAK,CAAC,CAAC,CAACmC,IAAI,CAAC,IAAI,CAAC;AACrE;AACA;AACA,EAAEzE,OAAO,CAAC0E,MAAM,CAAC,CAACC,GAAG,EAAEJ,KAAK,KAAK;MAC/B,MAAMK,GAAG,GAAGL,KAAK,CAACnD,OAAO;MACzBuD,GAAG,CAACC,GAAG,CAAC,GAAGL,KAAK,CAACpD,QAAQ;MACzB,OAAOwD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACN,CAAC;IAEG,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,MAAM,CAAC,EAAE;MAAEO,IAAI,EAAE;IAAa,CAAC,CAAC;IACvD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;IACZG,CAAC,CAACI,QAAQ,GAAG,qBAAqB,IAAIvD,IAAI,CAAC,CAAC,CAACwD,WAAW,CAAC,CAAC,MAAM;IAChEJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,CAAC,CAAC;IAC5BA,CAAC,CAACQ,KAAK,CAAC,CAAC;IACTP,QAAQ,CAACK,IAAI,CAACG,WAAW,CAACT,CAAC,CAAC;IAC5BF,GAAG,CAACY,eAAe,CAACb,GAAG,CAAC;EAC1B,CAAC;EAED,oBACEzG,OAAA,CAAC1D,GAAG;IAACgI,EAAE,EAAE;MAAEiD,QAAQ,EAAE,UAAU;MAAEC,EAAE,EAAEzF,UAAU,GAAG,CAAC,GAAG;IAAE,CAAE;IAAA2C,QAAA,eACxD1E,OAAA,CAACzD,KAAK;MAAC+H,EAAE,EAAE;QACTjB,CAAC,EAAEtB,UAAU,GAAG,CAAC,GAAG,GAAG;QACvB0F,CAAC,EAAE,CAAC;QACJC,SAAS,EAAE3F,UAAU,GAAG,MAAM,GAAG;MACnC,CAAE;MAAA2C,QAAA,gBACA1E,OAAA,CAAC1D,GAAG;QAACgI,EAAE,EAAE;UACPC,OAAO,EAAE,MAAM;UACfoD,cAAc,EAAE,eAAe;UAC/BnD,UAAU,EAAE,QAAQ;UACpBgD,EAAE,EAAEzF,UAAU,GAAG,CAAC,GAAG;QACvB,CAAE;QAAA2C,QAAA,gBACA1E,OAAA,CAAC1D,GAAG;UAACgI,EAAE,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEoD,GAAG,EAAE;UAAI,CAAE;UAAAlD,QAAA,gBAC3D1E,OAAA,CAACV,cAAc;YACbgF,EAAE,EAAE;cACFY,KAAK,EAAE/C,iBAAiB,GAAG,cAAc,GAAG,gBAAgB;cAC5D0F,EAAE,EAAE;YACN;UAAE;YAAAhD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFhF,OAAA,CAACnC,gBAAgB;YACfiK,OAAO,eACL9H,OAAA,CAACpC,MAAM;cACLmK,OAAO,EAAE5F,iBAAkB;cAC3B6F,QAAQ,EAAGC,CAAC,IAAK7F,oBAAoB,CAAC6F,CAAC,CAACC,MAAM,CAACH,OAAO,CAAE;cACxD9C,IAAI,EAAC;YAAO;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CACF;YACDmD,KAAK,eACHnI,OAAA,CAACvD,UAAU;cACTmI,OAAO,EAAC,IAAI;cACZN,EAAE,EAAE;gBACF8D,QAAQ,EAAErG,UAAU,GAAG,QAAQ,GAAG,MAAM;gBACxCmD,KAAK,EAAE/C,iBAAiB,GAAG,cAAc,GAAG;cAC9C,CAAE;cAAAuC,QAAA,GACH,gBACe,EAACvC,iBAAiB,GAAG,UAAU,GAAG,OAAO;YAAA;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C;UACb;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,EACDzD,YAAY,iBACXvB,OAAA,CAAC1D,GAAG;YAACgI,EAAE,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEC,UAAU,EAAE,QAAQ;cAAEoD,GAAG,EAAE;YAAI,CAAE;YAAAlD,QAAA,gBAC3D1E,OAAA,CAACtC,gBAAgB;cAACuH,IAAI,EAAE;YAAG;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9BhF,OAAA,CAACvD,UAAU;cAACmI,OAAO,EAAC,OAAO;cAACM,KAAK,EAAC,gBAAgB;cAAAR,QAAA,GAAC,aACtC,EAACzC,sBAAsB,GAAG,CAAC;YAAA;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACNhF,OAAA,CAAC1D,GAAG;UAACgI,EAAE,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEqD,GAAG,EAAE;UAAE,CAAE;UAAAlD,QAAA,GAClCjD,OAAO,iBACNzB,OAAA,CAAClD,OAAO;YAAC6H,KAAK,EAAC,iBAAiB;YAAAD,QAAA,eAC9B1E,OAAA,CAACxD,UAAU;cACT6L,OAAO,EAAE1C,oBAAqB;cAC9BT,KAAK,EAAC,SAAS;cAAAR,QAAA,eAEf1E,OAAA,CAACZ,YAAY;gBAAAyF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACV,eACDhF,OAAA,CAAClD,OAAO;YAAC6H,KAAK,EAAC,eAAe;YAAAD,QAAA,eAC5B1E,OAAA,CAACxD,UAAU;cACT6L,OAAO,EAAErH,gBAAiB;cAC1BkE,KAAK,EAAC,SAAS;cAAAR,QAAA,eAEf1E,OAAA,CAACd,YAAY;gBAAA2F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACVhF,OAAA,CAAClD,OAAO;YAAC6H,KAAK,EAAE5C,UAAU,GAAG,UAAU,GAAG,QAAS;YAAA2C,QAAA,eACjD1E,OAAA,CAACxD,UAAU;cAAC6L,OAAO,EAAEA,CAAA,KAAMrG,aAAa,CAAC6B,IAAI,IAAI,CAACA,IAAI,CAAE;cAAAa,QAAA,EACrD3C,UAAU,gBAAG/B,OAAA,CAAChB,cAAc;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAGhF,OAAA,CAAClB,cAAc;gBAAA+F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENhF,OAAA,CAACvC,QAAQ;QAAC6K,EAAE,EAAEvG,UAAW;QAACwG,OAAO,EAAC,MAAM;QAAA7D,QAAA,gBAEtC1E,OAAA,CAAC1D,GAAG;UAACgI,EAAE,EAAE;YAAEkD,EAAE,EAAE;UAAE,CAAE;UAAA9C,QAAA,gBACjB1E,OAAA,CAACvD,UAAU;YAACmI,OAAO,EAAC,WAAW;YAACN,EAAE,EAAE;cAAEkD,EAAE,EAAE;YAAI,CAAE;YAAA9C,QAAA,EAAC;UAEjD;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbhF,OAAA,CAACtD,IAAI;YAAC8L,KAAK;YAAClE,EAAE,EAAE;cAAEoD,SAAS,EAAEvG,QAAQ,CAACsB,MAAM,GAAG,MAAM,GAAG;YAAO,CAAE;YAAAiC,QAAA,EAC9DvD,QAAQ,CAACuE,GAAG,CAAC,CAAC/C,IAAI,EAAEoB,KAAK,kBACxB/D,OAAA,CAACrD,QAAQ;cAEP2H,EAAE,EAAE;gBACFkD,EAAE,EAAE,GAAG;gBACPiB,YAAY,EAAE,CAAC;gBACfC,MAAM,EAAE,WAAW;gBACnBC,WAAW,EAAE,SAAS;gBACtBC,OAAO,EAAE,kBAAkB;gBAC3B,SAAS,EAAE;kBACTA,OAAO,EAAE;gBACX;cACF,CAAE;cAAAlE,QAAA,gBAEF1E,OAAA,CAACpD,YAAY;gBACXiM,OAAO,EAAE3E,gBAAgB,CAACvB,IAAI,CAACE,OAAO,CAAE;gBACxCiG,SAAS,EAAE,UAAUnG,IAAI,CAACG,OAAO;cAAG;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC,eACFhF,OAAA,CAAC1D,GAAG;gBAACgI,EAAE,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,UAAU,EAAE,QAAQ;kBAAEoD,GAAG,EAAE;gBAAE,CAAE;gBAAAlD,QAAA,gBACzD1E,OAAA,CAAClD,OAAO;kBAAC6H,KAAK,EAAE,aAAahC,IAAI,CAACiB,cAAc,EAAG;kBAAAc,QAAA,eACjD1E,OAAA,CAAC1D,GAAG;oBAACgI,EAAE,EAAE;sBAAEC,OAAO,EAAE,MAAM;sBAAEC,UAAU,EAAE;oBAAS,CAAE;oBAAAE,QAAA,gBACjD1E,OAAA,CAACR,QAAQ;sBAAC4I,QAAQ,EAAC;oBAAO;sBAAAvD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eAC7BhF,OAAA,CAACvD,UAAU;sBAACmI,OAAO,EAAC,SAAS;sBAACN,EAAE,EAAE;wBAAEG,EAAE,EAAE;sBAAI,CAAE;sBAAAC,QAAA,EAC3C/B,IAAI,CAACiB;oBAAc;sBAAAiB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACV,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACV;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,eACVhF,OAAA,CAAC1D,GAAG;kBAACgI,EAAE,EAAE;oBAAEC,OAAO,EAAE,MAAM;oBAAEwE,aAAa,EAAE,QAAQ;oBAAElB,EAAE,EAAE;kBAAE,CAAE;kBAAAnD,QAAA,gBAC3D1E,OAAA,CAACxD,UAAU;oBACT6L,OAAO,EAAEA,CAAA,KAAMvE,YAAY,CAACC,KAAK,CAAE;oBACnCkB,IAAI,EAAC,OAAO;oBACZ+D,QAAQ,EAAEjF,KAAK,KAAK,CAAE;oBACtBO,EAAE,EAAE;sBAAEjB,CAAC,EAAE;oBAAI,CAAE;oBAAAqB,QAAA,eAEf1E,OAAA,CAACN,WAAW;sBAAC0I,QAAQ,EAAC;oBAAO;sBAAAvD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtB,CAAC,eACbhF,OAAA,CAACxD,UAAU;oBACT6L,OAAO,EAAEA,CAAA,KAAMpE,cAAc,CAACF,KAAK,CAAE;oBACrCkB,IAAI,EAAC,OAAO;oBACZ+D,QAAQ,EAAEjF,KAAK,KAAK5C,QAAQ,CAACsB,MAAM,GAAG,CAAE;oBACxC6B,EAAE,EAAE;sBAAEjB,CAAC,EAAE;oBAAI,CAAE;oBAAAqB,QAAA,eAEf1E,OAAA,CAACJ,aAAa;sBAACwI,QAAQ,EAAC;oBAAO;sBAAAvD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACNhF,OAAA,CAACxD,UAAU;kBACT6L,OAAO,EAAEA,CAAA,KAAM/C,uBAAuB,CAAC3C,IAAI,CAAE;kBAC7CsC,IAAI,EAAC,OAAO;kBAAAP,QAAA,eAEZ1E,OAAA,CAACtB,YAAY;oBAAAmG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC,eACbhF,OAAA,CAACxD,UAAU;kBACT6L,OAAO,EAAEA,CAAA,KAAMlD,wBAAwB,CAACxC,IAAI,CAACW,EAAE,CAAE;kBACjD2B,IAAI,EAAC,OAAO;kBACZC,KAAK,EAAC,OAAO;kBAAAR,QAAA,eAEb1E,OAAA,CAAC5B,UAAU;oBAAAyG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC;YAAA,GAxDDrC,IAAI,CAACW,EAAE;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAyDJ,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAGPhF,OAAA,CAAC1D,GAAG;YAACgI,EAAE,EAAE;cAAE2E,EAAE,EAAE,CAAC;cAAE1E,OAAO,EAAE,MAAM;cAAE2E,QAAQ,EAAE,MAAM;cAAEtB,GAAG,EAAE;YAAI,CAAE;YAAAlD,QAAA,EAC7D7D,MAAM,CAAC6E,GAAG,CAAEvC,KAAK,iBAChBnD,OAAA,CAAClD,OAAO;cAEN6H,KAAK,EAAE,oBAAoBtC,eAAe,CAACc,KAAK,CAACG,EAAE,CAAC,IAAI,CAAC,cAAe;cAAAoB,QAAA,eAExE1E,OAAA,CAAC9C,IAAI;gBACHiM,IAAI,eAAEnJ,OAAA,CAACxB,OAAO;kBAAAqG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAClBmD,KAAK,eACHnI,OAAA,CAAC1D,GAAG;kBAACgI,EAAE,EAAE;oBAAEC,OAAO,EAAE,MAAM;oBAAEC,UAAU,EAAE,QAAQ;oBAAEoD,GAAG,EAAE;kBAAI,CAAE;kBAAAlD,QAAA,GAC1DR,gBAAgB,CAACf,KAAK,CAACG,EAAE,CAAC,eAC3BtD,OAAA,CAAClC,KAAK;oBACJsL,YAAY,EAAE/G,eAAe,CAACc,KAAK,CAACG,EAAE,CAAC,IAAI,CAAE;oBAC7C4B,KAAK,EAAC,SAAS;oBACfZ,EAAE,EAAE;sBAAEG,EAAE,EAAE;oBAAI,CAAE;oBAAAC,QAAA,eAEhB1E,OAAA,CAACR,QAAQ;sBAAC8E,EAAE,EAAE;wBAAE8D,QAAQ,EAAE;sBAAG;oBAAE;sBAAAvD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CACN;gBACDqD,OAAO,EAAEA,CAAA,KAAMnF,mBAAmB,CAACC,KAAK,CAACG,EAAE,CAAE;gBAC7C4B,KAAK,EAAC,SAAS;gBACfN,OAAO,EAAC,UAAU;gBAClBK,IAAI,EAAC,OAAO;gBACZX,EAAE,EAAE;kBACF+E,MAAM,EAAE,SAAS;kBACjB,SAAS,EAAE;oBACTT,OAAO,EAAE;kBACX;gBACF;cAAE;gBAAA/D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GA3BG7B,KAAK,CAACG,EAAE;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA4BN,CACV;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNhF,OAAA,CAAC1D,GAAG;UAACgI,EAAE,EAAE;YAAEkD,EAAE,EAAE;UAAE,CAAE;UAAA9C,QAAA,gBACjB1E,OAAA,CAACvD,UAAU;YAACmI,OAAO,EAAC,WAAW;YAACN,EAAE,EAAE;cAAEkD,EAAE,EAAE;YAAI,CAAE;YAAA9C,QAAA,EAAC;UAEjD;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbhF,OAAA,CAACvD,UAAU;YAACmI,OAAO,EAAC,SAAS;YAACM,KAAK,EAAC,gBAAgB;YAACZ,EAAE,EAAE;cAAEC,OAAO,EAAE,OAAO;cAAEiD,EAAE,EAAE;YAAI,CAAE;YAAA9C,QAAA,EAAC;UAExF;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbhF,OAAA,CAACjD,MAAM;YACLuM,KAAK,EAAEjI,mBAAoB;YAC3B2G,QAAQ,EAAGC,CAAC,IAAK3G,sBAAsB,CAAC2G,CAAC,CAACC,MAAM,CAACoB,KAAK,CAAE;YACxDC,SAAS;YACTtE,IAAI,EAAC,OAAO;YAAAP,QAAA,gBAEZ1E,OAAA,CAAChD,QAAQ;cAACsM,KAAK,EAAC,EAAE;cAAA5E,QAAA,eAChB1E,OAAA;gBAAA0E,QAAA,EAAI;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,EACVnE,MAAM,CAAC6E,GAAG,CAAEvC,KAAK,iBAChBnD,OAAA,CAAChD,QAAQ;cAAgBsM,KAAK,EAAEnG,KAAK,CAACG,EAAG;cAAAoB,QAAA,EACtCR,gBAAgB,CAACf,KAAK,CAACG,EAAE;YAAC,GADdH,KAAK,CAACG,EAAE;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAGLvD,OAAO,iBACNzB,OAAA,CAAC1D,GAAG;UAACgI,EAAE,EAAE;YAAE2E,EAAE,EAAE;UAAE,CAAE;UAAAvE,QAAA,gBACjB1E,OAAA,CAACvD,UAAU;YAACmI,OAAO,EAAC,WAAW;YAACN,EAAE,EAAE;cAAEkD,EAAE,EAAE;YAAI,CAAE;YAAA9C,QAAA,EAAC;UAEjD;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbhF,OAAA,CAACzD,KAAK;YAACqI,OAAO,EAAC,UAAU;YAACN,EAAE,EAAE;cAAEjB,CAAC,EAAE;YAAE,CAAE;YAAAqB,QAAA,EACpCjD,OAAO,CAACiE,GAAG,CAAC,CAAC8D,MAAM,EAAEzF,KAAK,kBACzB/D,OAAA,CAAC1D,GAAG;cAAagI,EAAE,EAAE;gBAAEkD,EAAE,EAAEzD,KAAK,GAAGtC,OAAO,CAACgB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG;cAAE,CAAE;cAAAiC,QAAA,gBAC9D1E,OAAA,CAACvD,UAAU;gBAACmI,OAAO,EAAC,WAAW;gBAACM,KAAK,EAAC,SAAS;gBAACZ,EAAE,EAAE;kBAAEkD,EAAE,EAAE;gBAAI,CAAE;gBAAA9C,QAAA,EAC7D8E,MAAM,CAACC,SAAS,GAAG,eAAe,GAAG,GAAGvF,gBAAgB,CAACsF,MAAM,CAAC3G,OAAO,CAAC,KAAK2G,MAAM,CAAC1G,OAAO;cAAG;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrF,CAAC,eACbhF,OAAA,CAACvD,UAAU;gBAACmI,OAAO,EAAC,OAAO;gBAACN,EAAE,EAAE;kBAAEoF,UAAU,EAAE;gBAAW,CAAE;gBAAAhF,QAAA,EACxD8E,MAAM,CAAC5G;cAAQ;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,EACZjB,KAAK,GAAGtC,OAAO,CAACgB,MAAM,GAAG,CAAC,iBACzBzC,OAAA,CAACrC,OAAO;gBAAC2G,EAAE,EAAE;kBAAEqF,EAAE,EAAE;gBAAE;cAAE;gBAAA9E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAC1B;YAAA,GATOjB,KAAK;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eAGXhF,OAAA,CAAC7C,MAAM;QACLyM,IAAI,EAAEjI,iBAAkB;QACxBkI,OAAO,EAAEA,CAAA,KAAMjI,oBAAoB,CAAC,KAAK,CAAE;QAC3CkI,QAAQ,EAAC,IAAI;QACbP,SAAS;QAAA7E,QAAA,gBAET1E,OAAA,CAAC5C,WAAW;UAAAsH,QAAA,GAAC,qBACQ,EAAC7C,wBAAwB,GAC1CqC,gBAAgB,CAACrC,wBAAwB,CAACgB,OAAO,CAAC,GAClD,EAAE;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC,eACdhF,OAAA,CAAC3C,aAAa;UAAAqH,QAAA,eACZ1E,OAAA,CAACzC,WAAW;YAACgM,SAAS;YAACjF,EAAE,EAAE;cAAE2E,EAAE,EAAE;YAAE,CAAE;YAAAvE,QAAA,gBACnC1E,OAAA,CAACxC,UAAU;cAAAkH,QAAA,EAAC;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9BhF,OAAA,CAAClD,OAAO;cAAC6H,KAAK,eACZ3E,OAAA,CAAC1D,GAAG;gBAAAoI,QAAA,gBACF1E,OAAA,CAACvD,UAAU;kBAACmI,OAAO,EAAC,OAAO;kBAAAF,QAAA,EAAC;gBAAiB;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAC1DhF,OAAA;kBAAI+J,KAAK,EAAE;oBAAEC,MAAM,EAAE,OAAO;oBAAEC,WAAW,EAAE;kBAAO,CAAE;kBAAAvF,QAAA,EACjDzD,MAAM,CAACyE,GAAG,CAACwE,KAAK,iBACflK,OAAA;oBAAA0E,QAAA,EAAoBwF,KAAK,CAAC/J;kBAAI,GAArB+J,KAAK,CAAC5G,EAAE;oBAAAuB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAkB,CACpC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLhF,OAAA,CAACvD,UAAU;kBAACmI,OAAO,EAAC,OAAO;kBAAAF,QAAA,EAAC;gBAG5B;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACbhF,OAAA;kBAAI+J,KAAK,EAAE;oBAAEC,MAAM,EAAE,OAAO;oBAAEC,WAAW,EAAE;kBAAO,CAAE;kBAAAvF,QAAA,gBAClD1E,OAAA;oBAAA0E,QAAA,EAAI;kBAA8C;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACvDhF,OAAA;oBAAA0E,QAAA,EAAI;kBAAsC;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAC/ChF,OAAA;oBAAA0E,QAAA,EAAI;kBAA8C;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eACvDhF,OAAA;oBAAA0E,QAAA,EAAI;kBAAkD;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CACN;cAACmF,SAAS,EAAC,OAAO;cAAAzF,QAAA,eACjB1E,OAAA,CAACjD,MAAM;gBACLuM,KAAK,EAAE,CAAAzH,wBAAwB,aAAxBA,wBAAwB,uBAAxBA,wBAAwB,CAAEiB,OAAO,KAAI,EAAG;gBAC/CkF,QAAQ,EAAGC,CAAC,IAAKxC,iBAAiB,CAACwC,CAAC,CAACC,MAAM,CAACoB,KAAK,CAAE;gBACnDnB,KAAK,EAAC,OAAO;gBAAAzD,QAAA,EAEZzD,MAAM,CAACyE,GAAG,CAAEwE,KAAK,iBAChBlK,OAAA,CAAChD,QAAQ;kBAAgBsM,KAAK,EAAEY,KAAK,CAAC5G,EAAG;kBAAAoB,QAAA,EACtCwF,KAAK,CAAC/J;gBAAI,GADE+J,KAAK,CAAC5G,EAAE;kBAAAuB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEb,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAChBhF,OAAA,CAAC1C,aAAa;UAAAoH,QAAA,eACZ1E,OAAA,CAAC/C,MAAM;YAACoL,OAAO,EAAEA,CAAA,KAAMzG,oBAAoB,CAAC,KAAK,CAAE;YAAA8C,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC9D,EAAA,CAnfIN,iBAAiB;AAAAwJ,EAAA,GAAjBxJ,iBAAiB;AAqfvB,eAAAyJ,GAAA,gBAAenO,KAAK,CAACoO,IAAI,CAAC1J,iBAAiB,CAAC;AAAC,IAAAwJ,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}