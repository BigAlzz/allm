{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\PanelLayout.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, IconButton, Paper, Tooltip } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Add as AddIcon, Close as CloseIcon } from '@mui/icons-material';\nimport { Resizable } from 're-resizable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PanelContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  height: 'calc(100vh - 16px)',\n  width: '100%',\n  overflow: 'hidden',\n  padding: theme.spacing(1)\n}));\n_c = PanelContainer;\nconst Panel = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  minWidth: 300,\n  position: 'relative',\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.default\n}));\n_c2 = Panel;\nconst PanelHeader = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(1, 2),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n  userSelect: 'none'\n}));\n_c3 = PanelHeader;\nconst PanelContent = styled(Box)({\n  flex: 1,\n  overflow: 'auto',\n  position: 'relative',\n  height: 'calc(100% - 48px)' // Account for header height\n});\n_c4 = PanelContent;\nconst AddPanelButton = styled(IconButton)(({\n  theme\n}) => ({\n  position: 'fixed',\n  bottom: theme.spacing(2),\n  right: theme.spacing(2),\n  zIndex: theme.zIndex.drawer + 1\n}));\n_c5 = AddPanelButton;\nfunction PanelLayout({\n  children\n}) {\n  _s();\n  const [panels, setPanels] = useState([{\n    id: 'panel-1',\n    width: '50%'\n  }, {\n    id: 'panel-2',\n    width: '50%'\n  }]);\n  const handleResize = (index, delta) => {\n    setPanels(prev => {\n      const newPanels = [...prev];\n      const totalWidth = 100;\n      const minWidthPercent = 300 / window.innerWidth * 100;\n      const maxWidthPercent = 80;\n\n      // Calculate new width for resized panel\n      const currentWidth = parseFloat(newPanels[index].width);\n      const newWidth = Math.min(Math.max(currentWidth + delta.width / window.innerWidth * 100, minWidthPercent), maxWidthPercent);\n\n      // Update widths\n      const otherIndex = index === 0 ? 1 : 0;\n      newPanels[index].width = `${newWidth}%`;\n      newPanels[otherIndex].width = `${totalWidth - newWidth}%`;\n      return newPanels;\n    });\n  };\n  const handleRemovePanel = panelId => {\n    if (panels.length > 1) {\n      setPanels(prev => {\n        const newPanels = prev.filter(p => p.id !== panelId);\n        const newWidth = `${100 / newPanels.length}%`;\n        return newPanels.map(p => ({\n          ...p,\n          width: newWidth\n        }));\n      });\n    }\n  };\n  const handleAddNewPanel = () => {\n    setPanels(prev => {\n      const newWidth = `${100 / (prev.length + 1)}%`;\n      return [...prev.map(p => ({\n        ...p,\n        width: newWidth\n      })), {\n        id: `panel-${prev.length + 1}`,\n        width: newWidth\n      }];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PanelContainer, {\n      className: \"panel-container\",\n      children: panels.map((panel, index) => /*#__PURE__*/_jsxDEV(Resizable, {\n        size: {\n          width: panel.width,\n          height: '100%'\n        },\n        onResize: (e, direction, ref, delta) => {\n          handleResize(index, delta);\n        },\n        enable: {\n          right: index < panels.length - 1,\n          left: false\n        },\n        minWidth: 300,\n        maxWidth: \"80%\",\n        handleComponent: {\n          right: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              right: -4,\n              top: 0,\n              bottom: 0,\n              width: 8,\n              cursor: 'col-resize',\n              zIndex: 1,\n              '&:hover': {\n                backgroundColor: 'action.hover'\n              },\n              '&::after': {\n                content: '\"\"',\n                position: 'absolute',\n                left: '50%',\n                width: 2,\n                top: 0,\n                bottom: 0,\n                backgroundColor: 'divider'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        },\n        children: /*#__PURE__*/_jsxDEV(Panel, {\n          elevation: 2,\n          children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n            children: [\"Chat Window \", index + 1, panels.length > 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRemovePanel(panel.id),\n              sx: {\n                ml: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PanelContent, {\n            children: typeof children === 'function' ? children(panel.id) : children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, panel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Add new chat window\",\n      children: /*#__PURE__*/_jsxDEV(AddPanelButton, {\n        color: \"primary\",\n        onClick: handleAddNewPanel,\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PanelLayout, \"GL/XYoi8MrEq+GR/DNxdX5TpVwU=\");\n_c6 = PanelLayout;\nexport default PanelLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PanelContainer\");\n$RefreshReg$(_c2, \"Panel\");\n$RefreshReg$(_c3, \"PanelHeader\");\n$RefreshReg$(_c4, \"PanelContent\");\n$RefreshReg$(_c5, \"AddPanelButton\");\n$RefreshReg$(_c6, \"PanelLayout\");","map":{"version":3,"names":["React","useState","Box","IconButton","Paper","Tooltip","styled","Add","AddIcon","Close","CloseIcon","Resizable","jsxDEV","_jsxDEV","Fragment","_Fragment","PanelContainer","theme","display","flexDirection","height","width","overflow","padding","spacing","_c","Panel","flex","minWidth","position","backgroundColor","palette","background","default","_c2","PanelHeader","alignItems","borderBottom","divider","paper","userSelect","_c3","PanelContent","_c4","AddPanelButton","bottom","right","zIndex","drawer","_c5","PanelLayout","children","_s","panels","setPanels","id","handleResize","index","delta","prev","newPanels","totalWidth","minWidthPercent","window","innerWidth","maxWidthPercent","currentWidth","parseFloat","newWidth","Math","min","max","otherIndex","handleRemovePanel","panelId","length","filter","p","map","handleAddNewPanel","className","panel","size","onResize","e","direction","ref","enable","left","maxWidth","handleComponent","sx","top","cursor","content","fileName","_jsxFileName","lineNumber","columnNumber","elevation","onClick","ml","fontSize","title","color","_c6","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/PanelLayout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, IconButton, Paper, Tooltip } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Add as AddIcon, Close as CloseIcon } from '@mui/icons-material';\r\nimport { Resizable } from 're-resizable';\r\n\r\nconst PanelContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  height: 'calc(100vh - 16px)',\r\n  width: '100%',\r\n  overflow: 'hidden',\r\n  padding: theme.spacing(1),\r\n}));\r\n\r\nconst Panel = styled(Paper)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100%',\r\n  flex: 1,\r\n  minWidth: 300,\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst PanelHeader = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(1, 2),\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n  backgroundColor: theme.palette.background.paper,\r\n  userSelect: 'none',\r\n}));\r\n\r\nconst PanelContent = styled(Box)({\r\n  flex: 1,\r\n  overflow: 'auto',\r\n  position: 'relative',\r\n  height: 'calc(100% - 48px)', // Account for header height\r\n});\r\n\r\nconst AddPanelButton = styled(IconButton)(({ theme }) => ({\r\n  position: 'fixed',\r\n  bottom: theme.spacing(2),\r\n  right: theme.spacing(2),\r\n  zIndex: theme.zIndex.drawer + 1,\r\n}));\r\n\r\nfunction PanelLayout({ children }) {\r\n  const [panels, setPanels] = useState([\r\n    { id: 'panel-1', width: '50%' },\r\n    { id: 'panel-2', width: '50%' }\r\n  ]);\r\n\r\n  const handleResize = (index, delta) => {\r\n    setPanels(prev => {\r\n      const newPanels = [...prev];\r\n      const totalWidth = 100;\r\n      const minWidthPercent = (300 / window.innerWidth) * 100;\r\n      const maxWidthPercent = 80;\r\n\r\n      // Calculate new width for resized panel\r\n      const currentWidth = parseFloat(newPanels[index].width);\r\n      const newWidth = Math.min(\r\n        Math.max(currentWidth + (delta.width / window.innerWidth) * 100, minWidthPercent),\r\n        maxWidthPercent\r\n      );\r\n\r\n      // Update widths\r\n      const otherIndex = index === 0 ? 1 : 0;\r\n      newPanels[index].width = `${newWidth}%`;\r\n      newPanels[otherIndex].width = `${totalWidth - newWidth}%`;\r\n\r\n      return newPanels;\r\n    });\r\n  };\r\n\r\n  const handleRemovePanel = (panelId) => {\r\n    if (panels.length > 1) {\r\n      setPanels(prev => {\r\n        const newPanels = prev.filter(p => p.id !== panelId);\r\n        const newWidth = `${100 / newPanels.length}%`;\r\n        return newPanels.map(p => ({ ...p, width: newWidth }));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddNewPanel = () => {\r\n    setPanels(prev => {\r\n      const newWidth = `${100 / (prev.length + 1)}%`;\r\n      return [\r\n        ...prev.map(p => ({ ...p, width: newWidth })),\r\n        { id: `panel-${prev.length + 1}`, width: newWidth }\r\n      ];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PanelContainer className=\"panel-container\">\r\n        {panels.map((panel, index) => (\r\n          <Resizable\r\n            key={panel.id}\r\n            size={{ width: panel.width, height: '100%' }}\r\n            onResize={(e, direction, ref, delta) => {\r\n              handleResize(index, delta);\r\n            }}\r\n            enable={{\r\n              right: index < panels.length - 1,\r\n              left: false,\r\n            }}\r\n            minWidth={300}\r\n            maxWidth=\"80%\"\r\n            handleComponent={{\r\n              right: (\r\n                <Box\r\n                  sx={{\r\n                    position: 'absolute',\r\n                    right: -4,\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    width: 8,\r\n                    cursor: 'col-resize',\r\n                    zIndex: 1,\r\n                    '&:hover': {\r\n                      backgroundColor: 'action.hover',\r\n                    },\r\n                    '&::after': {\r\n                      content: '\"\"',\r\n                      position: 'absolute',\r\n                      left: '50%',\r\n                      width: 2,\r\n                      top: 0,\r\n                      bottom: 0,\r\n                      backgroundColor: 'divider',\r\n                    },\r\n                  }}\r\n                />\r\n              ),\r\n            }}\r\n          >\r\n            <Panel elevation={2}>\r\n              <PanelHeader>\r\n                Chat Window {index + 1}\r\n                {panels.length > 1 && (\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => handleRemovePanel(panel.id)}\r\n                    sx={{ ml: 'auto' }}\r\n                  >\r\n                    <CloseIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                )}\r\n              </PanelHeader>\r\n              <PanelContent>\r\n                {typeof children === 'function' ? children(panel.id) : children}\r\n              </PanelContent>\r\n            </Panel>\r\n          </Resizable>\r\n        ))}\r\n      </PanelContainer>\r\n      \r\n      <Tooltip title=\"Add new chat window\">\r\n        <AddPanelButton\r\n          color=\"primary\"\r\n          onClick={handleAddNewPanel}\r\n          size=\"large\"\r\n        >\r\n          <AddIcon />\r\n        </AddPanelButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PanelLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}