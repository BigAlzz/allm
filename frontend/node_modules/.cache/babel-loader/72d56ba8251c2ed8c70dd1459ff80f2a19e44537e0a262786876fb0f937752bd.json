{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\BrainstormControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Box, Paper, IconButton, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, Select, MenuItem, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Collapse, CircularProgress, Divider, Switch, FormControlLabel, Badge } from '@mui/material';\nimport { DragHandle as DragIcon, PlayArrow as PlayIcon, Delete as DeleteIcon, Send as SendIcon, Add as AddIcon, Settings as SettingsIcon, Info as InfoIcon, ExpandMore as ExpandMoreIcon, ExpandLess as ExpandLessIcon, MenuBook as NotebookIcon, Download as DownloadIcon, Psychology as BrainstormIcon, Loop as LoopIcon } from '@mui/icons-material';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\n\n// Model configuration presets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_PRESETS = {\n  creative: {\n    name: \"Creative\",\n    config: {\n      temperature: 0.9,\n      max_tokens: 2000,\n      top_p: 0.95,\n      frequency_penalty: 0.5,\n      presence_penalty: 0.5\n    }\n  },\n  balanced: {\n    name: \"Balanced\",\n    config: {\n      temperature: 0.7,\n      max_tokens: 2000,\n      top_p: 0.9,\n      frequency_penalty: 0.2,\n      presence_penalty: 0.2\n    }\n  },\n  precise: {\n    name: \"Precise\",\n    config: {\n      temperature: 0.3,\n      max_tokens: 2000,\n      top_p: 0.8,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    }\n  }\n};\nconst BrainstormControl = ({\n  panels,\n  onSubmitToPanels,\n  currentMessage,\n  onToggleNotebook,\n  models\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentProcessingIndex, setCurrentProcessingIndex] = useState(-1);\n  const [brainstormEnabled, setBrainstormEnabled] = useState(false);\n  const [iterationCounts, setIterationCounts] = useState({});\n\n  // Process message through the sequence when currentMessage changes\n  useEffect(() => {\n    const processBrainstorm = async () => {\n      if (!currentMessage || sequence.length === 0 || isProcessing || !brainstormEnabled) return;\n      setIsProcessing(true);\n      setResults(null);\n      try {\n        const results = [];\n        // Process through each assistant in sequence\n        for (let i = 0; i < sequence.length; i++) {\n          const item = sequence[i];\n          setCurrentProcessingIndex(i);\n\n          // Get previous response if available\n          const previousResponse = i > 0 ? results[i - 1].response.response : currentMessage;\n\n          // Process with current assistant\n          const response = await processWithAssistant(item.panelId, previousResponse, item.modelId, item.config);\n          results.push({\n            panelId: item.panelId,\n            modelId: item.modelId,\n            response\n          });\n\n          // Submit intermediate results to panel\n          onSubmitToPanels(item.panelId, response.response);\n        }\n\n        // If output panel is selected, generate final summary\n        if (selectedOutputPanel && results.length > 0) {\n          var _models$, _models$2;\n          const summaryPrompt = `Please analyze the following conversation and create a comprehensive summary that includes:\n1. Key points and decisions\n2. Different perspectives offered\n3. Final conclusions or recommendations\n\nConversation:\n${results.map((r, i) => `Assistant ${i + 1} (${r.modelId}):\n${r.response.response}\n---\n`).join('\\n')}`;\n          const summary = await processWithAssistant(selectedOutputPanel, summaryPrompt, (_models$ = models[0]) === null || _models$ === void 0 ? void 0 : _models$.id);\n\n          // Add summary to results\n          results.push({\n            panelId: selectedOutputPanel,\n            modelId: (_models$2 = models[0]) === null || _models$2 === void 0 ? void 0 : _models$2.id,\n            response: summary,\n            isSummary: true\n          });\n\n          // Submit summary to panel\n          onSubmitToPanels(selectedOutputPanel, summary.response);\n        }\n        setResults(results);\n\n        // Save brainstorm session\n        const timestamp = new Date().toISOString();\n        const sessionData = {\n          id: `brainstorm-${timestamp}`,\n          timestamp,\n          originalMessage: currentMessage,\n          sequence: sequence.map(item => ({\n            assistant: getAssistantName(item.panelId),\n            model: item.modelId\n          })),\n          results: results.map(r => ({\n            assistant: getAssistantName(r.panelId),\n            model: r.modelId,\n            response: r.response.response,\n            isSummary: r.isSummary\n          }))\n        };\n\n        // Save to localStorage\n        const savedSessions = JSON.parse(localStorage.getItem('brainstorm-sessions') || '[]');\n        savedSessions.push(sessionData);\n        localStorage.setItem('brainstorm-sessions', JSON.stringify(savedSessions));\n      } catch (error) {\n        console.error('Brainstorm error:', error);\n      } finally {\n        setIsProcessing(false);\n        setCurrentProcessingIndex(-1);\n      }\n    };\n    processBrainstorm();\n  }, [currentMessage, sequence, selectedOutputPanel, models, isProcessing, onSubmitToPanels, brainstormEnabled]);\n\n  // Add a panel to the sequence with default preset\n  const handleAddToSequence = panelId => {\n    const panel = panels.find(p => p.id === panelId);\n    if (!panel) return;\n\n    // Only add if the panel has a selected model\n    if (!panel.selectedModel) {\n      console.warn(`Panel ${panelId} has no model selected`);\n      return;\n    }\n    setSequence(prev => [...prev, {\n      id: `seq-${Date.now()}`,\n      panelId,\n      modelId: panel.selectedModel,\n      preset: 'balanced',\n      config: {\n        ...MODEL_PRESETS.balanced.config\n      },\n      iterationCount: (iterationCounts[panelId] || 0) + 1\n    }]);\n    setIterationCounts(prev => ({\n      ...prev,\n      [panelId]: (prev[panelId] || 0) + 1\n    }));\n  };\n\n  // Helper function to get assistant name from panel\n  const getAssistantName = panelId => {\n    const panel = panels.find(p => p.id === panelId);\n    return (panel === null || panel === void 0 ? void 0 : panel.assistantName) || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\n  };\n\n  // Display current configuration\n  const renderConfigInfo = item => {\n    const preset = item.preset || 'balanced';\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Preset: \", MODEL_PRESETS[preset].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"medium\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Remove a panel from the sequence\n  const handleRemoveFromSequence = sequenceId => {\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\n  };\n\n  // Open model settings dialog\n  const handleOpenModelSettings = sequenceItem => {\n    // Find the panel's current model\n    const panel = panels.find(p => p.id === sequenceItem.panelId);\n\n    // Update the sequence item to use the panel's selected model if it exists\n    const updatedItem = {\n      ...sequenceItem,\n      modelId: (panel === null || panel === void 0 ? void 0 : panel.selectedModel) || sequenceItem.modelId\n    };\n    setSelectedPanelForSettings(updatedItem);\n    setModelSettingsOpen(true);\n  };\n\n  // Update model for a panel\n  const handleModelChange = modelId => {\n    if (!selectedPanelForSettings) return;\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      modelId\n    } : item));\n    setModelSettingsOpen(false);\n  };\n  const handleDownloadReport = () => {\n    if (!results) return;\n    const formatTimestamp = date => {\n      return new Date(date).toLocaleString();\n    };\n    const formatEntry = (entry, index) => {\n      return `Assistant ${index + 1} Response:\nModel: ${entry.modelId}\n${entry.response}\n-------------------\n`;\n    };\n    const report = `AI Brainstorm Report\nGenerated: ${formatTimestamp(new Date())}\n===================\n\nOriginal Message:\n${currentMessage}\n\nProcessing Sequence:\n${sequence.map((item, index) => `${index + 1}. ${getAssistantName(item.panelId)} (${item.modelId})`).join('\\n')}\n\nResults:\n${results.map((entry, index) => formatEntry(entry, index)).join('\\n')}\n\nSummary:\n${results.reduce((acc, entry) => {\n      const key = entry.panelId;\n      acc[key] = entry.response;\n      return acc;\n    }, {})}\n`;\n    const blob = new Blob([report], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `brainstorm-report-${new Date().toISOString()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const onDragEnd = useCallback(result => {\n    if (!result.destination) return;\n    const items = Array.from(sequence);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setSequence(items);\n  }, [sequence]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      mb: isExpanded ? 1 : 0\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: isExpanded ? 1 : 0.5,\n        m: 1,\n        minHeight: isExpanded ? 'auto' : '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: isExpanded ? 1 : 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(BrainstormIcon, {\n            sx: {\n              color: brainstormEnabled ? 'primary.main' : 'text.secondary',\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: brainstormEnabled,\n              onChange: e => setBrainstormEnabled(e.target.checked),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                fontSize: isExpanded ? '1.1rem' : '1rem',\n                color: brainstormEnabled ? 'primary.main' : 'text.primary'\n              },\n              children: [\"AI Brainstorm \", brainstormEnabled ? '(Active)' : '(Off)']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), isProcessing && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Processing \", currentProcessingIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [results && /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Download Report\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleDownloadReport,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Open Notebook\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: onToggleNotebook,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(NotebookIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: isExpanded ? \"Collapse\" : \"Expand\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => setIsExpanded(prev => !prev),\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: isExpanded,\n        timeout: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Processing Sequence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"sequence\",\n              type: \"SEQUENCE\",\n              children: provided => /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                ...provided.droppableProps,\n                ref: provided.innerRef,\n                component: \"div\",\n                children: [sequence.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item.id,\n                  index: index,\n                  type: \"SEQUENCE\",\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(ListItem, {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    component: \"div\",\n                    sx: {\n                      bgcolor: snapshot.isDragging ? 'action.hover' : 'background.paper',\n                      mb: 0.5,\n                      borderRadius: 1,\n                      border: '1px solid',\n                      borderColor: 'divider',\n                      py: 0.5,\n                      '&:hover': {\n                        bgcolor: 'action.hover'\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n                      sx: {\n                        mr: 1,\n                        color: 'action.active'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: 'flex',\n                          alignItems: 'center'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          children: getAssistantName(item.panelId)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 455,\n                          columnNumber: 35\n                        }, this), renderConfigInfo(item)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 33\n                      }, this),\n                      secondary: `Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                      sx: {\n                        display: 'flex',\n                        gap: 1,\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: `Iteration ${item.iterationCount}`,\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: 'flex',\n                            alignItems: 'center',\n                            mr: 1\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(LoopIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 466,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                            variant: \"caption\",\n                            sx: {\n                              ml: 0.5\n                            },\n                            children: item.iterationCount\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 467,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 465,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Model Settings\",\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleOpenModelSettings(item);\n                          },\n                          color: \"primary\",\n                          size: \"medium\",\n                          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 478,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 473,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 472,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"Remove Panel\",\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleRemoveFromSequence(item.id);\n                          },\n                          color: \"error\",\n                          size: \"medium\",\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 487,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 27\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 23\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: panels.map(panel => /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: `Add to sequence (${iterationCounts[panel.id] || 0} iterations)`,\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                badgeContent: iterationCounts[panel.id] || 0,\n                color: \"primary\",\n                sx: {\n                  mr: 0.5\n                },\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: getAssistantName(panel.id),\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleAddToSequence(panel.id);\n                  },\n                  icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 29\n                  }, this),\n                  sx: {\n                    height: 24\n                  },\n                  color: \"primary\",\n                  variant: \"outlined\",\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this)\n            }, panel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Summary Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              display: 'block',\n              mb: 0.5\n            },\n            children: \"Select an assistant to generate the final summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedOutputPanel,\n            onChange: e => setSelectedOutputPanel(e.target.value),\n            fullWidth: true,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), panels.map(panel => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: panel.id,\n              children: getAssistantName(panel.id)\n            }, panel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }, this), results && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            sx: {\n              p: 1\n            },\n            children: results.map((result, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: index < results.length - 1 ? 1 : 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"primary\",\n                sx: {\n                  mb: 0.5\n                },\n                children: result.isSummary ? 'Final Summary' : `${getAssistantName(result.panelId)} (${result.modelId})`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: result.response\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 21\n              }, this), index < results.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: modelSettingsOpen,\n        onClose: () => setModelSettingsOpen(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Model Settings for \", selectedPanelForSettings ? getAssistantName(selectedPanelForSettings.panelId) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Available Models:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    margin: '8px 0',\n                    paddingLeft: '20px'\n                  },\n                  children: models.map(model => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: model.name\n                  }, model.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"These are the same models available in your chat assistants. Each model has different capabilities and characteristics:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    margin: '8px 0',\n                    paddingLeft: '20px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Hermes/Nous: Good for general tasks and coding\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Gemma: Efficient for shorter responses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Mixtral/Mistral: Strong reasoning and analysis\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Neural/Code-Llama: Specialized for code generation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this),\n              placement: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: (selectedPanelForSettings === null || selectedPanelForSettings === void 0 ? void 0 : selectedPanelForSettings.modelId) || '',\n                onChange: e => handleModelChange(e.target.value),\n                label: \"Model\",\n                children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: model.id,\n                  children: model.name\n                }, model.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModelSettingsOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n_s(BrainstormControl, \"2HkTtHzux95PjW8rpwjCPLg1rx8=\");\n_c = BrainstormControl;\nexport default _c2 = /*#__PURE__*/React.memo(BrainstormControl);\nvar _c, _c2;\n$RefreshReg$(_c, \"BrainstormControl\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Paper","IconButton","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","Select","MenuItem","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Collapse","CircularProgress","Divider","Switch","FormControlLabel","Badge","DragHandle","DragIcon","PlayArrow","PlayIcon","Delete","DeleteIcon","Send","SendIcon","Add","AddIcon","Settings","SettingsIcon","Info","InfoIcon","ExpandMore","ExpandMoreIcon","ExpandLess","ExpandLessIcon","MenuBook","NotebookIcon","Download","DownloadIcon","Psychology","BrainstormIcon","Loop","LoopIcon","DragDropContext","Droppable","Draggable","processWithAssistant","generateSummary","jsxDEV","_jsxDEV","MODEL_PRESETS","creative","name","config","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","balanced","precise","BrainstormControl","panels","onSubmitToPanels","currentMessage","onToggleNotebook","models","_s","sequence","setSequence","selectedOutputPanel","setSelectedOutputPanel","isProcessing","setIsProcessing","results","setResults","modelSettingsOpen","setModelSettingsOpen","selectedPanelForSettings","setSelectedPanelForSettings","isExpanded","setIsExpanded","currentProcessingIndex","setCurrentProcessingIndex","brainstormEnabled","setBrainstormEnabled","iterationCounts","setIterationCounts","processBrainstorm","length","i","item","previousResponse","response","panelId","modelId","push","_models$","_models$2","summaryPrompt","map","r","join","summary","id","isSummary","timestamp","Date","toISOString","sessionData","originalMessage","assistant","getAssistantName","model","savedSessions","JSON","parse","localStorage","getItem","setItem","stringify","error","console","handleAddToSequence","panel","find","p","selectedModel","warn","prev","now","preset","iterationCount","assistantName","findIndex","renderConfigInfo","sx","display","alignItems","ml","children","title","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","color","handleRemoveFromSequence","sequenceId","filter","handleOpenModelSettings","sequenceItem","updatedItem","handleModelChange","handleDownloadReport","formatTimestamp","date","toLocaleString","formatEntry","entry","index","report","reduce","acc","key","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","onDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","position","mb","m","minHeight","justifyContent","gap","mr","control","checked","onChange","e","target","label","fontSize","onClick","in","timeout","droppableId","provided","dense","droppableProps","ref","innerRef","component","draggableId","snapshot","draggableProps","dragHandleProps","bgcolor","isDragging","borderRadius","border","borderColor","py","primary","secondary","stopPropagation","placeholder","mt","badgeContent","icon","height","value","fullWidth","whiteSpace","my","open","onClose","maxWidth","style","margin","paddingLeft","placement","_c","_c2","memo","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/BrainstormControl.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Collapse,\r\n  CircularProgress,\r\n  Divider,\r\n  Switch,\r\n  FormControlLabel,\r\n  Badge,\r\n} from '@mui/material';\r\nimport {\r\n  DragHandle as DragIcon,\r\n  PlayArrow as PlayIcon,\r\n  Delete as DeleteIcon,\r\n  Send as SendIcon,\r\n  Add as AddIcon,\r\n  Settings as SettingsIcon,\r\n  Info as InfoIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  ExpandLess as ExpandLessIcon,\r\n  MenuBook as NotebookIcon,\r\n  Download as DownloadIcon,\r\n  Psychology as BrainstormIcon,\r\n  Loop as LoopIcon,\r\n} from '@mui/icons-material';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\r\n\r\n// Model configuration presets\r\nconst MODEL_PRESETS = {\r\n  creative: {\r\n    name: \"Creative\",\r\n    config: {\r\n      temperature: 0.9,\r\n      max_tokens: 2000,\r\n      top_p: 0.95,\r\n      frequency_penalty: 0.5,\r\n      presence_penalty: 0.5\r\n    }\r\n  },\r\n  balanced: {\r\n    name: \"Balanced\",\r\n    config: {\r\n      temperature: 0.7,\r\n      max_tokens: 2000,\r\n      top_p: 0.9,\r\n      frequency_penalty: 0.2,\r\n      presence_penalty: 0.2\r\n    }\r\n  },\r\n  precise: {\r\n    name: \"Precise\",\r\n    config: {\r\n      temperature: 0.3,\r\n      max_tokens: 2000,\r\n      top_p: 0.8,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst BrainstormControl = ({ panels, onSubmitToPanels, currentMessage, onToggleNotebook, models }) => {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\r\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [currentProcessingIndex, setCurrentProcessingIndex] = useState(-1);\r\n  const [brainstormEnabled, setBrainstormEnabled] = useState(false);\r\n  const [iterationCounts, setIterationCounts] = useState({});\r\n\r\n  // Process message through the sequence when currentMessage changes\r\n  useEffect(() => {\r\n    const processBrainstorm = async () => {\r\n      if (!currentMessage || sequence.length === 0 || isProcessing || !brainstormEnabled) return;\r\n      \r\n      setIsProcessing(true);\r\n      setResults(null);\r\n      \r\n      try {\r\n        const results = [];\r\n        // Process through each assistant in sequence\r\n        for (let i = 0; i < sequence.length; i++) {\r\n          const item = sequence[i];\r\n          setCurrentProcessingIndex(i);\r\n          \r\n          // Get previous response if available\r\n          const previousResponse = i > 0 ? results[i - 1].response.response : currentMessage;\r\n          \r\n          // Process with current assistant\r\n          const response = await processWithAssistant(\r\n            item.panelId, \r\n            previousResponse,\r\n            item.modelId,\r\n            item.config\r\n          );\r\n          \r\n          results.push({\r\n            panelId: item.panelId,\r\n            modelId: item.modelId,\r\n            response\r\n          });\r\n\r\n          // Submit intermediate results to panel\r\n          onSubmitToPanels(item.panelId, response.response);\r\n        }\r\n\r\n        // If output panel is selected, generate final summary\r\n        if (selectedOutputPanel && results.length > 0) {\r\n          const summaryPrompt = `Please analyze the following conversation and create a comprehensive summary that includes:\r\n1. Key points and decisions\r\n2. Different perspectives offered\r\n3. Final conclusions or recommendations\r\n\r\nConversation:\r\n${results.map((r, i) => `Assistant ${i + 1} (${r.modelId}):\r\n${r.response.response}\r\n---\r\n`).join('\\n')}`;\r\n\r\n          const summary = await processWithAssistant(\r\n            selectedOutputPanel,\r\n            summaryPrompt,\r\n            models[0]?.id\r\n          );\r\n\r\n          // Add summary to results\r\n          results.push({\r\n            panelId: selectedOutputPanel,\r\n            modelId: models[0]?.id,\r\n            response: summary,\r\n            isSummary: true\r\n          });\r\n\r\n          // Submit summary to panel\r\n          onSubmitToPanels(selectedOutputPanel, summary.response);\r\n        }\r\n        \r\n        setResults(results);\r\n        \r\n        // Save brainstorm session\r\n        const timestamp = new Date().toISOString();\r\n        const sessionData = {\r\n          id: `brainstorm-${timestamp}`,\r\n          timestamp,\r\n          originalMessage: currentMessage,\r\n          sequence: sequence.map(item => ({\r\n            assistant: getAssistantName(item.panelId),\r\n            model: item.modelId\r\n          })),\r\n          results: results.map(r => ({\r\n            assistant: getAssistantName(r.panelId),\r\n            model: r.modelId,\r\n            response: r.response.response,\r\n            isSummary: r.isSummary\r\n          }))\r\n        };\r\n\r\n        // Save to localStorage\r\n        const savedSessions = JSON.parse(localStorage.getItem('brainstorm-sessions') || '[]');\r\n        savedSessions.push(sessionData);\r\n        localStorage.setItem('brainstorm-sessions', JSON.stringify(savedSessions));\r\n\r\n      } catch (error) {\r\n        console.error('Brainstorm error:', error);\r\n      } finally {\r\n        setIsProcessing(false);\r\n        setCurrentProcessingIndex(-1);\r\n      }\r\n    };\r\n\r\n    processBrainstorm();\r\n  }, [currentMessage, sequence, selectedOutputPanel, models, isProcessing, onSubmitToPanels, brainstormEnabled]);\r\n\r\n  // Add a panel to the sequence with default preset\r\n  const handleAddToSequence = (panelId) => {\r\n    const panel = panels.find(p => p.id === panelId);\r\n    if (!panel) return;\r\n\r\n    // Only add if the panel has a selected model\r\n    if (!panel.selectedModel) {\r\n      console.warn(`Panel ${panelId} has no model selected`);\r\n      return;\r\n    }\r\n\r\n    setSequence(prev => [...prev, {\r\n      id: `seq-${Date.now()}`,\r\n      panelId,\r\n      modelId: panel.selectedModel,\r\n      preset: 'balanced',\r\n      config: { ...MODEL_PRESETS.balanced.config },\r\n      iterationCount: (iterationCounts[panelId] || 0) + 1\r\n    }]);\r\n\r\n    setIterationCounts(prev => ({\r\n      ...prev,\r\n      [panelId]: (prev[panelId] || 0) + 1\r\n    }));\r\n  };\r\n\r\n  // Helper function to get assistant name from panel\r\n  const getAssistantName = (panelId) => {\r\n    const panel = panels.find(p => p.id === panelId);\r\n    return panel?.assistantName || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\r\n  };\r\n\r\n  // Display current configuration\r\n  const renderConfigInfo = (item) => {\r\n    const preset = item.preset || 'balanced';\r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n        <Tooltip title={\r\n          <Box>\r\n            <Typography variant=\"body2\">Preset: {MODEL_PRESETS[preset].name}</Typography>\r\n          </Box>\r\n        }>\r\n          <IconButton size=\"medium\" color=\"primary\">\r\n            <InfoIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Remove a panel from the sequence\r\n  const handleRemoveFromSequence = (sequenceId) => {\r\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\r\n  };\r\n\r\n  // Open model settings dialog\r\n  const handleOpenModelSettings = (sequenceItem) => {\r\n    // Find the panel's current model\r\n    const panel = panels.find(p => p.id === sequenceItem.panelId);\r\n    \r\n    // Update the sequence item to use the panel's selected model if it exists\r\n    const updatedItem = {\r\n      ...sequenceItem,\r\n      modelId: panel?.selectedModel || sequenceItem.modelId\r\n    };\r\n    \r\n    setSelectedPanelForSettings(updatedItem);\r\n    setModelSettingsOpen(true);\r\n  };\r\n\r\n  // Update model for a panel\r\n  const handleModelChange = (modelId) => {\r\n    if (!selectedPanelForSettings) return;\r\n    \r\n    setSequence(prev => prev.map(item => \r\n      item.id === selectedPanelForSettings.id\r\n        ? { ...item, modelId }\r\n        : item\r\n    ));\r\n    setModelSettingsOpen(false);\r\n  };\r\n\r\n  const handleDownloadReport = () => {\r\n    if (!results) return;\r\n\r\n    const formatTimestamp = (date) => {\r\n      return new Date(date).toLocaleString();\r\n    };\r\n\r\n    const formatEntry = (entry, index) => {\r\n      return `Assistant ${index + 1} Response:\r\nModel: ${entry.modelId}\r\n${entry.response}\r\n-------------------\r\n`;\r\n    };\r\n\r\n    const report = `AI Brainstorm Report\r\nGenerated: ${formatTimestamp(new Date())}\r\n===================\r\n\r\nOriginal Message:\r\n${currentMessage}\r\n\r\nProcessing Sequence:\r\n${sequence.map((item, index) => `${index + 1}. ${getAssistantName(item.panelId)} (${item.modelId})`).join('\\n')}\r\n\r\nResults:\r\n${results.map((entry, index) => formatEntry(entry, index)).join('\\n')}\r\n\r\nSummary:\r\n${results.reduce((acc, entry) => {\r\n  const key = entry.panelId;\r\n  acc[key] = entry.response;\r\n  return acc;\r\n}, {})}\r\n`;\r\n\r\n    const blob = new Blob([report], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `brainstorm-report-${new Date().toISOString()}.txt`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(sequence);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setSequence(items);\r\n  }, [sequence]);\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', mb: isExpanded ? 1 : 0 }}>\r\n      <Paper sx={{ \r\n        p: isExpanded ? 1 : 0.5,\r\n        m: 1,\r\n        minHeight: isExpanded ? 'auto' : '40px'\r\n      }}>\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          justifyContent: 'space-between', \r\n          alignItems: 'center',\r\n          mb: isExpanded ? 1 : 0\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n            <BrainstormIcon \r\n              sx={{ \r\n                color: brainstormEnabled ? 'primary.main' : 'text.secondary',\r\n                mr: 1\r\n              }} \r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={brainstormEnabled}\r\n                  onChange={(e) => setBrainstormEnabled(e.target.checked)}\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  sx={{ \r\n                    fontSize: isExpanded ? '1.1rem' : '1rem',\r\n                    color: brainstormEnabled ? 'primary.main' : 'text.primary'\r\n                  }}\r\n                >\r\n                  AI Brainstorm {brainstormEnabled ? '(Active)' : '(Off)'}\r\n                </Typography>\r\n              }\r\n            />\r\n            {isProcessing && (\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                <CircularProgress size={16} />\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Processing {currentProcessingIndex + 1}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            {results && (\r\n              <Tooltip title=\"Download Report\">\r\n                <IconButton \r\n                  onClick={handleDownloadReport}\r\n                  color=\"primary\"\r\n                >\r\n                  <DownloadIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            <Tooltip title=\"Open Notebook\">\r\n              <IconButton \r\n                onClick={onToggleNotebook}\r\n                color=\"primary\"\r\n              >\r\n                <NotebookIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={isExpanded ? \"Collapse\" : \"Expand\"}>\r\n              <IconButton onClick={() => setIsExpanded(prev => !prev)}>\r\n                {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Collapse in={isExpanded} timeout=\"auto\">\r\n          {/* Sequence Builder */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n              Processing Sequence\r\n            </Typography>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n              <Droppable droppableId=\"sequence\" type=\"SEQUENCE\">\r\n                {(provided) => (\r\n                  <List \r\n                    dense \r\n                    {...provided.droppableProps} \r\n                    ref={provided.innerRef}\r\n                    component=\"div\"\r\n                  >\r\n                    {sequence.map((item, index) => (\r\n                      <Draggable \r\n                        key={item.id} \r\n                        draggableId={item.id} \r\n                        index={index}\r\n                        type=\"SEQUENCE\"\r\n                      >\r\n                        {(provided, snapshot) => (\r\n                          <ListItem\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            component=\"div\"\r\n                            sx={{ \r\n                              bgcolor: snapshot.isDragging ? 'action.hover' : 'background.paper',\r\n                              mb: 0.5,\r\n                              borderRadius: 1,\r\n                              border: '1px solid',\r\n                              borderColor: 'divider',\r\n                              py: 0.5,\r\n                              '&:hover': {\r\n                                bgcolor: 'action.hover',\r\n                              }\r\n                            }}\r\n                          >\r\n                            <DragIcon sx={{ mr: 1, color: 'action.active' }} />\r\n                            <ListItemText \r\n                              primary={\r\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                    {getAssistantName(item.panelId)}\r\n                                  </Typography>\r\n                                  {renderConfigInfo(item)}\r\n                                </Box>\r\n                              }\r\n                              secondary={`Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`}\r\n                            />\r\n                            <ListItemSecondaryAction sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\r\n                              <Tooltip title={`Iteration ${item.iterationCount}`}>\r\n                                <Box sx={{ display: 'flex', alignItems: 'center', mr: 1 }}>\r\n                                  <LoopIcon fontSize=\"small\" />\r\n                                  <Typography variant=\"caption\" sx={{ ml: 0.5 }}>\r\n                                    {item.iterationCount}\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Tooltip>\r\n                              <Tooltip title=\"Model Settings\">\r\n                                <IconButton \r\n                                  onClick={(e) => { e.stopPropagation(); handleOpenModelSettings(item); }}\r\n                                  color=\"primary\"\r\n                                  size=\"medium\"\r\n                                >\r\n                                  <SettingsIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                              <Tooltip title=\"Remove Panel\">\r\n                                <IconButton \r\n                                  onClick={(e) => { e.stopPropagation(); handleRemoveFromSequence(item.id); }}\r\n                                  color=\"error\"\r\n                                  size=\"medium\"\r\n                                >\r\n                                  <DeleteIcon />\r\n                                </IconButton>\r\n                              </Tooltip>\r\n                            </ListItemSecondaryAction>\r\n                          </ListItem>\r\n                        )}\r\n                      </Draggable>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                  </List>\r\n                )}\r\n              </Droppable>\r\n            </DragDropContext>\r\n\r\n            {/* Add Panel to Sequence */}\r\n            <Box sx={{ mt: 1 }}>\r\n              {panels.map((panel) => (\r\n                <Tooltip key={panel.id} title={`Add to sequence (${iterationCounts[panel.id] || 0} iterations)`}>\r\n                  <Badge \r\n                    badgeContent={iterationCounts[panel.id] || 0} \r\n                    color=\"primary\"\r\n                    sx={{ mr: 0.5 }}\r\n                  >\r\n                    <Chip\r\n                      label={getAssistantName(panel.id)}\r\n                      onClick={(e) => { e.stopPropagation(); handleAddToSequence(panel.id); }}\r\n                      icon={<AddIcon />}\r\n                      sx={{ height: 24 }}\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                    />\r\n                  </Badge>\r\n                </Tooltip>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n          \r\n          {/* Output Panel Selector */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n              Summary Assistant\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\r\n              Select an assistant to generate the final summary\r\n            </Typography>\r\n            <Select\r\n              value={selectedOutputPanel}\r\n              onChange={(e) => setSelectedOutputPanel(e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {panels.map((panel) => (\r\n                <MenuItem key={panel.id} value={panel.id}>\r\n                  {getAssistantName(panel.id)}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Box>\r\n          \r\n          {/* Results Display */}\r\n          {results && (\r\n            <Box sx={{ mt: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                Results\r\n              </Typography>\r\n              <Paper variant=\"outlined\" sx={{ p: 1 }}>\r\n                {results.map((result, index) => (\r\n                  <Box key={index} sx={{ mb: index < results.length - 1 ? 1 : 0 }}>\r\n                    <Typography variant=\"subtitle2\" color=\"primary\" sx={{ mb: 0.5 }}>\r\n                      {result.isSummary ? 'Final Summary' : `${getAssistantName(result.panelId)} (${result.modelId})`}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {result.response}\r\n                    </Typography>\r\n                    {index < results.length - 1 && (\r\n                      <Divider sx={{ my: 1 }} />\r\n                    )}\r\n                  </Box>\r\n                ))}\r\n              </Paper>\r\n            </Box>\r\n          )}\r\n        </Collapse>\r\n\r\n        {/* Model Settings Dialog */}\r\n        <Dialog \r\n          open={modelSettingsOpen} \r\n          onClose={() => setModelSettingsOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>\r\n            Model Settings for {selectedPanelForSettings ? \r\n              getAssistantName(selectedPanelForSettings.panelId) : \r\n              ''}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Model</InputLabel>\r\n              <Tooltip title={\r\n                <Box>\r\n                  <Typography variant=\"body2\">Available Models:</Typography>\r\n                  <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>\r\n                    {models.map(model => (\r\n                      <li key={model.id}>{model.name}</li>\r\n                    ))}\r\n                  </ul>\r\n                  <Typography variant=\"body2\">\r\n                    These are the same models available in your chat assistants.\r\n                    Each model has different capabilities and characteristics:\r\n                  </Typography>\r\n                  <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>\r\n                    <li>Hermes/Nous: Good for general tasks and coding</li>\r\n                    <li>Gemma: Efficient for shorter responses</li>\r\n                    <li>Mixtral/Mistral: Strong reasoning and analysis</li>\r\n                    <li>Neural/Code-Llama: Specialized for code generation</li>\r\n                  </ul>\r\n                </Box>\r\n              } placement=\"right\">\r\n                <Select\r\n                  value={selectedPanelForSettings?.modelId || ''}\r\n                  onChange={(e) => handleModelChange(e.target.value)}\r\n                  label=\"Model\"\r\n                >\r\n                  {models.map((model) => (\r\n                    <MenuItem key={model.id} value={model.id}>\r\n                      {model.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Tooltip>\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setModelSettingsOpen(false)}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(BrainstormControl); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}