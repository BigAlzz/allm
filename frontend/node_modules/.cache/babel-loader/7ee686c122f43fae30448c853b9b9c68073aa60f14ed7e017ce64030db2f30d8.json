{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\BrainstormControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, IconButton, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, Select, MenuItem, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel } from '@mui/material';\nimport { DragHandle as DragIcon, PlayArrow as PlayIcon, Delete as DeleteIcon, Send as SendIcon, Add as AddIcon, Settings as SettingsIcon, Info as InfoIcon } from '@mui/icons-material';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\n\n// Model configuration presets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_PRESETS = {\n  creative: {\n    name: \"Creative\",\n    config: {\n      temperature: 0.9,\n      max_tokens: 2000,\n      top_p: 0.95,\n      frequency_penalty: 0.5,\n      presence_penalty: 0.5\n    }\n  },\n  balanced: {\n    name: \"Balanced\",\n    config: {\n      temperature: 0.7,\n      max_tokens: 2000,\n      top_p: 0.9,\n      frequency_penalty: 0.2,\n      presence_penalty: 0.2\n    }\n  },\n  precise: {\n    name: \"Precise\",\n    config: {\n      temperature: 0.3,\n      max_tokens: 2000,\n      top_p: 0.8,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    }\n  }\n};\nconst DraggableSequence = /*#__PURE__*/React.memo(_c = ({\n  sequence,\n  onDragEnd,\n  renderItem\n}) => /*#__PURE__*/_jsxDEV(DragDropContext, {\n  onDragEnd: onDragEnd,\n  children: /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: \"sequence\",\n    children: provided => /*#__PURE__*/_jsxDEV(List, {\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      children: [sequence.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: item.id,\n        index: index,\n        children: provided => renderItem(item, index, provided)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 3\n}, this));\n_c2 = DraggableSequence;\nconst BrainstormControl = ({\n  panels,\n  onSubmitToPanels,\n  currentMessage\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\n  const [selectedPreset, setSelectedPreset] = useState('balanced');\n\n  // Get configuration for a panel\n  const getPanelConfig = panelId => {\n    const panel = sequence.find(item => item.panelId === panelId);\n    return (panel === null || panel === void 0 ? void 0 : panel.config) || MODEL_PRESETS.balanced.config;\n  };\n\n  // Handle preset change\n  const handlePresetChange = presetKey => {\n    if (!selectedPanelForSettings) return;\n    setSelectedPreset(presetKey);\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      preset: presetKey,\n      config: {\n        ...MODEL_PRESETS[presetKey].config\n      }\n    } : item));\n  };\n\n  // Add a panel to the sequence with default preset\n  const handleAddToSequence = panelId => {\n    setSequence(prev => {\n      var _availableModels$;\n      return [...prev, {\n        id: `seq-${Date.now()}`,\n        panelId,\n        modelId: ((_availableModels$ = availableModels[0]) === null || _availableModels$ === void 0 ? void 0 : _availableModels$.id) || 'default',\n        preset: 'balanced',\n        config: {\n          ...MODEL_PRESETS.balanced.config\n        }\n      }];\n    });\n  };\n\n  // Display current configuration\n  const renderConfigInfo = item => {\n    const config = item.config || MODEL_PRESETS.balanced.config;\n    const preset = item.preset || 'balanced';\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Preset: \", MODEL_PRESETS[preset].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Temperature: \", config.temperature]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Max Tokens: \", config.max_tokens]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Top P: \", config.top_p]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"medium\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Update configuration for a panel\n  const updatePanelConfig = (panelId, newConfig) => {\n    setSequence(prev => prev.map(item => item.panelId === panelId ? {\n      ...item,\n      config: {\n        ...item.config,\n        ...newConfig\n      }\n    } : item));\n  };\n\n  // Fetch available models on component mount\n  useEffect(() => {\n    fetchAvailableModels();\n  }, []);\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await fetch('/api/models');\n      const data = await response.json();\n      if (data.status === 'online') {\n        setAvailableModels(data.models);\n      }\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n\n  // Remove a panel from the sequence\n  const handleRemoveFromSequence = sequenceId => {\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\n  };\n\n  // Handle drag and drop reordering\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(sequence);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setSequence(items);\n  };\n\n  // Open model settings dialog\n  const handleOpenModelSettings = sequenceItem => {\n    setSelectedPanelForSettings(sequenceItem);\n    setModelSettingsOpen(true);\n  };\n\n  // Update model for a panel\n  const handleModelChange = modelId => {\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      modelId\n    } : item));\n    setModelSettingsOpen(false);\n  };\n\n  // Start the brainstorming process\n  const handleStartBrainstorm = async () => {\n    if (sequence.length === 0 || !currentMessage) return;\n    setIsProcessing(true);\n    try {\n      const results = [];\n\n      // Process through each assistant in sequence\n      for (const item of sequence) {\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\n        results.push({\n          panelId: item.panelId,\n          response\n        });\n      }\n\n      // Generate final summary and verdict\n      const summary = generateSummary(results);\n      setResults(summary);\n\n      // Send to selected output panel if specified\n      if (selectedOutputPanel) {\n        onSubmitToPanels(selectedOutputPanel, summary);\n      }\n    } catch (error) {\n      console.error('Brainstorm error:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const renderSequenceItem = (item, index, provided) => /*#__PURE__*/_jsxDEV(ListItem, {\n    ref: provided.innerRef,\n    ...provided.draggableProps,\n    ...provided.dragHandleProps,\n    sx: {\n      bgcolor: 'background.paper',\n      mb: 1,\n      borderRadius: 1,\n      border: '1px solid',\n      borderColor: 'divider',\n      '&:hover': {\n        bgcolor: 'action.hover'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n      sx: {\n        mr: 1,\n        color: 'action.active'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          children: [\"Panel \", panels.findIndex(p => p.id === item.panelId) + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), renderConfigInfo(item)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this),\n      secondary: `Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n      sx: {\n        display: 'flex',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Model Settings\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleOpenModelSettings(item),\n          color: \"primary\",\n          size: \"medium\",\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Remove Panel\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => handleRemoveFromSequence(item.id),\n          color: \"error\",\n          size: \"medium\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2,\n      m: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"AI Brainstorm Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Processing Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DraggableSequence, {\n        sequence: sequence,\n        onDragEnd: onDragEnd,\n        renderItem: renderSequenceItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: panels.map((panel, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add to sequence\",\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Panel ${index + 1}`,\n            onClick: () => handleAddToSequence(panel.id),\n            icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 23\n            }, this),\n            sx: {\n              mr: 1\n            },\n            color: \"primary\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)\n        }, panel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Output Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedOutputPanel,\n        onChange: e => setSelectedOutputPanel(e.target.value),\n        fullWidth: true,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), panels.map((panel, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: panel.id,\n          children: [\"Panel \", index + 1]\n        }, panel.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 22\n        }, this),\n        onClick: handleStartBrainstorm,\n        disabled: isProcessing || sequence.length === 0,\n        size: \"large\",\n        children: \"Start Brainstorm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"pre\",\n          sx: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: JSON.stringify(results, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: modelSettingsOpen,\n      onClose: () => setModelSettingsOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Model Settings for Panel \", selectedPanelForSettings ? panels.findIndex(p => p.id === selectedPanelForSettings.panelId) + 1 : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: (selectedPanelForSettings === null || selectedPanelForSettings === void 0 ? void 0 : selectedPanelForSettings.modelId) || '',\n            onChange: e => handleModelChange(e.target.value),\n            label: \"Model\",\n            children: availableModels.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: model.id,\n              children: model.name\n            }, model.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModelSettingsOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_s(BrainstormControl, \"zapGhVmLiuw12aLlMwCMQn3a4tY=\");\n_c3 = BrainstormControl;\nexport default _c4 = /*#__PURE__*/React.memo(BrainstormControl);\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DraggableSequence$React.memo\");\n$RefreshReg$(_c2, \"DraggableSequence\");\n$RefreshReg$(_c3, \"BrainstormControl\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","IconButton","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","Select","MenuItem","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","DragHandle","DragIcon","PlayArrow","PlayIcon","Delete","DeleteIcon","Send","SendIcon","Add","AddIcon","Settings","SettingsIcon","Info","InfoIcon","DragDropContext","Droppable","Draggable","processWithAssistant","generateSummary","jsxDEV","_jsxDEV","MODEL_PRESETS","creative","name","config","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","balanced","precise","DraggableSequence","memo","_c","sequence","onDragEnd","renderItem","children","droppableId","provided","droppableProps","ref","innerRef","map","item","index","draggableId","id","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c2","BrainstormControl","panels","onSubmitToPanels","currentMessage","_s","setSequence","messageQueue","setMessageQueue","selectedOutputPanel","setSelectedOutputPanel","isProcessing","setIsProcessing","results","setResults","availableModels","setAvailableModels","modelSettingsOpen","setModelSettingsOpen","selectedPanelForSettings","setSelectedPanelForSettings","selectedPreset","setSelectedPreset","getPanelConfig","panelId","panel","find","handlePresetChange","presetKey","prev","preset","handleAddToSequence","_availableModels$","Date","now","modelId","renderConfigInfo","sx","display","alignItems","ml","title","variant","size","color","updatePanelConfig","newConfig","fetchAvailableModels","response","fetch","data","json","status","models","error","console","handleRemoveFromSequence","sequenceId","filter","result","destination","items","Array","from","reorderedItem","splice","source","handleOpenModelSettings","sequenceItem","handleModelChange","handleStartBrainstorm","length","push","summary","renderSequenceItem","draggableProps","dragHandleProps","bgcolor","mb","borderRadius","border","borderColor","mr","primary","findIndex","p","secondary","gap","onClick","m","gutterBottom","mt","label","icon","value","onChange","e","target","fullWidth","justifyContent","startIcon","disabled","component","whiteSpace","JSON","stringify","open","onClose","maxWidth","model","_c3","_c4","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/BrainstormControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n} from '@mui/material';\r\nimport {\r\n  DragHandle as DragIcon,\r\n  PlayArrow as PlayIcon,\r\n  Delete as DeleteIcon,\r\n  Send as SendIcon,\r\n  Add as AddIcon,\r\n  Settings as SettingsIcon,\r\n  Info as InfoIcon,\r\n} from '@mui/icons-material';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\r\n\r\n// Model configuration presets\r\nconst MODEL_PRESETS = {\r\n  creative: {\r\n    name: \"Creative\",\r\n    config: {\r\n      temperature: 0.9,\r\n      max_tokens: 2000,\r\n      top_p: 0.95,\r\n      frequency_penalty: 0.5,\r\n      presence_penalty: 0.5\r\n    }\r\n  },\r\n  balanced: {\r\n    name: \"Balanced\",\r\n    config: {\r\n      temperature: 0.7,\r\n      max_tokens: 2000,\r\n      top_p: 0.9,\r\n      frequency_penalty: 0.2,\r\n      presence_penalty: 0.2\r\n    }\r\n  },\r\n  precise: {\r\n    name: \"Precise\",\r\n    config: {\r\n      temperature: 0.3,\r\n      max_tokens: 2000,\r\n      top_p: 0.8,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst DraggableSequence = React.memo(({ sequence, onDragEnd, renderItem }) => (\r\n  <DragDropContext onDragEnd={onDragEnd}>\r\n    <Droppable droppableId=\"sequence\">\r\n      {(provided) => (\r\n        <List {...provided.droppableProps} ref={provided.innerRef}>\r\n          {sequence.map((item, index) => (\r\n            <Draggable key={item.id} draggableId={item.id} index={index}>\r\n              {(provided) => renderItem(item, index, provided)}\r\n            </Draggable>\r\n          ))}\r\n          {provided.placeholder}\r\n        </List>\r\n      )}\r\n    </Droppable>\r\n  </DragDropContext>\r\n));\r\n\r\nconst BrainstormControl = ({ panels, onSubmitToPanels, currentMessage }) => {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [messageQueue, setMessageQueue] = useState([]);\r\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [availableModels, setAvailableModels] = useState([]);\r\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\r\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\r\n  const [selectedPreset, setSelectedPreset] = useState('balanced');\r\n\r\n  // Get configuration for a panel\r\n  const getPanelConfig = (panelId) => {\r\n    const panel = sequence.find(item => item.panelId === panelId);\r\n    return panel?.config || MODEL_PRESETS.balanced.config;\r\n  };\r\n\r\n  // Handle preset change\r\n  const handlePresetChange = (presetKey) => {\r\n    if (!selectedPanelForSettings) return;\r\n    \r\n    setSelectedPreset(presetKey);\r\n    setSequence(prev => prev.map(item =>\r\n      item.id === selectedPanelForSettings.id\r\n        ? {\r\n            ...item,\r\n            preset: presetKey,\r\n            config: { ...MODEL_PRESETS[presetKey].config }\r\n          }\r\n        : item\r\n    ));\r\n  };\r\n\r\n  // Add a panel to the sequence with default preset\r\n  const handleAddToSequence = (panelId) => {\r\n    setSequence(prev => [...prev, {\r\n      id: `seq-${Date.now()}`,\r\n      panelId,\r\n      modelId: availableModels[0]?.id || 'default',\r\n      preset: 'balanced',\r\n      config: { ...MODEL_PRESETS.balanced.config }\r\n    }]);\r\n  };\r\n\r\n  // Display current configuration\r\n  const renderConfigInfo = (item) => {\r\n    const config = item.config || MODEL_PRESETS.balanced.config;\r\n    const preset = item.preset || 'balanced';\r\n    \r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n        <Tooltip title={\r\n          <Box>\r\n            <Typography variant=\"body2\">Preset: {MODEL_PRESETS[preset].name}</Typography>\r\n            <Typography variant=\"body2\">Temperature: {config.temperature}</Typography>\r\n            <Typography variant=\"body2\">Max Tokens: {config.max_tokens}</Typography>\r\n            <Typography variant=\"body2\">Top P: {config.top_p}</Typography>\r\n          </Box>\r\n        }>\r\n          <IconButton size=\"medium\" color=\"primary\">\r\n            <InfoIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Update configuration for a panel\r\n  const updatePanelConfig = (panelId, newConfig) => {\r\n    setSequence(prev => prev.map(item =>\r\n      item.panelId === panelId\r\n        ? { ...item, config: { ...item.config, ...newConfig } }\r\n        : item\r\n    ));\r\n  };\r\n\r\n  // Fetch available models on component mount\r\n  useEffect(() => {\r\n    fetchAvailableModels();\r\n  }, []);\r\n\r\n  const fetchAvailableModels = async () => {\r\n    try {\r\n      const response = await fetch('/api/models');\r\n      const data = await response.json();\r\n      if (data.status === 'online') {\r\n        setAvailableModels(data.models);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models:', error);\r\n    }\r\n  };\r\n\r\n  // Remove a panel from the sequence\r\n  const handleRemoveFromSequence = (sequenceId) => {\r\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\r\n  };\r\n\r\n  // Handle drag and drop reordering\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(sequence);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setSequence(items);\r\n  };\r\n\r\n  // Open model settings dialog\r\n  const handleOpenModelSettings = (sequenceItem) => {\r\n    setSelectedPanelForSettings(sequenceItem);\r\n    setModelSettingsOpen(true);\r\n  };\r\n\r\n  // Update model for a panel\r\n  const handleModelChange = (modelId) => {\r\n    setSequence(prev => prev.map(item => \r\n      item.id === selectedPanelForSettings.id\r\n        ? { ...item, modelId }\r\n        : item\r\n    ));\r\n    setModelSettingsOpen(false);\r\n  };\r\n\r\n  // Start the brainstorming process\r\n  const handleStartBrainstorm = async () => {\r\n    if (sequence.length === 0 || !currentMessage) return;\r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      const results = [];\r\n      \r\n      // Process through each assistant in sequence\r\n      for (const item of sequence) {\r\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\r\n        results.push({\r\n          panelId: item.panelId,\r\n          response\r\n        });\r\n      }\r\n      \r\n      // Generate final summary and verdict\r\n      const summary = generateSummary(results);\r\n      setResults(summary);\r\n      \r\n      // Send to selected output panel if specified\r\n      if (selectedOutputPanel) {\r\n        onSubmitToPanels(selectedOutputPanel, summary);\r\n      }\r\n    } catch (error) {\r\n      console.error('Brainstorm error:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const renderSequenceItem = (item, index, provided) => (\r\n    <ListItem\r\n      ref={provided.innerRef}\r\n      {...provided.draggableProps}\r\n      {...provided.dragHandleProps}\r\n      sx={{ \r\n        bgcolor: 'background.paper', \r\n        mb: 1,\r\n        borderRadius: 1,\r\n        border: '1px solid',\r\n        borderColor: 'divider',\r\n        '&:hover': {\r\n          bgcolor: 'action.hover',\r\n        }\r\n      }}\r\n    >\r\n      <DragIcon sx={{ mr: 1, color: 'action.active' }} />\r\n      <ListItemText \r\n        primary={\r\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Typography variant=\"subtitle2\">\r\n              Panel {panels.findIndex(p => p.id === item.panelId) + 1}\r\n            </Typography>\r\n            {renderConfigInfo(item)}\r\n          </Box>\r\n        }\r\n        secondary={`Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`}\r\n      />\r\n      <ListItemSecondaryAction sx={{ display: 'flex', gap: 1 }}>\r\n        <Tooltip title=\"Model Settings\">\r\n          <IconButton \r\n            onClick={() => handleOpenModelSettings(item)}\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n          >\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Remove Panel\">\r\n          <IconButton \r\n            onClick={() => handleRemoveFromSequence(item.id)}\r\n            color=\"error\"\r\n            size=\"medium\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, m: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        AI Brainstorm Control\r\n      </Typography>\r\n      \r\n      {/* Sequence Builder */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Processing Sequence\r\n        </Typography>\r\n        <DraggableSequence \r\n          sequence={sequence}\r\n          onDragEnd={onDragEnd}\r\n          renderItem={renderSequenceItem}\r\n        />\r\n\r\n        {/* Add Panel to Sequence */}\r\n        <Box sx={{ mt: 2 }}>\r\n          {panels.map((panel, index) => (\r\n            <Tooltip key={panel.id} title=\"Add to sequence\">\r\n              <Chip\r\n                label={`Panel ${index + 1}`}\r\n                onClick={() => handleAddToSequence(panel.id)}\r\n                icon={<AddIcon />}\r\n                sx={{ mr: 1 }}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Tooltip>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Output Panel Selector */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Output Panel\r\n        </Typography>\r\n        <Select\r\n          value={selectedOutputPanel}\r\n          onChange={(e) => setSelectedOutputPanel(e.target.value)}\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {panels.map((panel, index) => (\r\n            <MenuItem key={panel.id} value={panel.id}>\r\n              Panel {index + 1}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Box>\r\n      \r\n      {/* Control Buttons */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<PlayIcon />}\r\n          onClick={handleStartBrainstorm}\r\n          disabled={isProcessing || sequence.length === 0}\r\n          size=\"large\"\r\n        >\r\n          Start Brainstorm\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Results Display */}\r\n      {results && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Results\r\n          </Typography>\r\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n            <Typography variant=\"body2\" component=\"pre\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n              {JSON.stringify(results, null, 2)}\r\n            </Typography>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Model Settings Dialog */}\r\n      <Dialog \r\n        open={modelSettingsOpen} \r\n        onClose={() => setModelSettingsOpen(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          Model Settings for Panel {selectedPanelForSettings ? \r\n            panels.findIndex(p => p.id === selectedPanelForSettings.panelId) + 1 : \r\n            ''}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>Model</InputLabel>\r\n            <Select\r\n              value={selectedPanelForSettings?.modelId || ''}\r\n              onChange={(e) => handleModelChange(e.target.value)}\r\n              label=\"Model\"\r\n            >\r\n              {availableModels.map((model) => (\r\n                <MenuItem key={model.id} value={model.id}>\r\n                  {model.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setModelSettingsOpen(false)}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default React.memo(BrainstormControl); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}