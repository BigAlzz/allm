{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\BrainstormControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, IconButton, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, Select, MenuItem, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Collapse, CircularProgress, Divider, Switch, FormControlLabel } from '@mui/material';\nimport { DragHandle as DragIcon, PlayArrow as PlayIcon, Delete as DeleteIcon, Send as SendIcon, Add as AddIcon, Settings as SettingsIcon, Info as InfoIcon, ExpandMore as ExpandMoreIcon, ExpandLess as ExpandLessIcon, MenuBook as NotebookIcon, Download as DownloadIcon, Psychology as BrainstormIcon } from '@mui/icons-material';\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\n\n// Model configuration presets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_PRESETS = {\n  creative: {\n    name: \"Creative\",\n    config: {\n      temperature: 0.9,\n      max_tokens: 2000,\n      top_p: 0.95,\n      frequency_penalty: 0.5,\n      presence_penalty: 0.5\n    }\n  },\n  balanced: {\n    name: \"Balanced\",\n    config: {\n      temperature: 0.7,\n      max_tokens: 2000,\n      top_p: 0.9,\n      frequency_penalty: 0.2,\n      presence_penalty: 0.2\n    }\n  },\n  precise: {\n    name: \"Precise\",\n    config: {\n      temperature: 0.3,\n      max_tokens: 2000,\n      top_p: 0.8,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    }\n  }\n};\nconst BrainstormControl = ({\n  panels,\n  onSubmitToPanels,\n  currentMessage,\n  onToggleNotebook,\n  models\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [currentProcessingIndex, setCurrentProcessingIndex] = useState(-1);\n  const [brainstormEnabled, setBrainstormEnabled] = useState(false);\n\n  // Process message through the sequence when currentMessage changes\n  useEffect(() => {\n    const processBrainstorm = async () => {\n      if (!currentMessage || sequence.length === 0 || isProcessing || !brainstormEnabled) return;\n      setIsProcessing(true);\n      setResults(null);\n      try {\n        const results = [];\n        // Process through each assistant in sequence\n        for (let i = 0; i < sequence.length; i++) {\n          const item = sequence[i];\n          setCurrentProcessingIndex(i);\n\n          // Get previous response if available\n          const previousResponse = i > 0 ? results[i - 1].response.response : currentMessage;\n\n          // Process with current assistant\n          const response = await processWithAssistant(item.panelId, previousResponse, item.modelId, item.config);\n          results.push({\n            panelId: item.panelId,\n            modelId: item.modelId,\n            response\n          });\n\n          // Submit intermediate results to panel\n          onSubmitToPanels(item.panelId, response.response);\n        }\n\n        // If output panel is selected, generate final summary\n        if (selectedOutputPanel && results.length > 0) {\n          var _models$, _models$2;\n          const summaryPrompt = `Please analyze the following conversation and create a comprehensive summary that includes:\n1. Key points and decisions\n2. Different perspectives offered\n3. Final conclusions or recommendations\n\nConversation:\n${results.map((r, i) => `Assistant ${i + 1} (${r.modelId}):\n${r.response.response}\n---\n`).join('\\n')}`;\n          const summary = await processWithAssistant(selectedOutputPanel, summaryPrompt, (_models$ = models[0]) === null || _models$ === void 0 ? void 0 : _models$.id);\n\n          // Add summary to results\n          results.push({\n            panelId: selectedOutputPanel,\n            modelId: (_models$2 = models[0]) === null || _models$2 === void 0 ? void 0 : _models$2.id,\n            response: summary,\n            isSummary: true\n          });\n\n          // Submit summary to panel\n          onSubmitToPanels(selectedOutputPanel, summary.response);\n        }\n        setResults(results);\n\n        // Save brainstorm session\n        const timestamp = new Date().toISOString();\n        const sessionData = {\n          id: `brainstorm-${timestamp}`,\n          timestamp,\n          originalMessage: currentMessage,\n          sequence: sequence.map(item => ({\n            assistant: getAssistantName(item.panelId),\n            model: item.modelId\n          })),\n          results: results.map(r => ({\n            assistant: getAssistantName(r.panelId),\n            model: r.modelId,\n            response: r.response.response,\n            isSummary: r.isSummary\n          }))\n        };\n\n        // Save to localStorage\n        const savedSessions = JSON.parse(localStorage.getItem('brainstorm-sessions') || '[]');\n        savedSessions.push(sessionData);\n        localStorage.setItem('brainstorm-sessions', JSON.stringify(savedSessions));\n      } catch (error) {\n        console.error('Brainstorm error:', error);\n      } finally {\n        setIsProcessing(false);\n        setCurrentProcessingIndex(-1);\n      }\n    };\n    processBrainstorm();\n  }, [currentMessage, sequence, selectedOutputPanel, models, isProcessing, onSubmitToPanels, brainstormEnabled]);\n\n  // Add a panel to the sequence with default preset\n  const handleAddToSequence = panelId => {\n    const panel = panels.find(p => p.id === panelId);\n    if (!panel) return;\n\n    // Only add if the panel has a selected model\n    if (!panel.selectedModel) {\n      console.warn(`Panel ${panelId} has no model selected`);\n      return;\n    }\n    setSequence(prev => [...prev, {\n      id: `seq-${Date.now()}`,\n      panelId,\n      modelId: panel.selectedModel,\n      preset: 'balanced',\n      config: {\n        ...MODEL_PRESETS.balanced.config\n      }\n    }]);\n  };\n\n  // Helper function to get assistant name from panel\n  const getAssistantName = panelId => {\n    const panel = panels.find(p => p.id === panelId);\n    return (panel === null || panel === void 0 ? void 0 : panel.assistantName) || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\n  };\n\n  // Display current configuration\n  const renderConfigInfo = item => {\n    const preset = item.preset || 'balanced';\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Preset: \", MODEL_PRESETS[preset].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"medium\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Remove a panel from the sequence\n  const handleRemoveFromSequence = sequenceId => {\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\n  };\n\n  // Open model settings dialog\n  const handleOpenModelSettings = sequenceItem => {\n    // Find the panel's current model\n    const panel = panels.find(p => p.id === sequenceItem.panelId);\n\n    // Update the sequence item to use the panel's selected model if it exists\n    const updatedItem = {\n      ...sequenceItem,\n      modelId: (panel === null || panel === void 0 ? void 0 : panel.selectedModel) || sequenceItem.modelId\n    };\n    setSelectedPanelForSettings(updatedItem);\n    setModelSettingsOpen(true);\n  };\n\n  // Update model for a panel\n  const handleModelChange = modelId => {\n    if (!selectedPanelForSettings) return;\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      modelId\n    } : item));\n    setModelSettingsOpen(false);\n  };\n  const handleDownloadReport = () => {\n    if (!results) return;\n    const formatTimestamp = date => {\n      return new Date(date).toLocaleString();\n    };\n    const formatEntry = (entry, index) => {\n      return `Assistant ${index + 1} Response:\nModel: ${entry.modelId}\n${entry.response}\n-------------------\n`;\n    };\n    const report = `AI Brainstorm Report\nGenerated: ${formatTimestamp(new Date())}\n===================\n\nOriginal Message:\n${currentMessage}\n\nProcessing Sequence:\n${sequence.map((item, index) => `${index + 1}. ${getAssistantName(item.panelId)} (${item.modelId})`).join('\\n')}\n\nResults:\n${results.map((entry, index) => formatEntry(entry, index)).join('\\n')}\n\nSummary:\n${results.reduce((acc, entry) => {\n      const key = entry.panelId;\n      acc[key] = entry.response;\n      return acc;\n    }, {})}\n`;\n    const blob = new Blob([report], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `brainstorm-report-${new Date().toISOString()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      mb: isExpanded ? 1 : 0\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: isExpanded ? 1 : 0.5,\n        m: 1,\n        minHeight: isExpanded ? 'auto' : '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: isExpanded ? 1 : 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(BrainstormIcon, {\n            sx: {\n              color: brainstormEnabled ? 'primary.main' : 'text.secondary',\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: brainstormEnabled,\n              onChange: e => setBrainstormEnabled(e.target.checked),\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                fontSize: isExpanded ? '1.1rem' : '1rem',\n                color: brainstormEnabled ? 'primary.main' : 'text.primary'\n              },\n              children: [\"AI Brainstorm \", brainstormEnabled ? '(Active)' : '(Off)']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), isProcessing && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Processing \", currentProcessingIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [results && /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Download Report\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleDownloadReport,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Open Notebook\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: onToggleNotebook,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(NotebookIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: isExpanded ? \"Collapse\" : \"Expand\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => setIsExpanded(prev => !prev),\n              children: isExpanded ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 31\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: isExpanded,\n        timeout: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Processing Sequence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: sequence.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                bgcolor: 'background.paper',\n                mb: 0.5,\n                borderRadius: 1,\n                border: '1px solid',\n                borderColor: 'divider',\n                py: 0.5,\n                '&:hover': {\n                  bgcolor: 'action.hover'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n                sx: {\n                  mr: 1,\n                  color: 'action.active'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: getAssistantName(item.panelId)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 25\n                  }, this), renderConfigInfo(item)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 23\n                }, this),\n                secondary: `Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Model Settings\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleOpenModelSettings(item);\n                    },\n                    color: \"primary\",\n                    size: \"medium\",\n                    children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Remove Panel\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleRemoveFromSequence(item.id);\n                    },\n                    color: \"error\",\n                    size: \"medium\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: panels.map(panel => /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Add to sequence\",\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: getAssistantName(panel.id),\n                onClick: e => {\n                  e.stopPropagation();\n                  handleAddToSequence(panel.id);\n                },\n                icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 27\n                }, this),\n                sx: {\n                  mr: 0.5,\n                  height: 24\n                },\n                color: \"primary\",\n                variant: \"outlined\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this)\n            }, panel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Summary Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              display: 'block',\n              mb: 0.5\n            },\n            children: \"Select an assistant to generate the final summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedOutputPanel,\n            onChange: e => setSelectedOutputPanel(e.target.value),\n            fullWidth: true,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this), panels.map(panel => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: panel.id,\n              children: getAssistantName(panel.id)\n            }, panel.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), results && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 0.5\n            },\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            variant: \"outlined\",\n            sx: {\n              p: 1\n            },\n            children: results.map((result, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: index < results.length - 1 ? 1 : 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"primary\",\n                sx: {\n                  mb: 0.5\n                },\n                children: result.isSummary ? 'Final Summary' : `${getAssistantName(result.panelId)} (${result.modelId})`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: result.response\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 21\n              }, this), index < results.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: modelSettingsOpen,\n        onClose: () => setModelSettingsOpen(false),\n        maxWidth: \"sm\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: [\"Model Settings for \", selectedPanelForSettings ? getAssistantName(selectedPanelForSettings.panelId) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Available Models:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    margin: '8px 0',\n                    paddingLeft: '20px'\n                  },\n                  children: models.map(model => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: model.name\n                  }, model.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"These are the same models available in your chat assistants. Each model has different capabilities and characteristics:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    margin: '8px 0',\n                    paddingLeft: '20px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Hermes/Nous: Good for general tasks and coding\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Gemma: Efficient for shorter responses\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Mixtral/Mistral: Strong reasoning and analysis\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Neural/Code-Llama: Specialized for code generation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this),\n              placement: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: (selectedPanelForSettings === null || selectedPanelForSettings === void 0 ? void 0 : selectedPanelForSettings.modelId) || '',\n                onChange: e => handleModelChange(e.target.value),\n                label: \"Model\",\n                children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: model.id,\n                  children: model.name\n                }, model.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModelSettingsOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n};\n_s(BrainstormControl, \"/ZvBsN6FvpPsoM3+E147dYQ5Cw8=\");\n_c = BrainstormControl;\nexport default _c2 = /*#__PURE__*/React.memo(BrainstormControl);\nvar _c, _c2;\n$RefreshReg$(_c, \"BrainstormControl\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","IconButton","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","Select","MenuItem","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Collapse","CircularProgress","Divider","Switch","FormControlLabel","DragHandle","DragIcon","PlayArrow","PlayIcon","Delete","DeleteIcon","Send","SendIcon","Add","AddIcon","Settings","SettingsIcon","Info","InfoIcon","ExpandMore","ExpandMoreIcon","ExpandLess","ExpandLessIcon","MenuBook","NotebookIcon","Download","DownloadIcon","Psychology","BrainstormIcon","processWithAssistant","generateSummary","jsxDEV","_jsxDEV","MODEL_PRESETS","creative","name","config","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","balanced","precise","BrainstormControl","panels","onSubmitToPanels","currentMessage","onToggleNotebook","models","_s","sequence","setSequence","selectedOutputPanel","setSelectedOutputPanel","isProcessing","setIsProcessing","results","setResults","modelSettingsOpen","setModelSettingsOpen","selectedPanelForSettings","setSelectedPanelForSettings","isExpanded","setIsExpanded","currentProcessingIndex","setCurrentProcessingIndex","brainstormEnabled","setBrainstormEnabled","processBrainstorm","length","i","item","previousResponse","response","panelId","modelId","push","_models$","_models$2","summaryPrompt","map","r","join","summary","id","isSummary","timestamp","Date","toISOString","sessionData","originalMessage","assistant","getAssistantName","model","savedSessions","JSON","parse","localStorage","getItem","setItem","stringify","error","console","handleAddToSequence","panel","find","p","selectedModel","warn","prev","now","preset","assistantName","findIndex","renderConfigInfo","sx","display","alignItems","ml","children","title","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","color","handleRemoveFromSequence","sequenceId","filter","handleOpenModelSettings","sequenceItem","updatedItem","handleModelChange","handleDownloadReport","formatTimestamp","date","toLocaleString","formatEntry","entry","index","report","reduce","acc","key","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","position","mb","m","minHeight","justifyContent","gap","mr","control","checked","onChange","e","target","label","fontSize","onClick","in","timeout","dense","bgcolor","borderRadius","border","borderColor","py","primary","secondary","stopPropagation","mt","icon","height","value","fullWidth","result","whiteSpace","my","open","onClose","maxWidth","style","margin","paddingLeft","placement","_c","_c2","memo","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/BrainstormControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Collapse,\r\n  CircularProgress,\r\n  Divider,\r\n  Switch,\r\n  FormControlLabel,\r\n} from '@mui/material';\r\nimport {\r\n  DragHandle as DragIcon,\r\n  PlayArrow as PlayIcon,\r\n  Delete as DeleteIcon,\r\n  Send as SendIcon,\r\n  Add as AddIcon,\r\n  Settings as SettingsIcon,\r\n  Info as InfoIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  ExpandLess as ExpandLessIcon,\r\n  MenuBook as NotebookIcon,\r\n  Download as DownloadIcon,\r\n  Psychology as BrainstormIcon,\r\n} from '@mui/icons-material';\r\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\r\n\r\n// Model configuration presets\r\nconst MODEL_PRESETS = {\r\n  creative: {\r\n    name: \"Creative\",\r\n    config: {\r\n      temperature: 0.9,\r\n      max_tokens: 2000,\r\n      top_p: 0.95,\r\n      frequency_penalty: 0.5,\r\n      presence_penalty: 0.5\r\n    }\r\n  },\r\n  balanced: {\r\n    name: \"Balanced\",\r\n    config: {\r\n      temperature: 0.7,\r\n      max_tokens: 2000,\r\n      top_p: 0.9,\r\n      frequency_penalty: 0.2,\r\n      presence_penalty: 0.2\r\n    }\r\n  },\r\n  precise: {\r\n    name: \"Precise\",\r\n    config: {\r\n      temperature: 0.3,\r\n      max_tokens: 2000,\r\n      top_p: 0.8,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst BrainstormControl = ({ panels, onSubmitToPanels, currentMessage, onToggleNotebook, models }) => {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\r\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [currentProcessingIndex, setCurrentProcessingIndex] = useState(-1);\r\n  const [brainstormEnabled, setBrainstormEnabled] = useState(false);\r\n\r\n  // Process message through the sequence when currentMessage changes\r\n  useEffect(() => {\r\n    const processBrainstorm = async () => {\r\n      if (!currentMessage || sequence.length === 0 || isProcessing || !brainstormEnabled) return;\r\n      \r\n      setIsProcessing(true);\r\n      setResults(null);\r\n      \r\n      try {\r\n        const results = [];\r\n        // Process through each assistant in sequence\r\n        for (let i = 0; i < sequence.length; i++) {\r\n          const item = sequence[i];\r\n          setCurrentProcessingIndex(i);\r\n          \r\n          // Get previous response if available\r\n          const previousResponse = i > 0 ? results[i - 1].response.response : currentMessage;\r\n          \r\n          // Process with current assistant\r\n          const response = await processWithAssistant(\r\n            item.panelId, \r\n            previousResponse,\r\n            item.modelId,\r\n            item.config\r\n          );\r\n          \r\n          results.push({\r\n            panelId: item.panelId,\r\n            modelId: item.modelId,\r\n            response\r\n          });\r\n\r\n          // Submit intermediate results to panel\r\n          onSubmitToPanels(item.panelId, response.response);\r\n        }\r\n\r\n        // If output panel is selected, generate final summary\r\n        if (selectedOutputPanel && results.length > 0) {\r\n          const summaryPrompt = `Please analyze the following conversation and create a comprehensive summary that includes:\r\n1. Key points and decisions\r\n2. Different perspectives offered\r\n3. Final conclusions or recommendations\r\n\r\nConversation:\r\n${results.map((r, i) => `Assistant ${i + 1} (${r.modelId}):\r\n${r.response.response}\r\n---\r\n`).join('\\n')}`;\r\n\r\n          const summary = await processWithAssistant(\r\n            selectedOutputPanel,\r\n            summaryPrompt,\r\n            models[0]?.id\r\n          );\r\n\r\n          // Add summary to results\r\n          results.push({\r\n            panelId: selectedOutputPanel,\r\n            modelId: models[0]?.id,\r\n            response: summary,\r\n            isSummary: true\r\n          });\r\n\r\n          // Submit summary to panel\r\n          onSubmitToPanels(selectedOutputPanel, summary.response);\r\n        }\r\n        \r\n        setResults(results);\r\n        \r\n        // Save brainstorm session\r\n        const timestamp = new Date().toISOString();\r\n        const sessionData = {\r\n          id: `brainstorm-${timestamp}`,\r\n          timestamp,\r\n          originalMessage: currentMessage,\r\n          sequence: sequence.map(item => ({\r\n            assistant: getAssistantName(item.panelId),\r\n            model: item.modelId\r\n          })),\r\n          results: results.map(r => ({\r\n            assistant: getAssistantName(r.panelId),\r\n            model: r.modelId,\r\n            response: r.response.response,\r\n            isSummary: r.isSummary\r\n          }))\r\n        };\r\n\r\n        // Save to localStorage\r\n        const savedSessions = JSON.parse(localStorage.getItem('brainstorm-sessions') || '[]');\r\n        savedSessions.push(sessionData);\r\n        localStorage.setItem('brainstorm-sessions', JSON.stringify(savedSessions));\r\n\r\n      } catch (error) {\r\n        console.error('Brainstorm error:', error);\r\n      } finally {\r\n        setIsProcessing(false);\r\n        setCurrentProcessingIndex(-1);\r\n      }\r\n    };\r\n\r\n    processBrainstorm();\r\n  }, [currentMessage, sequence, selectedOutputPanel, models, isProcessing, onSubmitToPanels, brainstormEnabled]);\r\n\r\n  // Add a panel to the sequence with default preset\r\n  const handleAddToSequence = (panelId) => {\r\n    const panel = panels.find(p => p.id === panelId);\r\n    if (!panel) return;\r\n\r\n    // Only add if the panel has a selected model\r\n    if (!panel.selectedModel) {\r\n      console.warn(`Panel ${panelId} has no model selected`);\r\n      return;\r\n    }\r\n\r\n    setSequence(prev => [...prev, {\r\n      id: `seq-${Date.now()}`,\r\n      panelId,\r\n      modelId: panel.selectedModel,\r\n      preset: 'balanced',\r\n      config: { ...MODEL_PRESETS.balanced.config }\r\n    }]);\r\n  };\r\n\r\n  // Helper function to get assistant name from panel\r\n  const getAssistantName = (panelId) => {\r\n    const panel = panels.find(p => p.id === panelId);\r\n    return panel?.assistantName || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\r\n  };\r\n\r\n  // Display current configuration\r\n  const renderConfigInfo = (item) => {\r\n    const preset = item.preset || 'balanced';\r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n        <Tooltip title={\r\n          <Box>\r\n            <Typography variant=\"body2\">Preset: {MODEL_PRESETS[preset].name}</Typography>\r\n          </Box>\r\n        }>\r\n          <IconButton size=\"medium\" color=\"primary\">\r\n            <InfoIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Remove a panel from the sequence\r\n  const handleRemoveFromSequence = (sequenceId) => {\r\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\r\n  };\r\n\r\n  // Open model settings dialog\r\n  const handleOpenModelSettings = (sequenceItem) => {\r\n    // Find the panel's current model\r\n    const panel = panels.find(p => p.id === sequenceItem.panelId);\r\n    \r\n    // Update the sequence item to use the panel's selected model if it exists\r\n    const updatedItem = {\r\n      ...sequenceItem,\r\n      modelId: panel?.selectedModel || sequenceItem.modelId\r\n    };\r\n    \r\n    setSelectedPanelForSettings(updatedItem);\r\n    setModelSettingsOpen(true);\r\n  };\r\n\r\n  // Update model for a panel\r\n  const handleModelChange = (modelId) => {\r\n    if (!selectedPanelForSettings) return;\r\n    \r\n    setSequence(prev => prev.map(item => \r\n      item.id === selectedPanelForSettings.id\r\n        ? { ...item, modelId }\r\n        : item\r\n    ));\r\n    setModelSettingsOpen(false);\r\n  };\r\n\r\n  const handleDownloadReport = () => {\r\n    if (!results) return;\r\n\r\n    const formatTimestamp = (date) => {\r\n      return new Date(date).toLocaleString();\r\n    };\r\n\r\n    const formatEntry = (entry, index) => {\r\n      return `Assistant ${index + 1} Response:\r\nModel: ${entry.modelId}\r\n${entry.response}\r\n-------------------\r\n`;\r\n    };\r\n\r\n    const report = `AI Brainstorm Report\r\nGenerated: ${formatTimestamp(new Date())}\r\n===================\r\n\r\nOriginal Message:\r\n${currentMessage}\r\n\r\nProcessing Sequence:\r\n${sequence.map((item, index) => `${index + 1}. ${getAssistantName(item.panelId)} (${item.modelId})`).join('\\n')}\r\n\r\nResults:\r\n${results.map((entry, index) => formatEntry(entry, index)).join('\\n')}\r\n\r\nSummary:\r\n${results.reduce((acc, entry) => {\r\n  const key = entry.panelId;\r\n  acc[key] = entry.response;\r\n  return acc;\r\n}, {})}\r\n`;\r\n\r\n    const blob = new Blob([report], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `brainstorm-report-${new Date().toISOString()}.txt`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', mb: isExpanded ? 1 : 0 }}>\r\n      <Paper sx={{ \r\n        p: isExpanded ? 1 : 0.5,\r\n        m: 1,\r\n        minHeight: isExpanded ? 'auto' : '40px'\r\n      }}>\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          justifyContent: 'space-between', \r\n          alignItems: 'center',\r\n          mb: isExpanded ? 1 : 0\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n            <BrainstormIcon \r\n              sx={{ \r\n                color: brainstormEnabled ? 'primary.main' : 'text.secondary',\r\n                mr: 1\r\n              }} \r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={brainstormEnabled}\r\n                  onChange={(e) => setBrainstormEnabled(e.target.checked)}\r\n                  size=\"small\"\r\n                />\r\n              }\r\n              label={\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  sx={{ \r\n                    fontSize: isExpanded ? '1.1rem' : '1rem',\r\n                    color: brainstormEnabled ? 'primary.main' : 'text.primary'\r\n                  }}\r\n                >\r\n                  AI Brainstorm {brainstormEnabled ? '(Active)' : '(Off)'}\r\n                </Typography>\r\n              }\r\n            />\r\n            {isProcessing && (\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                <CircularProgress size={16} />\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Processing {currentProcessingIndex + 1}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            {results && (\r\n              <Tooltip title=\"Download Report\">\r\n                <IconButton \r\n                  onClick={handleDownloadReport}\r\n                  color=\"primary\"\r\n                >\r\n                  <DownloadIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            <Tooltip title=\"Open Notebook\">\r\n              <IconButton \r\n                onClick={onToggleNotebook}\r\n                color=\"primary\"\r\n              >\r\n                <NotebookIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={isExpanded ? \"Collapse\" : \"Expand\"}>\r\n              <IconButton onClick={() => setIsExpanded(prev => !prev)}>\r\n                {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Box>\r\n\r\n        <Collapse in={isExpanded} timeout=\"auto\">\r\n          {/* Sequence Builder */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n              Processing Sequence\r\n            </Typography>\r\n            <List dense>\r\n              {sequence.map((item, index) => (\r\n                <ListItem\r\n                  key={item.id}\r\n                  sx={{ \r\n                    bgcolor: 'background.paper', \r\n                    mb: 0.5,\r\n                    borderRadius: 1,\r\n                    border: '1px solid',\r\n                    borderColor: 'divider',\r\n                    py: 0.5,\r\n                    '&:hover': {\r\n                      bgcolor: 'action.hover',\r\n                    }\r\n                  }}\r\n                >\r\n                  <DragIcon sx={{ mr: 1, color: 'action.active' }} />\r\n                  <ListItemText \r\n                    primary={\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Typography variant=\"subtitle2\">\r\n                          {getAssistantName(item.panelId)}\r\n                        </Typography>\r\n                        {renderConfigInfo(item)}\r\n                      </Box>\r\n                    }\r\n                    secondary={`Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`}\r\n                  />\r\n                  <ListItemSecondaryAction sx={{ display: 'flex', gap: 1 }}>\r\n                    <Tooltip title=\"Model Settings\">\r\n                      <IconButton \r\n                        onClick={(e) => { e.stopPropagation(); handleOpenModelSettings(item); }}\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                      >\r\n                        <SettingsIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Remove Panel\">\r\n                      <IconButton \r\n                        onClick={(e) => { e.stopPropagation(); handleRemoveFromSequence(item.id); }}\r\n                        color=\"error\"\r\n                        size=\"medium\"\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n\r\n            {/* Add Panel to Sequence */}\r\n            <Box sx={{ mt: 1 }}>\r\n              {panels.map((panel) => (\r\n                <Tooltip key={panel.id} title=\"Add to sequence\">\r\n                  <Chip\r\n                    label={getAssistantName(panel.id)}\r\n                    onClick={(e) => { e.stopPropagation(); handleAddToSequence(panel.id); }}\r\n                    icon={<AddIcon />}\r\n                    sx={{ mr: 0.5, height: 24 }}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </Tooltip>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n          \r\n          {/* Output Panel Selector */}\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n              Summary Assistant\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mb: 0.5 }}>\r\n              Select an assistant to generate the final summary\r\n            </Typography>\r\n            <Select\r\n              value={selectedOutputPanel}\r\n              onChange={(e) => setSelectedOutputPanel(e.target.value)}\r\n              fullWidth\r\n              size=\"small\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {panels.map((panel) => (\r\n                <MenuItem key={panel.id} value={panel.id}>\r\n                  {getAssistantName(panel.id)}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Box>\r\n          \r\n          {/* Results Display */}\r\n          {results && (\r\n            <Box sx={{ mt: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                Results\r\n              </Typography>\r\n              <Paper variant=\"outlined\" sx={{ p: 1 }}>\r\n                {results.map((result, index) => (\r\n                  <Box key={index} sx={{ mb: index < results.length - 1 ? 1 : 0 }}>\r\n                    <Typography variant=\"subtitle2\" color=\"primary\" sx={{ mb: 0.5 }}>\r\n                      {result.isSummary ? 'Final Summary' : `${getAssistantName(result.panelId)} (${result.modelId})`}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                      {result.response}\r\n                    </Typography>\r\n                    {index < results.length - 1 && (\r\n                      <Divider sx={{ my: 1 }} />\r\n                    )}\r\n                  </Box>\r\n                ))}\r\n              </Paper>\r\n            </Box>\r\n          )}\r\n        </Collapse>\r\n\r\n        {/* Model Settings Dialog */}\r\n        <Dialog \r\n          open={modelSettingsOpen} \r\n          onClose={() => setModelSettingsOpen(false)}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>\r\n            Model Settings for {selectedPanelForSettings ? \r\n              getAssistantName(selectedPanelForSettings.panelId) : \r\n              ''}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <FormControl fullWidth sx={{ mt: 2 }}>\r\n              <InputLabel>Model</InputLabel>\r\n              <Tooltip title={\r\n                <Box>\r\n                  <Typography variant=\"body2\">Available Models:</Typography>\r\n                  <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>\r\n                    {models.map(model => (\r\n                      <li key={model.id}>{model.name}</li>\r\n                    ))}\r\n                  </ul>\r\n                  <Typography variant=\"body2\">\r\n                    These are the same models available in your chat assistants.\r\n                    Each model has different capabilities and characteristics:\r\n                  </Typography>\r\n                  <ul style={{ margin: '8px 0', paddingLeft: '20px' }}>\r\n                    <li>Hermes/Nous: Good for general tasks and coding</li>\r\n                    <li>Gemma: Efficient for shorter responses</li>\r\n                    <li>Mixtral/Mistral: Strong reasoning and analysis</li>\r\n                    <li>Neural/Code-Llama: Specialized for code generation</li>\r\n                  </ul>\r\n                </Box>\r\n              } placement=\"right\">\r\n                <Select\r\n                  value={selectedPanelForSettings?.modelId || ''}\r\n                  onChange={(e) => handleModelChange(e.target.value)}\r\n                  label=\"Model\"\r\n                >\r\n                  {models.map((model) => (\r\n                    <MenuItem key={model.id} value={model.id}>\r\n                      {model.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Tooltip>\r\n            </FormControl>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setModelSettingsOpen(false)}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(BrainstormControl); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}