{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\BrainstormControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, IconButton, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, Select, MenuItem, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel } from '@mui/material';\nimport { DragHandle as DragIcon, PlayArrow as PlayIcon, Delete as DeleteIcon, Send as SendIcon, Add as AddIcon, Settings as SettingsIcon, Info as InfoIcon } from '@mui/icons-material';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\n\n// Model configuration presets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_PRESETS = {\n  creative: {\n    name: \"Creative\",\n    config: {\n      temperature: 0.9,\n      max_tokens: 2000,\n      top_p: 0.95,\n      frequency_penalty: 0.5,\n      presence_penalty: 0.5\n    }\n  },\n  balanced: {\n    name: \"Balanced\",\n    config: {\n      temperature: 0.7,\n      max_tokens: 2000,\n      top_p: 0.9,\n      frequency_penalty: 0.2,\n      presence_penalty: 0.2\n    }\n  },\n  precise: {\n    name: \"Precise\",\n    config: {\n      temperature: 0.3,\n      max_tokens: 2000,\n      top_p: 0.8,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    }\n  }\n};\nconst BrainstormControl = ({\n  panels,\n  onSubmitToPanels,\n  currentMessage\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [messageQueue, setMessageQueue] = useState([]);\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\n  const [selectedPreset, setSelectedPreset] = useState('balanced');\n\n  // Get configuration for a panel\n  const getPanelConfig = panelId => {\n    const panel = sequence.find(item => item.panelId === panelId);\n    return (panel === null || panel === void 0 ? void 0 : panel.config) || MODEL_PRESETS.balanced.config;\n  };\n\n  // Handle preset change\n  const handlePresetChange = presetKey => {\n    if (!selectedPanelForSettings) return;\n    setSelectedPreset(presetKey);\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      preset: presetKey,\n      config: {\n        ...MODEL_PRESETS[presetKey].config\n      }\n    } : item));\n  };\n\n  // Add a panel to the sequence with default preset\n  const handleAddToSequence = panelId => {\n    setSequence(prev => {\n      var _availableModels$;\n      return [...prev, {\n        id: `seq-${Date.now()}`,\n        panelId,\n        modelId: ((_availableModels$ = availableModels[0]) === null || _availableModels$ === void 0 ? void 0 : _availableModels$.id) || 'default',\n        preset: 'balanced',\n        config: {\n          ...MODEL_PRESETS.balanced.config\n        }\n      }];\n    });\n  };\n\n  // Display current configuration\n  const renderConfigInfo = item => {\n    const config = item.config || MODEL_PRESETS.balanced.config;\n    const preset = item.preset || 'balanced';\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Preset: \", MODEL_PRESETS[preset].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Temperature: \", config.temperature]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Max Tokens: \", config.max_tokens]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Top P: \", config.top_p]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"medium\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Update configuration for a panel\n  const updatePanelConfig = (panelId, newConfig) => {\n    setSequence(prev => prev.map(item => item.panelId === panelId ? {\n      ...item,\n      config: {\n        ...item.config,\n        ...newConfig\n      }\n    } : item));\n  };\n\n  // Fetch available models on component mount\n  useEffect(() => {\n    fetchAvailableModels();\n  }, []);\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await fetch('/api/models');\n      const data = await response.json();\n      if (data.status === 'online') {\n        setAvailableModels(data.models);\n      }\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n\n  // Remove a panel from the sequence\n  const handleRemoveFromSequence = sequenceId => {\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\n  };\n\n  // Handle drag and drop reordering\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(sequence);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setSequence(items);\n  };\n\n  // Open model settings dialog\n  const handleOpenModelSettings = sequenceItem => {\n    setSelectedPanelForSettings(sequenceItem);\n    setModelSettingsOpen(true);\n  };\n\n  // Update model for a panel\n  const handleModelChange = modelId => {\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      modelId\n    } : item));\n    setModelSettingsOpen(false);\n  };\n\n  // Start the brainstorming process\n  const handleStartBrainstorm = async () => {\n    if (sequence.length === 0 || !currentMessage) return;\n    setIsProcessing(true);\n    try {\n      const results = [];\n\n      // Process through each assistant in sequence\n      for (const item of sequence) {\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\n        results.push({\n          panelId: item.panelId,\n          response\n        });\n      }\n\n      // Generate final summary and verdict\n      const summary = generateSummary(results);\n      setResults(summary);\n\n      // Send to selected output panel if specified\n      if (selectedOutputPanel) {\n        onSubmitToPanels(selectedOutputPanel, summary);\n      }\n    } catch (error) {\n      console.error('Brainstorm error:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2,\n      m: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"AI Brainstorm Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Processing Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"sequence\",\n          children: provided => /*#__PURE__*/_jsxDEV(List, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            children: [sequence.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(ListItem, {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                sx: {\n                  bgcolor: 'background.paper',\n                  mb: 1,\n                  borderRadius: 1,\n                  border: '1px solid',\n                  borderColor: 'divider',\n                  '&:hover': {\n                    bgcolor: 'action.hover'\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n                  sx: {\n                    mr: 1,\n                    color: 'action.active'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: [\"Panel \", panels.findIndex(p => p.id === item.panelId) + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 31\n                    }, this), renderConfigInfo(item)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 29\n                  }, this),\n                  secondary: `Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Model Settings\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => handleOpenModelSettings(item),\n                      color: \"primary\",\n                      size: \"medium\",\n                      children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Remove Panel\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => handleRemoveFromSequence(item.id),\n                      color: \"error\",\n                      size: \"medium\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: panels.map((panel, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add to sequence\",\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Panel ${index + 1}`,\n            onClick: () => handleAddToSequence(panel.id),\n            icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 23\n            }, this),\n            sx: {\n              mr: 1\n            },\n            color: \"primary\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, panel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Output Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedOutputPanel,\n        onChange: e => setSelectedOutputPanel(e.target.value),\n        fullWidth: true,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), panels.map((panel, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: panel.id,\n          children: [\"Panel \", index + 1]\n        }, panel.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 22\n        }, this),\n        onClick: handleStartBrainstorm,\n        disabled: isProcessing || sequence.length === 0,\n        size: \"large\",\n        children: \"Start Brainstorm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"pre\",\n          sx: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: JSON.stringify(results, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: modelSettingsOpen,\n      onClose: () => setModelSettingsOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Model Settings for Panel \", selectedPanelForSettings ? panels.findIndex(p => p.id === selectedPanelForSettings.panelId) + 1 : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: (selectedPanelForSettings === null || selectedPanelForSettings === void 0 ? void 0 : selectedPanelForSettings.modelId) || '',\n            onChange: e => handleModelChange(e.target.value),\n            label: \"Model\",\n            children: availableModels.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: model.id,\n              children: model.name\n            }, model.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModelSettingsOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(BrainstormControl, \"zapGhVmLiuw12aLlMwCMQn3a4tY=\");\n_c = BrainstormControl;\nexport default BrainstormControl;\nvar _c;\n$RefreshReg$(_c, \"BrainstormControl\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","IconButton","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","Select","MenuItem","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","DragHandle","DragIcon","PlayArrow","PlayIcon","Delete","DeleteIcon","Send","SendIcon","Add","AddIcon","Settings","SettingsIcon","Info","InfoIcon","DragDropContext","Droppable","Draggable","processWithAssistant","generateSummary","jsxDEV","_jsxDEV","MODEL_PRESETS","creative","name","config","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","balanced","precise","BrainstormControl","panels","onSubmitToPanels","currentMessage","_s","sequence","setSequence","messageQueue","setMessageQueue","selectedOutputPanel","setSelectedOutputPanel","isProcessing","setIsProcessing","results","setResults","availableModels","setAvailableModels","modelSettingsOpen","setModelSettingsOpen","selectedPanelForSettings","setSelectedPanelForSettings","selectedPreset","setSelectedPreset","getPanelConfig","panelId","panel","find","item","handlePresetChange","presetKey","prev","map","id","preset","handleAddToSequence","_availableModels$","Date","now","modelId","renderConfigInfo","sx","display","alignItems","ml","children","title","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","color","updatePanelConfig","newConfig","fetchAvailableModels","response","fetch","data","json","status","models","error","console","handleRemoveFromSequence","sequenceId","filter","onDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","handleOpenModelSettings","sequenceItem","handleModelChange","handleStartBrainstorm","length","push","summary","p","m","gutterBottom","mb","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","bgcolor","borderRadius","border","borderColor","mr","primary","findIndex","secondary","gap","onClick","placeholder","mt","label","icon","value","onChange","e","target","fullWidth","justifyContent","startIcon","disabled","component","whiteSpace","JSON","stringify","open","onClose","maxWidth","model","_c","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/BrainstormControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n} from '@mui/material';\r\nimport {\r\n  DragHandle as DragIcon,\r\n  PlayArrow as PlayIcon,\r\n  Delete as DeleteIcon,\r\n  Send as SendIcon,\r\n  Add as AddIcon,\r\n  Settings as SettingsIcon,\r\n  Info as InfoIcon,\r\n} from '@mui/icons-material';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\r\n\r\n// Model configuration presets\r\nconst MODEL_PRESETS = {\r\n  creative: {\r\n    name: \"Creative\",\r\n    config: {\r\n      temperature: 0.9,\r\n      max_tokens: 2000,\r\n      top_p: 0.95,\r\n      frequency_penalty: 0.5,\r\n      presence_penalty: 0.5\r\n    }\r\n  },\r\n  balanced: {\r\n    name: \"Balanced\",\r\n    config: {\r\n      temperature: 0.7,\r\n      max_tokens: 2000,\r\n      top_p: 0.9,\r\n      frequency_penalty: 0.2,\r\n      presence_penalty: 0.2\r\n    }\r\n  },\r\n  precise: {\r\n    name: \"Precise\",\r\n    config: {\r\n      temperature: 0.3,\r\n      max_tokens: 2000,\r\n      top_p: 0.8,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst BrainstormControl = ({ panels, onSubmitToPanels, currentMessage }) => {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [messageQueue, setMessageQueue] = useState([]);\r\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [availableModels, setAvailableModels] = useState([]);\r\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\r\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\r\n  const [selectedPreset, setSelectedPreset] = useState('balanced');\r\n\r\n  // Get configuration for a panel\r\n  const getPanelConfig = (panelId) => {\r\n    const panel = sequence.find(item => item.panelId === panelId);\r\n    return panel?.config || MODEL_PRESETS.balanced.config;\r\n  };\r\n\r\n  // Handle preset change\r\n  const handlePresetChange = (presetKey) => {\r\n    if (!selectedPanelForSettings) return;\r\n    \r\n    setSelectedPreset(presetKey);\r\n    setSequence(prev => prev.map(item =>\r\n      item.id === selectedPanelForSettings.id\r\n        ? {\r\n            ...item,\r\n            preset: presetKey,\r\n            config: { ...MODEL_PRESETS[presetKey].config }\r\n          }\r\n        : item\r\n    ));\r\n  };\r\n\r\n  // Add a panel to the sequence with default preset\r\n  const handleAddToSequence = (panelId) => {\r\n    setSequence(prev => [...prev, {\r\n      id: `seq-${Date.now()}`,\r\n      panelId,\r\n      modelId: availableModels[0]?.id || 'default',\r\n      preset: 'balanced',\r\n      config: { ...MODEL_PRESETS.balanced.config }\r\n    }]);\r\n  };\r\n\r\n  // Display current configuration\r\n  const renderConfigInfo = (item) => {\r\n    const config = item.config || MODEL_PRESETS.balanced.config;\r\n    const preset = item.preset || 'balanced';\r\n    \r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n        <Tooltip title={\r\n          <Box>\r\n            <Typography variant=\"body2\">Preset: {MODEL_PRESETS[preset].name}</Typography>\r\n            <Typography variant=\"body2\">Temperature: {config.temperature}</Typography>\r\n            <Typography variant=\"body2\">Max Tokens: {config.max_tokens}</Typography>\r\n            <Typography variant=\"body2\">Top P: {config.top_p}</Typography>\r\n          </Box>\r\n        }>\r\n          <IconButton size=\"medium\" color=\"primary\">\r\n            <InfoIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Update configuration for a panel\r\n  const updatePanelConfig = (panelId, newConfig) => {\r\n    setSequence(prev => prev.map(item =>\r\n      item.panelId === panelId\r\n        ? { ...item, config: { ...item.config, ...newConfig } }\r\n        : item\r\n    ));\r\n  };\r\n\r\n  // Fetch available models on component mount\r\n  useEffect(() => {\r\n    fetchAvailableModels();\r\n  }, []);\r\n\r\n  const fetchAvailableModels = async () => {\r\n    try {\r\n      const response = await fetch('/api/models');\r\n      const data = await response.json();\r\n      if (data.status === 'online') {\r\n        setAvailableModels(data.models);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models:', error);\r\n    }\r\n  };\r\n\r\n  // Remove a panel from the sequence\r\n  const handleRemoveFromSequence = (sequenceId) => {\r\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\r\n  };\r\n\r\n  // Handle drag and drop reordering\r\n  const onDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(sequence);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setSequence(items);\r\n  };\r\n\r\n  // Open model settings dialog\r\n  const handleOpenModelSettings = (sequenceItem) => {\r\n    setSelectedPanelForSettings(sequenceItem);\r\n    setModelSettingsOpen(true);\r\n  };\r\n\r\n  // Update model for a panel\r\n  const handleModelChange = (modelId) => {\r\n    setSequence(prev => prev.map(item => \r\n      item.id === selectedPanelForSettings.id\r\n        ? { ...item, modelId }\r\n        : item\r\n    ));\r\n    setModelSettingsOpen(false);\r\n  };\r\n\r\n  // Start the brainstorming process\r\n  const handleStartBrainstorm = async () => {\r\n    if (sequence.length === 0 || !currentMessage) return;\r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      const results = [];\r\n      \r\n      // Process through each assistant in sequence\r\n      for (const item of sequence) {\r\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\r\n        results.push({\r\n          panelId: item.panelId,\r\n          response\r\n        });\r\n      }\r\n      \r\n      // Generate final summary and verdict\r\n      const summary = generateSummary(results);\r\n      setResults(summary);\r\n      \r\n      // Send to selected output panel if specified\r\n      if (selectedOutputPanel) {\r\n        onSubmitToPanels(selectedOutputPanel, summary);\r\n      }\r\n    } catch (error) {\r\n      console.error('Brainstorm error:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, m: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        AI Brainstorm Control\r\n      </Typography>\r\n      \r\n      {/* Sequence Builder */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Processing Sequence\r\n        </Typography>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId=\"sequence\">\r\n            {(provided) => (\r\n              <List {...provided.droppableProps} ref={provided.innerRef}>\r\n                {sequence.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided) => (\r\n                      <ListItem\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        sx={{ \r\n                          bgcolor: 'background.paper', \r\n                          mb: 1,\r\n                          borderRadius: 1,\r\n                          border: '1px solid',\r\n                          borderColor: 'divider',\r\n                          '&:hover': {\r\n                            bgcolor: 'action.hover',\r\n                          }\r\n                        }}\r\n                      >\r\n                        <DragIcon sx={{ mr: 1, color: 'action.active' }} />\r\n                        <ListItemText \r\n                          primary={\r\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                              <Typography variant=\"subtitle2\">\r\n                                Panel {panels.findIndex(p => p.id === item.panelId) + 1}\r\n                              </Typography>\r\n                              {renderConfigInfo(item)}\r\n                            </Box>\r\n                          }\r\n                          secondary={`Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`}\r\n                        />\r\n                        <ListItemSecondaryAction sx={{ display: 'flex', gap: 1 }}>\r\n                          <Tooltip title=\"Model Settings\">\r\n                            <IconButton \r\n                              onClick={() => handleOpenModelSettings(item)}\r\n                              color=\"primary\"\r\n                              size=\"medium\"\r\n                            >\r\n                              <SettingsIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                          <Tooltip title=\"Remove Panel\">\r\n                            <IconButton \r\n                              onClick={() => handleRemoveFromSequence(item.id)}\r\n                              color=\"error\"\r\n                              size=\"medium\"\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </List>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n\r\n        {/* Add Panel to Sequence */}\r\n        <Box sx={{ mt: 2 }}>\r\n          {panels.map((panel, index) => (\r\n            <Tooltip key={panel.id} title=\"Add to sequence\">\r\n              <Chip\r\n                label={`Panel ${index + 1}`}\r\n                onClick={() => handleAddToSequence(panel.id)}\r\n                icon={<AddIcon />}\r\n                sx={{ mr: 1 }}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Tooltip>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Output Panel Selector */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Output Panel\r\n        </Typography>\r\n        <Select\r\n          value={selectedOutputPanel}\r\n          onChange={(e) => setSelectedOutputPanel(e.target.value)}\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {panels.map((panel, index) => (\r\n            <MenuItem key={panel.id} value={panel.id}>\r\n              Panel {index + 1}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Box>\r\n      \r\n      {/* Control Buttons */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<PlayIcon />}\r\n          onClick={handleStartBrainstorm}\r\n          disabled={isProcessing || sequence.length === 0}\r\n          size=\"large\"\r\n        >\r\n          Start Brainstorm\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Results Display */}\r\n      {results && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Results\r\n          </Typography>\r\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n            <Typography variant=\"body2\" component=\"pre\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n              {JSON.stringify(results, null, 2)}\r\n            </Typography>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Model Settings Dialog */}\r\n      <Dialog \r\n        open={modelSettingsOpen} \r\n        onClose={() => setModelSettingsOpen(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          Model Settings for Panel {selectedPanelForSettings ? \r\n            panels.findIndex(p => p.id === selectedPanelForSettings.panelId) + 1 : \r\n            ''}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>Model</InputLabel>\r\n            <Select\r\n              value={selectedPanelForSettings?.modelId || ''}\r\n              onChange={(e) => handleModelChange(e.target.value)}\r\n              label=\"Model\"\r\n            >\r\n              {availableModels.map((model) => (\r\n                <MenuItem key={model.id} value={model.id}>\r\n                  {model.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setModelSettingsOpen(false)}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BrainstormControl; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,KAAK,EACLC,UAAU,EACVC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,EACvBC,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,IAAI,EACJC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,UAAU,QACL,eAAe;AACtB,SACEC,UAAU,IAAIC,QAAQ,EACtBC,SAAS,IAAIC,QAAQ,EACrBC,MAAM,IAAIC,UAAU,EACpBC,IAAI,IAAIC,QAAQ,EAChBC,GAAG,IAAIC,OAAO,EACdC,QAAQ,IAAIC,YAAY,EACxBC,IAAI,IAAIC,QAAQ,QACX,qBAAqB;AAC5B,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SAASC,oBAAoB,EAAEC,eAAe,QAAQ,0BAA0B;;AAEhF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE;IACRC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE;MACNC,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,IAAI;MACXC,iBAAiB,EAAE,GAAG;MACtBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRP,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE;MACNC,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,GAAG;MACVC,iBAAiB,EAAE,GAAG;MACtBC,gBAAgB,EAAE;IACpB;EACF,CAAC;EACDE,OAAO,EAAE;IACPR,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;MACNC,WAAW,EAAE,GAAG;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,GAAG;MACVC,iBAAiB,EAAE,CAAC;MACpBC,gBAAgB,EAAE;IACpB;EACF;AACF,CAAC;AAED,MAAMG,iBAAiB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,gBAAgB;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4D,YAAY,EAAEC,eAAe,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC8D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACgE,YAAY,EAAEC,eAAe,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkE,OAAO,EAAEC,UAAU,CAAC,GAAGnE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoE,eAAe,EAAEC,kBAAkB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACwE,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EAC9E,MAAM,CAAC0E,cAAc,EAAEC,iBAAiB,CAAC,GAAG3E,QAAQ,CAAC,UAAU,CAAC;;EAEhE;EACA,MAAM4E,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAMC,KAAK,GAAGpB,QAAQ,CAACqB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,OAAO,KAAKA,OAAO,CAAC;IAC7D,OAAO,CAAAC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEjC,MAAM,KAAIH,aAAa,CAACS,QAAQ,CAACN,MAAM;EACvD,CAAC;;EAED;EACA,MAAMoC,kBAAkB,GAAIC,SAAS,IAAK;IACxC,IAAI,CAACV,wBAAwB,EAAE;IAE/BG,iBAAiB,CAACO,SAAS,CAAC;IAC5BvB,WAAW,CAACwB,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACJ,IAAI,IAC/BA,IAAI,CAACK,EAAE,KAAKb,wBAAwB,CAACa,EAAE,GACnC;MACE,GAAGL,IAAI;MACPM,MAAM,EAAEJ,SAAS;MACjBrC,MAAM,EAAE;QAAE,GAAGH,aAAa,CAACwC,SAAS,CAAC,CAACrC;MAAO;IAC/C,CAAC,GACDmC,IACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMO,mBAAmB,GAAIV,OAAO,IAAK;IACvClB,WAAW,CAACwB,IAAI;MAAA,IAAAK,iBAAA;MAAA,OAAI,CAAC,GAAGL,IAAI,EAAE;QAC5BE,EAAE,EAAE,OAAOI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QACvBb,OAAO;QACPc,OAAO,EAAE,EAAAH,iBAAA,GAAApB,eAAe,CAAC,CAAC,CAAC,cAAAoB,iBAAA,uBAAlBA,iBAAA,CAAoBH,EAAE,KAAI,SAAS;QAC5CC,MAAM,EAAE,UAAU;QAClBzC,MAAM,EAAE;UAAE,GAAGH,aAAa,CAACS,QAAQ,CAACN;QAAO;MAC7C,CAAC,CAAC;IAAA,EAAC;EACL,CAAC;;EAED;EACA,MAAM+C,gBAAgB,GAAIZ,IAAI,IAAK;IACjC,MAAMnC,MAAM,GAAGmC,IAAI,CAACnC,MAAM,IAAIH,aAAa,CAACS,QAAQ,CAACN,MAAM;IAC3D,MAAMyC,MAAM,GAAGN,IAAI,CAACM,MAAM,IAAI,UAAU;IAExC,oBACE7C,OAAA,CAACvC,GAAG;MAAC2F,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,eACxDxD,OAAA,CAAC/B,OAAO;QAACwF,KAAK,eACZzD,OAAA,CAACvC,GAAG;UAAA+F,QAAA,gBACFxD,OAAA,CAACpC,UAAU;YAAC8F,OAAO,EAAC,OAAO;YAAAF,QAAA,GAAC,UAAQ,EAACvD,aAAa,CAAC4C,MAAM,CAAC,CAAC1C,IAAI;UAAA;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC7E9D,OAAA,CAACpC,UAAU;YAAC8F,OAAO,EAAC,OAAO;YAAAF,QAAA,GAAC,eAAa,EAACpD,MAAM,CAACC,WAAW;UAAA;YAAAsD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eAC1E9D,OAAA,CAACpC,UAAU;YAAC8F,OAAO,EAAC,OAAO;YAAAF,QAAA,GAAC,cAAY,EAACpD,MAAM,CAACE,UAAU;UAAA;YAAAqD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eACxE9D,OAAA,CAACpC,UAAU;YAAC8F,OAAO,EAAC,OAAO;YAAAF,QAAA,GAAC,SAAO,EAACpD,MAAM,CAACG,KAAK;UAAA;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CACN;QAAAN,QAAA,eACCxD,OAAA,CAACrC,UAAU;UAACoG,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAC,SAAS;UAAAR,QAAA,eACvCxD,OAAA,CAACP,QAAQ;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEV,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAGA,CAAC7B,OAAO,EAAE8B,SAAS,KAAK;IAChDhD,WAAW,CAACwB,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACJ,IAAI,IAC/BA,IAAI,CAACH,OAAO,KAAKA,OAAO,GACpB;MAAE,GAAGG,IAAI;MAAEnC,MAAM,EAAE;QAAE,GAAGmC,IAAI,CAACnC,MAAM;QAAE,GAAG8D;MAAU;IAAE,CAAC,GACrD3B,IACN,CAAC,CAAC;EACJ,CAAC;;EAED;EACA/E,SAAS,CAAC,MAAM;IACd2G,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MAC3C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,MAAM,KAAK,QAAQ,EAAE;QAC5B5C,kBAAkB,CAAC0C,IAAI,CAACG,MAAM,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAME,wBAAwB,GAAIC,UAAU,IAAK;IAC/C3D,WAAW,CAACwB,IAAI,IAAIA,IAAI,CAACoC,MAAM,CAACvC,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKiC,UAAU,CAAC,CAAC;EAClE,CAAC;;EAED;EACA,MAAME,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IAEzB,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACnE,QAAQ,CAAC;IAClC,MAAM,CAACoE,aAAa,CAAC,GAAGH,KAAK,CAACI,MAAM,CAACN,MAAM,CAACO,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC5DN,KAAK,CAACI,MAAM,CAACN,MAAM,CAACC,WAAW,CAACO,KAAK,EAAE,CAAC,EAAEH,aAAa,CAAC;IAExDnE,WAAW,CAACgE,KAAK,CAAC;EACpB,CAAC;;EAED;EACA,MAAMO,uBAAuB,GAAIC,YAAY,IAAK;IAChD1D,2BAA2B,CAAC0D,YAAY,CAAC;IACzC5D,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM6D,iBAAiB,GAAIzC,OAAO,IAAK;IACrChC,WAAW,CAACwB,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACJ,IAAI,IAC/BA,IAAI,CAACK,EAAE,KAAKb,wBAAwB,CAACa,EAAE,GACnC;MAAE,GAAGL,IAAI;MAAEW;IAAQ,CAAC,GACpBX,IACN,CAAC,CAAC;IACFT,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,MAAM8D,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI3E,QAAQ,CAAC4E,MAAM,KAAK,CAAC,IAAI,CAAC9E,cAAc,EAAE;IAC9CS,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF,MAAMC,OAAO,GAAG,EAAE;;MAElB;MACA,KAAK,MAAMc,IAAI,IAAItB,QAAQ,EAAE;QAC3B,MAAMmD,QAAQ,GAAG,MAAMvE,oBAAoB,CAAC0C,IAAI,CAACH,OAAO,EAAErB,cAAc,EAAEwB,IAAI,CAACW,OAAO,CAAC;QACvFzB,OAAO,CAACqE,IAAI,CAAC;UACX1D,OAAO,EAAEG,IAAI,CAACH,OAAO;UACrBgC;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,MAAM2B,OAAO,GAAGjG,eAAe,CAAC2B,OAAO,CAAC;MACxCC,UAAU,CAACqE,OAAO,CAAC;;MAEnB;MACA,IAAI1E,mBAAmB,EAAE;QACvBP,gBAAgB,CAACO,mBAAmB,EAAE0E,OAAO,CAAC;MAChD;IACF,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,SAAS;MACRlD,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACExB,OAAA,CAACtC,KAAK;IAAC0F,EAAE,EAAE;MAAE4C,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAzC,QAAA,gBACxBxD,OAAA,CAACpC,UAAU;MAAC8F,OAAO,EAAC,IAAI;MAACwC,YAAY;MAAA1C,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAGb9D,OAAA,CAACvC,GAAG;MAAC2F,EAAE,EAAE;QAAE+C,EAAE,EAAE;MAAE,CAAE;MAAA3C,QAAA,gBACjBxD,OAAA,CAACpC,UAAU;QAAC8F,OAAO,EAAC,WAAW;QAACwC,YAAY;QAAA1C,QAAA,EAAC;MAE7C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9D,OAAA,CAACN,eAAe;QAACqF,SAAS,EAAEA,SAAU;QAAAvB,QAAA,eACpCxD,OAAA,CAACL,SAAS;UAACyG,WAAW,EAAC,UAAU;UAAA5C,QAAA,EAC7B6C,QAAQ,iBACRrG,OAAA,CAACnC,IAAI;YAAA,GAAKwI,QAAQ,CAACC,cAAc;YAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;YAAAhD,QAAA,GACvDvC,QAAQ,CAAC0B,GAAG,CAAC,CAACJ,IAAI,EAAEiD,KAAK,kBACxBxF,OAAA,CAACJ,SAAS;cAAe6G,WAAW,EAAElE,IAAI,CAACK,EAAG;cAAC4C,KAAK,EAAEA,KAAM;cAAAhC,QAAA,EACxD6C,QAAQ,iBACRrG,OAAA,CAAClC,QAAQ;gBACPyI,GAAG,EAAEF,QAAQ,CAACG,QAAS;gBAAA,GACnBH,QAAQ,CAACK,cAAc;gBAAA,GACvBL,QAAQ,CAACM,eAAe;gBAC5BvD,EAAE,EAAE;kBACFwD,OAAO,EAAE,kBAAkB;kBAC3BT,EAAE,EAAE,CAAC;kBACLU,YAAY,EAAE,CAAC;kBACfC,MAAM,EAAE,WAAW;kBACnBC,WAAW,EAAE,SAAS;kBACtB,SAAS,EAAE;oBACTH,OAAO,EAAE;kBACX;gBACF,CAAE;gBAAApD,QAAA,gBAEFxD,OAAA,CAACnB,QAAQ;kBAACuE,EAAE,EAAE;oBAAE4D,EAAE,EAAE,CAAC;oBAAEhD,KAAK,EAAE;kBAAgB;gBAAE;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACnD9D,OAAA,CAACjC,YAAY;kBACXkJ,OAAO,eACLjH,OAAA,CAACvC,GAAG;oBAAC2F,EAAE,EAAE;sBAAEC,OAAO,EAAE,MAAM;sBAAEC,UAAU,EAAE;oBAAS,CAAE;oBAAAE,QAAA,gBACjDxD,OAAA,CAACpC,UAAU;sBAAC8F,OAAO,EAAC,WAAW;sBAAAF,QAAA,GAAC,QACxB,EAAC3C,MAAM,CAACqG,SAAS,CAAClB,CAAC,IAAIA,CAAC,CAACpD,EAAE,KAAKL,IAAI,CAACH,OAAO,CAAC,GAAG,CAAC;oBAAA;sBAAAuB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC7C,CAAC,EACZX,gBAAgB,CAACZ,IAAI,CAAC;kBAAA;oBAAAoB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpB,CACN;kBACDqD,SAAS,EAAE,UAAU5E,IAAI,CAACW,OAAO,MAAMjD,aAAa,CAACsC,IAAI,CAACM,MAAM,IAAI,UAAU,CAAC,CAAC1C,IAAI;gBAAG;kBAAAwD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxF,CAAC,eACF9D,OAAA,CAAChC,uBAAuB;kBAACoF,EAAE,EAAE;oBAAEC,OAAO,EAAE,MAAM;oBAAE+D,GAAG,EAAE;kBAAE,CAAE;kBAAA5D,QAAA,gBACvDxD,OAAA,CAAC/B,OAAO;oBAACwF,KAAK,EAAC,gBAAgB;oBAAAD,QAAA,eAC7BxD,OAAA,CAACrC,UAAU;sBACT0J,OAAO,EAAEA,CAAA,KAAM5B,uBAAuB,CAAClD,IAAI,CAAE;sBAC7CyB,KAAK,EAAC,SAAS;sBACfD,IAAI,EAAC,QAAQ;sBAAAP,QAAA,eAEbxD,OAAA,CAACT,YAAY;wBAAAoE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACN,CAAC,eACV9D,OAAA,CAAC/B,OAAO;oBAACwF,KAAK,EAAC,cAAc;oBAAAD,QAAA,eAC3BxD,OAAA,CAACrC,UAAU;sBACT0J,OAAO,EAAEA,CAAA,KAAMzC,wBAAwB,CAACrC,IAAI,CAACK,EAAE,CAAE;sBACjDoB,KAAK,EAAC,OAAO;sBACbD,IAAI,EAAC,QAAQ;sBAAAP,QAAA,eAEbxD,OAAA,CAACf,UAAU;wBAAA0E,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACN,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACa,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB;YACX,GAlDavB,IAAI,CAACK,EAAE;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmDZ,CACZ,CAAC,EACDuC,QAAQ,CAACiB,WAAW;UAAA;YAAA3D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAGlB9D,OAAA,CAACvC,GAAG;QAAC2F,EAAE,EAAE;UAAEmE,EAAE,EAAE;QAAE,CAAE;QAAA/D,QAAA,EAChB3C,MAAM,CAAC8B,GAAG,CAAC,CAACN,KAAK,EAAEmD,KAAK,kBACvBxF,OAAA,CAAC/B,OAAO;UAAgBwF,KAAK,EAAC,iBAAiB;UAAAD,QAAA,eAC7CxD,OAAA,CAAC3B,IAAI;YACHmJ,KAAK,EAAE,SAAShC,KAAK,GAAG,CAAC,EAAG;YAC5B6B,OAAO,EAAEA,CAAA,KAAMvE,mBAAmB,CAACT,KAAK,CAACO,EAAE,CAAE;YAC7C6E,IAAI,eAAEzH,OAAA,CAACX,OAAO;cAAAsE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAClBV,EAAE,EAAE;cAAE4D,EAAE,EAAE;YAAE,CAAE;YACdhD,KAAK,EAAC,SAAS;YACfN,OAAO,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC,GARUzB,KAAK,CAACO,EAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASb,CACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN9D,OAAA,CAACvC,GAAG;MAAC2F,EAAE,EAAE;QAAE+C,EAAE,EAAE;MAAE,CAAE;MAAA3C,QAAA,gBACjBxD,OAAA,CAACpC,UAAU;QAAC8F,OAAO,EAAC,WAAW;QAACwC,YAAY;QAAA1C,QAAA,EAAC;MAE7C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9D,OAAA,CAAC9B,MAAM;QACLwJ,KAAK,EAAErG,mBAAoB;QAC3BsG,QAAQ,EAAGC,CAAC,IAAKtG,sBAAsB,CAACsG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxDI,SAAS;QACT/D,IAAI,EAAC,OAAO;QAAAP,QAAA,gBAEZxD,OAAA,CAAC7B,QAAQ;UAACuJ,KAAK,EAAC,EAAE;UAAAlE,QAAA,eAChBxD,OAAA;YAAAwD,QAAA,EAAI;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACVjD,MAAM,CAAC8B,GAAG,CAAC,CAACN,KAAK,EAAEmD,KAAK,kBACvBxF,OAAA,CAAC7B,QAAQ;UAAgBuJ,KAAK,EAAErF,KAAK,CAACO,EAAG;UAAAY,QAAA,GAAC,QAClC,EAACgC,KAAK,GAAG,CAAC;QAAA,GADHnD,KAAK,CAACO,EAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN9D,OAAA,CAACvC,GAAG;MAAC2F,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAE0E,cAAc,EAAE;MAAgB,CAAE;MAAAvE,QAAA,eAC5DxD,OAAA,CAAC5B,MAAM;QACLsF,OAAO,EAAC,WAAW;QACnBM,KAAK,EAAC,SAAS;QACfgE,SAAS,eAAEhI,OAAA,CAACjB,QAAQ;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QACxBuD,OAAO,EAAEzB,qBAAsB;QAC/BqC,QAAQ,EAAE1G,YAAY,IAAIN,QAAQ,CAAC4E,MAAM,KAAK,CAAE;QAChD9B,IAAI,EAAC,OAAO;QAAAP,QAAA,EACb;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLrC,OAAO,iBACNzB,OAAA,CAACvC,GAAG;MAAC2F,EAAE,EAAE;QAAEmE,EAAE,EAAE;MAAE,CAAE;MAAA/D,QAAA,gBACjBxD,OAAA,CAACpC,UAAU;QAAC8F,OAAO,EAAC,WAAW;QAACwC,YAAY;QAAA1C,QAAA,EAAC;MAE7C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb9D,OAAA,CAACtC,KAAK;QAACgG,OAAO,EAAC,UAAU;QAACN,EAAE,EAAE;UAAE4C,CAAC,EAAE;QAAE,CAAE;QAAAxC,QAAA,eACrCxD,OAAA,CAACpC,UAAU;UAAC8F,OAAO,EAAC,OAAO;UAACwE,SAAS,EAAC,KAAK;UAAC9E,EAAE,EAAE;YAAE+E,UAAU,EAAE;UAAW,CAAE;UAAA3E,QAAA,EACxE4E,IAAI,CAACC,SAAS,CAAC5G,OAAO,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN,eAGD9D,OAAA,CAAC1B,MAAM;MACLgK,IAAI,EAAEzG,iBAAkB;MACxB0G,OAAO,EAAEA,CAAA,KAAMzG,oBAAoB,CAAC,KAAK,CAAE;MAC3C0G,QAAQ,EAAC,IAAI;MACbV,SAAS;MAAAtE,QAAA,gBAETxD,OAAA,CAACzB,WAAW;QAAAiF,QAAA,GAAC,2BACc,EAACzB,wBAAwB,GAChDlB,MAAM,CAACqG,SAAS,CAAClB,CAAC,IAAIA,CAAC,CAACpD,EAAE,KAAKb,wBAAwB,CAACK,OAAO,CAAC,GAAG,CAAC,GACpE,EAAE;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACd9D,OAAA,CAACxB,aAAa;QAAAgF,QAAA,eACZxD,OAAA,CAACtB,WAAW;UAACoJ,SAAS;UAAC1E,EAAE,EAAE;YAAEmE,EAAE,EAAE;UAAE,CAAE;UAAA/D,QAAA,gBACnCxD,OAAA,CAACrB,UAAU;YAAA6E,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9B9D,OAAA,CAAC9B,MAAM;YACLwJ,KAAK,EAAE,CAAA3F,wBAAwB,aAAxBA,wBAAwB,uBAAxBA,wBAAwB,CAAEmB,OAAO,KAAI,EAAG;YAC/CyE,QAAQ,EAAGC,CAAC,IAAKjC,iBAAiB,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACnDF,KAAK,EAAC,OAAO;YAAAhE,QAAA,EAEZ7B,eAAe,CAACgB,GAAG,CAAE8F,KAAK,iBACzBzI,OAAA,CAAC7B,QAAQ;cAAgBuJ,KAAK,EAAEe,KAAK,CAAC7F,EAAG;cAAAY,QAAA,EACtCiF,KAAK,CAACtI;YAAI,GADEsI,KAAK,CAAC7F,EAAE;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAChB9D,OAAA,CAACvB,aAAa;QAAA+E,QAAA,eACZxD,OAAA,CAAC5B,MAAM;UAACiJ,OAAO,EAAEA,CAAA,KAAMvF,oBAAoB,CAAC,KAAK,CAAE;UAAA0B,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ,CAAC;AAAC9C,EAAA,CA7UIJ,iBAAiB;AAAA8H,EAAA,GAAjB9H,iBAAiB;AA+UvB,eAAeA,iBAAiB;AAAC,IAAA8H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}