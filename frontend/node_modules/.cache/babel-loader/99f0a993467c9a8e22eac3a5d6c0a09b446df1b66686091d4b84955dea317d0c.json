{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\PanelLayout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Box, IconButton, Paper, Tooltip } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { DragIndicator as DragIcon, Add as AddIcon, Close as CloseIcon } from '@mui/icons-material';\nimport { Resizable } from 're-resizable';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PanelContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  height: '100vh',\n  width: '100%',\n  overflow: 'hidden'\n}));\n_c = PanelContainer;\nconst Panel = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  margin: theme.spacing(1),\n  flex: 1,\n  minWidth: 300,\n  position: 'relative',\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.default\n}));\n_c2 = Panel;\nconst PanelHeader = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0.5, 1),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n  cursor: 'move'\n}));\n_c3 = PanelHeader;\nconst PanelContent = styled(Box)({\n  flex: 1,\n  overflow: 'auto',\n  position: 'relative'\n});\n_c4 = PanelContent;\nconst AddPanelButton = styled(IconButton)(({\n  theme\n}) => ({\n  position: 'fixed',\n  bottom: theme.spacing(2),\n  right: theme.spacing(2),\n  zIndex: theme.zIndex.drawer + 1\n}));\n_c5 = AddPanelButton;\nfunction PanelLayout({\n  children,\n  onAddPanel\n}) {\n  _s();\n  const [panels, setPanels] = useState([{\n    id: 'panel-1',\n    width: '50%',\n    content: 'chat'\n  }, {\n    id: 'panel-2',\n    width: '50%',\n    content: 'chat'\n  }]);\n  const handleDragEnd = useCallback(result => {\n    if (!result.destination) return;\n    const items = Array.from(panels);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setPanels(items);\n  }, [panels]);\n  const handleResize = (index, size) => {\n    setPanels(prev => {\n      const newPanels = [...prev];\n      newPanels[index] = {\n        ...newPanels[index],\n        width: size.width\n      };\n      return newPanels;\n    });\n  };\n  const handleRemovePanel = panelId => {\n    if (panels.length > 1) {\n      setPanels(prev => prev.filter(p => p.id !== panelId));\n    }\n  };\n  const handleAddNewPanel = () => {\n    const newPanel = {\n      id: `panel-${panels.length + 1}`,\n      width: `${100 / (panels.length + 1)}%`,\n      content: 'chat'\n    };\n    setPanels(prev => [...prev, newPanel]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"panels\",\n        direction: \"horizontal\",\n        children: provided => /*#__PURE__*/_jsxDEV(PanelContainer, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [panels.map((panel, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: panel.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(Resizable, {\n              size: {\n                width: panel.width,\n                height: '100%'\n              },\n              onResizeStop: (e, direction, ref, d) => {\n                handleResize(index, {\n                  width: ref.style.width\n                });\n              },\n              enable: {\n                right: index < panels.length - 1,\n                left: index > 0\n              },\n              minWidth: 300,\n              maxWidth: \"80%\",\n              children: /*#__PURE__*/_jsxDEV(Panel, {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n                  ...provided.dragHandleProps,\n                  children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 27\n                  }, this), \"Chat Window \", index + 1, panels.length > 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: () => handleRemovePanel(panel.id),\n                    sx: {\n                      ml: 'auto'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(PanelContent, {\n                  children: children\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)\n          }, panel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Add new chat window\",\n      children: /*#__PURE__*/_jsxDEV(AddPanelButton, {\n        color: \"primary\",\n        onClick: handleAddNewPanel,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PanelLayout, \"6/AUYo0QV1ZXNlKG4E6F33oZ1is=\");\n_c6 = PanelLayout;\nexport default PanelLayout;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PanelContainer\");\n$RefreshReg$(_c2, \"Panel\");\n$RefreshReg$(_c3, \"PanelHeader\");\n$RefreshReg$(_c4, \"PanelContent\");\n$RefreshReg$(_c5, \"AddPanelButton\");\n$RefreshReg$(_c6, \"PanelLayout\");","map":{"version":3,"names":["React","useState","useCallback","Box","IconButton","Paper","Tooltip","styled","DragIndicator","DragIcon","Add","AddIcon","Close","CloseIcon","Resizable","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","PanelContainer","theme","display","flexDirection","height","width","overflow","_c","Panel","margin","spacing","flex","minWidth","position","backgroundColor","palette","background","default","_c2","PanelHeader","alignItems","padding","borderBottom","divider","paper","cursor","_c3","PanelContent","_c4","AddPanelButton","bottom","right","zIndex","drawer","_c5","PanelLayout","children","onAddPanel","_s","panels","setPanels","id","content","handleDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","handleResize","size","prev","newPanels","handleRemovePanel","panelId","length","filter","p","handleAddNewPanel","newPanel","onDragEnd","droppableId","direction","provided","ref","innerRef","droppableProps","map","panel","draggableId","onResizeStop","e","d","style","enable","left","maxWidth","draggableProps","dragHandleProps","sx","mr","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ml","fontSize","placeholder","title","color","_c6","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/PanelLayout.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Box, IconButton, Paper, Tooltip } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { DragIndicator as DragIcon, Add as AddIcon, Close as CloseIcon } from '@mui/icons-material';\r\nimport { Resizable } from 're-resizable';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst PanelContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  height: '100vh',\r\n  width: '100%',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nconst Panel = styled(Paper)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  margin: theme.spacing(1),\r\n  flex: 1,\r\n  minWidth: 300,\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst PanelHeader = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0.5, 1),\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n  backgroundColor: theme.palette.background.paper,\r\n  cursor: 'move',\r\n}));\r\n\r\nconst PanelContent = styled(Box)({\r\n  flex: 1,\r\n  overflow: 'auto',\r\n  position: 'relative',\r\n});\r\n\r\nconst AddPanelButton = styled(IconButton)(({ theme }) => ({\r\n  position: 'fixed',\r\n  bottom: theme.spacing(2),\r\n  right: theme.spacing(2),\r\n  zIndex: theme.zIndex.drawer + 1,\r\n}));\r\n\r\nfunction PanelLayout({ children, onAddPanel }) {\r\n  const [panels, setPanels] = useState([\r\n    { id: 'panel-1', width: '50%', content: 'chat' },\r\n    { id: 'panel-2', width: '50%', content: 'chat' }\r\n  ]);\r\n\r\n  const handleDragEnd = useCallback((result) => {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(panels);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    setPanels(items);\r\n  }, [panels]);\r\n\r\n  const handleResize = (index, size) => {\r\n    setPanels(prev => {\r\n      const newPanels = [...prev];\r\n      newPanels[index] = { ...newPanels[index], width: size.width };\r\n      return newPanels;\r\n    });\r\n  };\r\n\r\n  const handleRemovePanel = (panelId) => {\r\n    if (panels.length > 1) {\r\n      setPanels(prev => prev.filter(p => p.id !== panelId));\r\n    }\r\n  };\r\n\r\n  const handleAddNewPanel = () => {\r\n    const newPanel = {\r\n      id: `panel-${panels.length + 1}`,\r\n      width: `${100 / (panels.length + 1)}%`,\r\n      content: 'chat'\r\n    };\r\n    setPanels(prev => [...prev, newPanel]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"panels\" direction=\"horizontal\">\r\n          {(provided) => (\r\n            <PanelContainer\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n            >\r\n              {panels.map((panel, index) => (\r\n                <Draggable key={panel.id} draggableId={panel.id} index={index}>\r\n                  {(provided) => (\r\n                    <Resizable\r\n                      size={{ width: panel.width, height: '100%' }}\r\n                      onResizeStop={(e, direction, ref, d) => {\r\n                        handleResize(index, {\r\n                          width: ref.style.width,\r\n                        });\r\n                      }}\r\n                      enable={{\r\n                        right: index < panels.length - 1,\r\n                        left: index > 0,\r\n                      }}\r\n                      minWidth={300}\r\n                      maxWidth=\"80%\"\r\n                    >\r\n                      <Panel\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                      >\r\n                        <PanelHeader {...provided.dragHandleProps}>\r\n                          <DragIcon sx={{ mr: 1 }} />\r\n                          Chat Window {index + 1}\r\n                          {panels.length > 1 && (\r\n                            <IconButton\r\n                              size=\"small\"\r\n                              onClick={() => handleRemovePanel(panel.id)}\r\n                              sx={{ ml: 'auto' }}\r\n                            >\r\n                              <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                          )}\r\n                        </PanelHeader>\r\n                        <PanelContent>\r\n                          {children}\r\n                        </PanelContent>\r\n                      </Panel>\r\n                    </Resizable>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </PanelContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      \r\n      <Tooltip title=\"Add new chat window\">\r\n        <AddPanelButton\r\n          color=\"primary\"\r\n          onClick={handleAddNewPanel}\r\n        >\r\n          <AddIcon />\r\n        </AddPanelButton>\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PanelLayout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}