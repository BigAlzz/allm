{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, Avatar, Menu, MenuItem, Select, FormControl, CircularProgress, InputAdornment } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreIcon, VideoCall as VideoIcon, OpenInFull as ExpandIcon, Image as ImageIcon, EmojiEmotions as EmojiIcon } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst ChatHeader = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = ChatHeader;\nconst MessageList = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.grey[50],\n  '&::-webkit-scrollbar': {\n    width: '4px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[300],\n    borderRadius: '4px'\n  }\n}));\n_c3 = MessageList;\nconst Message = styled(Box)(({\n  theme,\n  align\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2)\n}));\n_c4 = Message;\nconst MessageContent = styled(Box)(({\n  theme,\n  align\n}) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1]\n}));\n_c5 = MessageContent;\nconst ChatFooter = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c6 = ChatFooter;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.grey[50],\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1)\n}));\n_c7 = InputContainer;\nconst ErrorMessage = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.light,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c8 = ErrorMessage;\nconst ModelSelector = styled(FormControl)(({\n  theme\n}) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent'\n  }\n}));\n_c9 = ModelSelector;\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('qwen2.5-7b-instruct-1m');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, streamingResponse]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    if (!models.length) {\n      setMessages(prev => [...prev, {\n        content: 'No AI models available in LM Studio. Please load a model first.',\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      return;\n    }\n    if (!selectedModel) {\n      var _models$;\n      setSelectedModel((_models$ = models[0]) === null || _models$ === void 0 ? void 0 : _models$.id);\n      return;\n    }\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user'\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInputValue('');\n    setThinking(prev => ({\n      ...prev,\n      [position]: true\n    }));\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n\n      const response = await fetch('http://192.168.56.1:1234/v1/chat/completions', {\n        method: 'POST',\n        signal: controller.signal,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: [...messages, newMessage].map(msg => ({\n            role: msg.role === 'error' ? 'assistant' : msg.role,\n            content: msg.content\n          })),\n          stream: true,\n          temperature: 0.7,\n          max_tokens: 2000\n        })\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`Server returned ${response.status}: ${response.statusText}`);\n      }\n      if (!response.body) {\n        throw new Error('Server response has no body');\n      }\n      const reader = response.body.getReader();\n      let responseText = '';\n      try {\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) break;\n\n          // Decode the stream chunk and split by lines\n          const chunk = new TextDecoder().decode(value);\n          const lines = chunk.split('\\n');\n\n          // Process each line\n          for (const line of lines) {\n            if (!line.trim() || line.includes('[DONE]')) continue;\n            try {\n              var _data$choices$, _data$choices$$delta;\n              // Remove 'data: ' prefix and parse JSON\n              const jsonStr = line.replace(/^data: /, '');\n              const data = JSON.parse(jsonStr);\n              if (data.choices && (_data$choices$ = data.choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$delta = _data$choices$.delta) !== null && _data$choices$$delta !== void 0 && _data$choices$$delta.content) {\n                responseText += data.choices[0].delta.content;\n                setStreamingResponses(prev => ({\n                  ...prev,\n                  [position]: responseText\n                }));\n              }\n            } catch (e) {\n              console.warn('Error parsing chunk:', e);\n            }\n          }\n        }\n      } finally {\n        // Add the complete message once streaming is done\n        if (responseText) {\n          setMessages(prev => [...prev, {\n            content: responseText,\n            timestamp: new Date().toISOString(),\n            role: 'assistant'\n          }]);\n        }\n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: ''\n        }));\n        setThinking(prev => ({\n          ...prev,\n          [position]: false\n        }));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'Unable to get response from LM Studio. ';\n      if (error.name === 'AbortError') {\n        errorMessage += 'Request timed out. The model might be too slow or not responding.';\n      } else if (error.message === 'Failed to fetch') {\n        errorMessage += 'Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. A model is loaded';\n      } else {\n        errorMessage += error.message;\n      }\n      setMessages(prev => [...prev, {\n        content: errorMessage,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'primary.main'\n          },\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            fontWeight: \"bold\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), models.length > 0 ? /*#__PURE__*/_jsxDEV(ModelSelector, {\n            size: \"small\",\n            sx: {\n              minWidth: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedModel || '',\n              onChange: e => setSelectedModel(e.target.value),\n              variant: \"standard\",\n              displayEmpty: true,\n              children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: model.id,\n                children: model.name\n              }, model.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"No AI models available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          disabled: models.length === 0,\n          children: /*#__PURE__*/_jsxDEV(VideoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ExpandIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => setMenuAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        align: msg.role === 'user' ? 'right' : 'left',\n        children: msg.role === 'error' ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 16,\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n            align: msg.role === 'user' ? 'right' : 'left',\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 0.5,\n              opacity: 0.7,\n              fontSize: '0.7rem'\n            },\n            children: new Date(msg.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(Message, {\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(MessageContent, {\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: streamingResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), isThinking && /*#__PURE__*/_jsxDEV(Message, {\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(MessageContent, {\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"Thinking...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(ImageIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 4,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSendMessage,\n                disabled: !inputValue.trim() || !selectedModel,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: () => setMenuAnchor(null),\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => {\n          setMessages([]);\n          setMenuAnchor(null);\n        },\n        children: \"Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"z/21mnp/UOJxoX1pWPoh7yeqRwY=\");\n_c10 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessageList\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"MessageContent\");\n$RefreshReg$(_c6, \"ChatFooter\");\n$RefreshReg$(_c7, \"InputContainer\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"ModelSelector\");\n$RefreshReg$(_c10, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Paper","TextField","IconButton","Typography","Avatar","Menu","MenuItem","Select","FormControl","CircularProgress","InputAdornment","Send","SendIcon","MoreVert","MoreIcon","VideoCall","VideoIcon","OpenInFull","ExpandIcon","Image","ImageIcon","EmojiEmotions","EmojiIcon","ReactMarkdown","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","display","flexDirection","height","flex","overflow","backgroundColor","palette","background","paper","borderRadius","spacing","_c","ChatHeader","padding","alignItems","justifyContent","borderBottom","divider","_c2","MessageList","flexGrow","grey","width","_c3","Message","align","marginBottom","_c4","MessageContent","maxWidth","primary","main","color","contrastText","text","boxShadow","shadows","_c5","ChatFooter","borderTop","_c6","InputContainer","gap","_c7","ErrorMessage","error","light","_c8","ModelSelector","paddingBottom","borderBottomColor","_c9","ChatWindow","position","models","streamingResponse","isThinking","setStreamingResponses","setThinking","_s","messages","setMessages","inputValue","setInputValue","selectedModel","setSelectedModel","menuAnchor","setMenuAnchor","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","length","prev","content","timestamp","Date","toISOString","role","_models$","id","newMessage","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","signal","headers","body","JSON","stringify","model","map","msg","stream","temperature","max_tokens","clearTimeout","ok","Error","status","statusText","reader","getReader","responseText","done","value","read","chunk","TextDecoder","decode","lines","split","line","includes","_data$choices$","_data$choices$$delta","jsonStr","replace","data","parse","choices","delta","e","console","warn","errorMessage","name","message","handleKeyPress","event","key","shiftKey","preventDefault","elevation","children","sx","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","size","minWidth","onChange","target","displayEmpty","disabled","onClick","currentTarget","index","mt","opacity","fontSize","toLocaleTimeString","ref","fullWidth","multiline","maxRows","onKeyPress","placeholder","InputProps","disableUnderline","endAdornment","anchorEl","open","Boolean","onClose","_c10","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  Avatar,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  CircularProgress,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport {\r\n  Send as SendIcon,\r\n  MoreVert as MoreIcon,\r\n  VideoCall as VideoIcon,\r\n  OpenInFull as ExpandIcon,\r\n  Image as ImageIcon,\r\n  EmojiEmotions as EmojiIcon,\r\n} from '@mui/icons-material';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  height: '100%',\r\n  flex: 1,\r\n  overflow: 'hidden',\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderRadius: theme.spacing(3),\r\n}));\r\n\r\nconst ChatHeader = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\nconst MessageList = styled(Box)(({ theme }) => ({\r\n  flexGrow: 1,\r\n  overflow: 'auto',\r\n  padding: theme.spacing(2),\r\n  backgroundColor: theme.palette.grey[50],\r\n  '&::-webkit-scrollbar': {\r\n    width: '4px',\r\n  },\r\n  '&::-webkit-scrollbar-track': {\r\n    background: 'transparent',\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    background: theme.palette.grey[300],\r\n    borderRadius: '4px',\r\n  },\r\n}));\r\n\r\nconst Message = styled(Box)(({ theme, align }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst MessageContent = styled(Box)(({ theme, align }) => ({\r\n  maxWidth: '70%',\r\n  padding: theme.spacing(1.5),\r\n  borderRadius: theme.spacing(2),\r\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\r\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\r\n  boxShadow: theme.shadows[1],\r\n}));\r\n\r\nconst ChatFooter = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: `1px solid ${theme.palette.divider}`,\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nconst InputContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(1),\r\n  backgroundColor: theme.palette.grey[50],\r\n  borderRadius: theme.spacing(3),\r\n  padding: theme.spacing(1),\r\n}));\r\n\r\nconst ErrorMessage = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(1, 2),\r\n  backgroundColor: theme.palette.error.light,\r\n  color: theme.palette.error.contrastText,\r\n  borderRadius: theme.spacing(1),\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(1),\r\n  marginBottom: theme.spacing(2),\r\n}));\r\n\r\nconst ModelSelector = styled(FormControl)(({ theme }) => ({\r\n  '& .MuiSelect-select': {\r\n    paddingBottom: 0,\r\n  },\r\n  '& .MuiInput-underline:before': {\r\n    borderBottomColor: 'transparent',\r\n  },\r\n}));\r\n\r\nfunction ChatWindow({\r\n  position,\r\n  models,\r\n  streamingResponse,\r\n  isThinking,\r\n  setStreamingResponses,\r\n  setThinking,\r\n}) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [selectedModel, setSelectedModel] = useState('qwen2.5-7b-instruct-1m');\r\n  const [menuAnchor, setMenuAnchor] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, streamingResponse]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n    if (!models.length) {\r\n      setMessages(prev => [\r\n        ...prev,\r\n        {\r\n          content: 'No AI models available in LM Studio. Please load a model first.',\r\n          timestamp: new Date().toISOString(),\r\n          role: 'error',\r\n        },\r\n      ]);\r\n      return;\r\n    }\r\n    if (!selectedModel) {\r\n      setSelectedModel(models[0]?.id);\r\n      return;\r\n    }\r\n\r\n    const newMessage = {\r\n      content: inputValue,\r\n      timestamp: new Date().toISOString(),\r\n      role: 'user',\r\n    };\r\n\r\n    setMessages(prev => [...prev, newMessage]);\r\n    setInputValue('');\r\n    setThinking(prev => ({ ...prev, [position]: true }));\r\n\r\n    try {\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\r\n\r\n      const response = await fetch('http://192.168.56.1:1234/v1/chat/completions', {\r\n        method: 'POST',\r\n        signal: controller.signal,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          model: selectedModel,\r\n          messages: [...messages, newMessage].map(msg => ({\r\n            role: msg.role === 'error' ? 'assistant' : msg.role,\r\n            content: msg.content\r\n          })),\r\n          stream: true,\r\n          temperature: 0.7,\r\n          max_tokens: 2000\r\n        }),\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server returned ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      if (!response.body) {\r\n        throw new Error('Server response has no body');\r\n      }\r\n\r\n      const reader = response.body.getReader();\r\n      let responseText = '';\r\n\r\n      try {\r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n          if (done) break;\r\n\r\n          // Decode the stream chunk and split by lines\r\n          const chunk = new TextDecoder().decode(value);\r\n          const lines = chunk.split('\\n');\r\n\r\n          // Process each line\r\n          for (const line of lines) {\r\n            if (!line.trim() || line.includes('[DONE]')) continue;\r\n\r\n            try {\r\n              // Remove 'data: ' prefix and parse JSON\r\n              const jsonStr = line.replace(/^data: /, '');\r\n              const data = JSON.parse(jsonStr);\r\n\r\n              if (data.choices && data.choices[0]?.delta?.content) {\r\n                responseText += data.choices[0].delta.content;\r\n                setStreamingResponses(prev => ({\r\n                  ...prev,\r\n                  [position]: responseText\r\n                }));\r\n              }\r\n            } catch (e) {\r\n              console.warn('Error parsing chunk:', e);\r\n            }\r\n          }\r\n        }\r\n      } finally {\r\n        // Add the complete message once streaming is done\r\n        if (responseText) {\r\n          setMessages(prev => [...prev, {\r\n            content: responseText,\r\n            timestamp: new Date().toISOString(),\r\n            role: 'assistant',\r\n          }]);\r\n        }\r\n        setStreamingResponses(prev => ({ ...prev, [position]: '' }));\r\n        setThinking(prev => ({ ...prev, [position]: false }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      let errorMessage = 'Unable to get response from LM Studio. ';\r\n      if (error.name === 'AbortError') {\r\n        errorMessage += 'Request timed out. The model might be too slow or not responding.';\r\n      } else if (error.message === 'Failed to fetch') {\r\n        errorMessage += 'Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. A model is loaded';\r\n      } else {\r\n        errorMessage += error.message;\r\n      }\r\n      \r\n      setMessages(prev => [\r\n        ...prev,\r\n        {\r\n          content: errorMessage,\r\n          timestamp: new Date().toISOString(),\r\n          role: 'error',\r\n        },\r\n      ]);\r\n      setThinking(prev => ({ ...prev, [position]: false }));\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledPaper elevation={3}>\r\n      <ChatHeader>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n          <Avatar sx={{ bgcolor: 'primary.main' }}>U</Avatar>\r\n          <Box>\r\n            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n              User Name\r\n            </Typography>\r\n            {models.length > 0 ? (\r\n              <ModelSelector size=\"small\" sx={{ minWidth: 200 }}>\r\n                <Select\r\n                  value={selectedModel || ''}\r\n                  onChange={(e) => setSelectedModel(e.target.value)}\r\n                  variant=\"standard\"\r\n                  displayEmpty\r\n                >\r\n                  {models.map((model) => (\r\n                    <MenuItem key={model.id} value={model.id}>\r\n                      {model.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </ModelSelector>\r\n            ) : (\r\n              <Typography variant=\"caption\" color=\"error\">\r\n                No AI models available\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <IconButton disabled={models.length === 0}>\r\n            <VideoIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ExpandIcon />\r\n          </IconButton>\r\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\r\n            <MoreIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </ChatHeader>\r\n\r\n      <MessageList>\r\n        {messages.map((msg, index) => (\r\n          <Message key={index} align={msg.role === 'user' ? 'right' : 'left'}>\r\n            {msg.role === 'error' ? (\r\n              <ErrorMessage>\r\n                <CircularProgress size={16} color=\"error\" />\r\n                <Typography variant=\"body2\">{msg.content}</Typography>\r\n              </ErrorMessage>\r\n            ) : (\r\n              <>\r\n                <MessageContent align={msg.role === 'user' ? 'right' : 'left'}>\r\n                  <ReactMarkdown>{msg.content}</ReactMarkdown>\r\n                </MessageContent>\r\n                <Typography \r\n                  variant=\"caption\" \r\n                  color=\"textSecondary\" \r\n                  sx={{ \r\n                    mt: 0.5,\r\n                    opacity: 0.7,\r\n                    fontSize: '0.7rem',\r\n                  }}\r\n                >\r\n                  {new Date(msg.timestamp).toLocaleTimeString()}\r\n                </Typography>\r\n              </>\r\n            )}\r\n          </Message>\r\n        ))}\r\n        {streamingResponse && (\r\n          <Message align=\"left\">\r\n            <MessageContent align=\"left\">\r\n              <ReactMarkdown>{streamingResponse}</ReactMarkdown>\r\n            </MessageContent>\r\n          </Message>\r\n        )}\r\n        {isThinking && (\r\n          <Message align=\"left\">\r\n            <MessageContent align=\"left\">\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <CircularProgress size={16} />\r\n                <Typography variant=\"body2\">Thinking...</Typography>\r\n              </Box>\r\n            </MessageContent>\r\n          </Message>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </MessageList>\r\n\r\n      <ChatFooter>\r\n        <InputContainer>\r\n          <IconButton size=\"small\">\r\n            <EmojiIcon />\r\n          </IconButton>\r\n          <IconButton size=\"small\">\r\n            <ImageIcon />\r\n          </IconButton>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            maxRows={4}\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your message...\"\r\n            variant=\"standard\"\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={handleSendMessage}\r\n                    disabled={!inputValue.trim() || !selectedModel}\r\n                    color=\"primary\"\r\n                  >\r\n                    <SendIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </InputContainer>\r\n      </ChatFooter>\r\n\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={Boolean(menuAnchor)}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        <MenuItem onClick={() => {\r\n          setMessages([]);\r\n          setMenuAnchor(null);\r\n        }}>\r\n          Clear Chat\r\n        </MenuItem>\r\n      </Menu>\r\n    </StyledPaper>\r\n  );\r\n}\r\n\r\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}