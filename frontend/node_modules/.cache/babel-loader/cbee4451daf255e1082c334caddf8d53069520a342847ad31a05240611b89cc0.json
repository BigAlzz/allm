{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\BrainstormControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, IconButton, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, Select, MenuItem, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel } from '@mui/material';\nimport { DragHandle as DragIcon, PlayArrow as PlayIcon, Delete as DeleteIcon, Send as SendIcon, Add as AddIcon, Settings as SettingsIcon, Info as InfoIcon } from '@mui/icons-material';\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\n\n// Model configuration presets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_PRESETS = {\n  creative: {\n    name: \"Creative\",\n    config: {\n      temperature: 0.9,\n      max_tokens: 2000,\n      top_p: 0.95,\n      frequency_penalty: 0.5,\n      presence_penalty: 0.5\n    }\n  },\n  balanced: {\n    name: \"Balanced\",\n    config: {\n      temperature: 0.7,\n      max_tokens: 2000,\n      top_p: 0.9,\n      frequency_penalty: 0.2,\n      presence_penalty: 0.2\n    }\n  },\n  precise: {\n    name: \"Precise\",\n    config: {\n      temperature: 0.3,\n      max_tokens: 2000,\n      top_p: 0.8,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    }\n  }\n};\nconst BrainstormControl = ({\n  panels,\n  onSubmitToPanels,\n  currentMessage\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\n\n  // Add a panel to the sequence with default preset\n  const handleAddToSequence = panelId => {\n    setSequence(prev => {\n      var _availableModels$;\n      return [...prev, {\n        id: `seq-${Date.now()}`,\n        panelId,\n        modelId: ((_availableModels$ = availableModels[0]) === null || _availableModels$ === void 0 ? void 0 : _availableModels$.id) || 'default',\n        preset: 'balanced',\n        config: {\n          ...MODEL_PRESETS.balanced.config\n        }\n      }];\n    });\n  };\n\n  // Display current configuration\n  const renderConfigInfo = item => {\n    const preset = item.preset || 'balanced';\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Preset: \", MODEL_PRESETS[preset].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"medium\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Remove a panel from the sequence\n  const handleRemoveFromSequence = sequenceId => {\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\n  };\n\n  // Open model settings dialog\n  const handleOpenModelSettings = sequenceItem => {\n    setSelectedPanelForSettings(sequenceItem);\n    setModelSettingsOpen(true);\n  };\n\n  // Update model for a panel\n  const handleModelChange = modelId => {\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      modelId\n    } : item));\n    setModelSettingsOpen(false);\n  };\n\n  // Fetch available models on component mount\n  useEffect(() => {\n    fetchAvailableModels();\n  }, []);\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await fetch('/api/models');\n      const data = await response.json();\n      if (data.status === 'online') {\n        setAvailableModels(data.models);\n      }\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n\n  // Start the brainstorming process\n  const handleStartBrainstorm = async () => {\n    if (sequence.length === 0 || !currentMessage) return;\n    setIsProcessing(true);\n    try {\n      const results = [];\n      for (const item of sequence) {\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\n        results.push({\n          panelId: item.panelId,\n          response\n        });\n      }\n      const summary = generateSummary(results);\n      setResults(summary);\n      if (selectedOutputPanel) {\n        onSubmitToPanels(selectedOutputPanel, summary);\n      }\n    } catch (error) {\n      console.error('Brainstorm error:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2,\n      m: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"AI Brainstorm Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Processing Sequence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: sequence.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            bgcolor: 'background.paper',\n            mb: 1,\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'divider',\n            '&:hover': {\n              bgcolor: 'action.hover'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n            sx: {\n              mr: 1,\n              color: 'action.active'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: [\"Panel \", panels.findIndex(p => p.id === item.panelId) + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), renderConfigInfo(item)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this),\n            secondary: `Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            sx: {\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Model Settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleOpenModelSettings(item),\n                color: \"primary\",\n                size: \"medium\",\n                children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Remove Panel\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleRemoveFromSequence(item.id),\n                color: \"error\",\n                size: \"medium\",\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: panels.map((panel, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add to sequence\",\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Panel ${index + 1}`,\n            onClick: () => handleAddToSequence(panel.id),\n            icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 23\n            }, this),\n            sx: {\n              mr: 1\n            },\n            color: \"primary\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)\n        }, panel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Output Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: selectedOutputPanel,\n        onChange: e => setSelectedOutputPanel(e.target.value),\n        fullWidth: true,\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), panels.map((panel, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: panel.id,\n          children: [\"Panel \", index + 1]\n        }, panel.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 22\n        }, this),\n        onClick: handleStartBrainstorm,\n        disabled: isProcessing || sequence.length === 0,\n        size: \"large\",\n        children: \"Start Brainstorm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"pre\",\n          sx: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: JSON.stringify(results, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: modelSettingsOpen,\n      onClose: () => setModelSettingsOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Model Settings for Panel \", selectedPanelForSettings ? panels.findIndex(p => p.id === selectedPanelForSettings.panelId) + 1 : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: (selectedPanelForSettings === null || selectedPanelForSettings === void 0 ? void 0 : selectedPanelForSettings.modelId) || '',\n            onChange: e => handleModelChange(e.target.value),\n            label: \"Model\",\n            children: availableModels.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: model.id,\n              children: model.name\n            }, model.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModelSettingsOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(BrainstormControl, \"igU3OxrYprA5e7roHMUdGJN4rpQ=\");\n_c = BrainstormControl;\nexport default _c2 = /*#__PURE__*/React.memo(BrainstormControl);\nvar _c, _c2;\n$RefreshReg$(_c, \"BrainstormControl\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","IconButton","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","Select","MenuItem","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","DragHandle","DragIcon","PlayArrow","PlayIcon","Delete","DeleteIcon","Send","SendIcon","Add","AddIcon","Settings","SettingsIcon","Info","InfoIcon","processWithAssistant","generateSummary","jsxDEV","_jsxDEV","MODEL_PRESETS","creative","name","config","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","balanced","precise","BrainstormControl","panels","onSubmitToPanels","currentMessage","_s","sequence","setSequence","selectedOutputPanel","setSelectedOutputPanel","isProcessing","setIsProcessing","results","setResults","availableModels","setAvailableModels","modelSettingsOpen","setModelSettingsOpen","selectedPanelForSettings","setSelectedPanelForSettings","handleAddToSequence","panelId","prev","_availableModels$","id","Date","now","modelId","preset","renderConfigInfo","item","sx","display","alignItems","ml","children","title","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","color","handleRemoveFromSequence","sequenceId","filter","handleOpenModelSettings","sequenceItem","handleModelChange","map","fetchAvailableModels","response","fetch","data","json","status","models","error","console","handleStartBrainstorm","length","push","summary","p","m","gutterBottom","mb","index","bgcolor","borderRadius","border","borderColor","mr","primary","findIndex","secondary","gap","onClick","mt","panel","label","icon","value","onChange","e","target","fullWidth","justifyContent","startIcon","disabled","component","whiteSpace","JSON","stringify","open","onClose","maxWidth","model","_c","_c2","memo","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/BrainstormControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n} from '@mui/material';\r\nimport {\r\n  DragHandle as DragIcon,\r\n  PlayArrow as PlayIcon,\r\n  Delete as DeleteIcon,\r\n  Send as SendIcon,\r\n  Add as AddIcon,\r\n  Settings as SettingsIcon,\r\n  Info as InfoIcon,\r\n} from '@mui/icons-material';\r\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\r\n\r\n// Model configuration presets\r\nconst MODEL_PRESETS = {\r\n  creative: {\r\n    name: \"Creative\",\r\n    config: {\r\n      temperature: 0.9,\r\n      max_tokens: 2000,\r\n      top_p: 0.95,\r\n      frequency_penalty: 0.5,\r\n      presence_penalty: 0.5\r\n    }\r\n  },\r\n  balanced: {\r\n    name: \"Balanced\",\r\n    config: {\r\n      temperature: 0.7,\r\n      max_tokens: 2000,\r\n      top_p: 0.9,\r\n      frequency_penalty: 0.2,\r\n      presence_penalty: 0.2\r\n    }\r\n  },\r\n  precise: {\r\n    name: \"Precise\",\r\n    config: {\r\n      temperature: 0.3,\r\n      max_tokens: 2000,\r\n      top_p: 0.8,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst BrainstormControl = ({ panels, onSubmitToPanels, currentMessage }) => {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [availableModels, setAvailableModels] = useState([]);\r\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\r\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\r\n\r\n  // Add a panel to the sequence with default preset\r\n  const handleAddToSequence = (panelId) => {\r\n    setSequence(prev => [...prev, {\r\n      id: `seq-${Date.now()}`,\r\n      panelId,\r\n      modelId: availableModels[0]?.id || 'default',\r\n      preset: 'balanced',\r\n      config: { ...MODEL_PRESETS.balanced.config }\r\n    }]);\r\n  };\r\n\r\n  // Display current configuration\r\n  const renderConfigInfo = (item) => {\r\n    const preset = item.preset || 'balanced';\r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n        <Tooltip title={\r\n          <Box>\r\n            <Typography variant=\"body2\">Preset: {MODEL_PRESETS[preset].name}</Typography>\r\n          </Box>\r\n        }>\r\n          <IconButton size=\"medium\" color=\"primary\">\r\n            <InfoIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Remove a panel from the sequence\r\n  const handleRemoveFromSequence = (sequenceId) => {\r\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\r\n  };\r\n\r\n  // Open model settings dialog\r\n  const handleOpenModelSettings = (sequenceItem) => {\r\n    setSelectedPanelForSettings(sequenceItem);\r\n    setModelSettingsOpen(true);\r\n  };\r\n\r\n  // Update model for a panel\r\n  const handleModelChange = (modelId) => {\r\n    setSequence(prev => prev.map(item => \r\n      item.id === selectedPanelForSettings.id\r\n        ? { ...item, modelId }\r\n        : item\r\n    ));\r\n    setModelSettingsOpen(false);\r\n  };\r\n\r\n  // Fetch available models on component mount\r\n  useEffect(() => {\r\n    fetchAvailableModels();\r\n  }, []);\r\n\r\n  const fetchAvailableModels = async () => {\r\n    try {\r\n      const response = await fetch('/api/models');\r\n      const data = await response.json();\r\n      if (data.status === 'online') {\r\n        setAvailableModels(data.models);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models:', error);\r\n    }\r\n  };\r\n\r\n  // Start the brainstorming process\r\n  const handleStartBrainstorm = async () => {\r\n    if (sequence.length === 0 || !currentMessage) return;\r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      const results = [];\r\n      for (const item of sequence) {\r\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\r\n        results.push({\r\n          panelId: item.panelId,\r\n          response\r\n        });\r\n      }\r\n      \r\n      const summary = generateSummary(results);\r\n      setResults(summary);\r\n      \r\n      if (selectedOutputPanel) {\r\n        onSubmitToPanels(selectedOutputPanel, summary);\r\n      }\r\n    } catch (error) {\r\n      console.error('Brainstorm error:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, m: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        AI Brainstorm Control\r\n      </Typography>\r\n      \r\n      {/* Sequence Builder */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Processing Sequence\r\n        </Typography>\r\n        <List>\r\n          {sequence.map((item, index) => (\r\n            <ListItem\r\n              key={item.id}\r\n              sx={{ \r\n                bgcolor: 'background.paper', \r\n                mb: 1,\r\n                borderRadius: 1,\r\n                border: '1px solid',\r\n                borderColor: 'divider',\r\n                '&:hover': {\r\n                  bgcolor: 'action.hover',\r\n                }\r\n              }}\r\n            >\r\n              <DragIcon sx={{ mr: 1, color: 'action.active' }} />\r\n              <ListItemText \r\n                primary={\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Typography variant=\"subtitle2\">\r\n                      Panel {panels.findIndex(p => p.id === item.panelId) + 1}\r\n                    </Typography>\r\n                    {renderConfigInfo(item)}\r\n                  </Box>\r\n                }\r\n                secondary={`Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`}\r\n              />\r\n              <ListItemSecondaryAction sx={{ display: 'flex', gap: 1 }}>\r\n                <Tooltip title=\"Model Settings\">\r\n                  <IconButton \r\n                    onClick={() => handleOpenModelSettings(item)}\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                  >\r\n                    <SettingsIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Remove Panel\">\r\n                  <IconButton \r\n                    onClick={() => handleRemoveFromSequence(item.id)}\r\n                    color=\"error\"\r\n                    size=\"medium\"\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n\r\n        {/* Add Panel to Sequence */}\r\n        <Box sx={{ mt: 2 }}>\r\n          {panels.map((panel, index) => (\r\n            <Tooltip key={panel.id} title=\"Add to sequence\">\r\n              <Chip\r\n                label={`Panel ${index + 1}`}\r\n                onClick={() => handleAddToSequence(panel.id)}\r\n                icon={<AddIcon />}\r\n                sx={{ mr: 1 }}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Tooltip>\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Output Panel Selector */}\r\n      <Box sx={{ mb: 2 }}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Output Panel\r\n        </Typography>\r\n        <Select\r\n          value={selectedOutputPanel}\r\n          onChange={(e) => setSelectedOutputPanel(e.target.value)}\r\n          fullWidth\r\n          size=\"small\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {panels.map((panel, index) => (\r\n            <MenuItem key={panel.id} value={panel.id}>\r\n              Panel {index + 1}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Box>\r\n      \r\n      {/* Control Buttons */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<PlayIcon />}\r\n          onClick={handleStartBrainstorm}\r\n          disabled={isProcessing || sequence.length === 0}\r\n          size=\"large\"\r\n        >\r\n          Start Brainstorm\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Results Display */}\r\n      {results && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Results\r\n          </Typography>\r\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n            <Typography variant=\"body2\" component=\"pre\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n              {JSON.stringify(results, null, 2)}\r\n            </Typography>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Model Settings Dialog */}\r\n      <Dialog \r\n        open={modelSettingsOpen} \r\n        onClose={() => setModelSettingsOpen(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          Model Settings for Panel {selectedPanelForSettings ? \r\n            panels.findIndex(p => p.id === selectedPanelForSettings.panelId) + 1 : \r\n            ''}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel>Model</InputLabel>\r\n            <Select\r\n              value={selectedPanelForSettings?.modelId || ''}\r\n              onChange={(e) => handleModelChange(e.target.value)}\r\n              label=\"Model\"\r\n            >\r\n              {availableModels.map((model) => (\r\n                <MenuItem key={model.id} value={model.id}>\r\n                  {model.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setModelSettingsOpen(false)}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default React.memo(BrainstormControl); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}