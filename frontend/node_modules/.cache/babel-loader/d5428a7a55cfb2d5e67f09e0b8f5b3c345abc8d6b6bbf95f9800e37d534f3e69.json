{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo, memo } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, Avatar, Menu, MenuItem, Select, FormControl, CircularProgress, InputAdornment, Popover, Tooltip, ClickAwayListener, Divider, Button } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreIcon, VideoCall as VideoIcon, OpenInFull as ExpandIcon, Image as ImageIcon, EmojiEmotions as EmojiIcon, Stop as StopIcon, Add as AddIcon, NoteAdd as NoteAddIcon, Psychology as BrainstormIcon, Edit as EditIcon, Check as CheckIcon, Close as CloseIcon } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst ChatHeader = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = ChatHeader;\nconst MessageList = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px'\n  }\n}));\n_c3 = MessageList;\nconst Message = styled(Box)(({\n  theme,\n  align\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2)\n}));\n_c4 = Message;\nconst MessageContent = styled(Box)(({\n  theme,\n  align\n}) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0),\n    fontFamily: 'monospace'\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5)\n  },\n  '& ul, & ol': {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(3)\n  },\n  '& li': {\n    marginBottom: theme.spacing(0.5)\n  },\n  '& blockquote': {\n    borderLeft: `3px solid ${theme.palette.divider}`,\n    margin: theme.spacing(1, 0),\n    paddingLeft: theme.spacing(2),\n    color: theme.palette.text.secondary\n  }\n}));\n_c5 = MessageContent;\nconst ChatFooter = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c6 = ChatFooter;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1)\n}));\n_c7 = InputContainer;\nconst ErrorMessage = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c8 = ErrorMessage;\nconst ModelSelector = styled(FormControl)(({\n  theme\n}) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent'\n  }\n}));\n_c9 = ModelSelector;\nconst ConversationSelector = styled(FormControl)(({\n  theme\n}) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem'\n  }\n}));\nconst ConversationHeader = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: theme.spacing(1, 2),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c10 = ConversationHeader;\nconst ConversationName = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  '& .timestamp-group': {\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  '& .timestamp': {\n    color: theme.palette.text.secondary,\n    fontSize: '0.75rem',\n    marginRight: theme.spacing(2)\n  }\n}));\n_c11 = ConversationName;\nconst EditableTitle = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  '& input': {\n    background: 'none',\n    border: 'none',\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n    color: theme.palette.text.primary,\n    fontSize: '1rem',\n    padding: theme.spacing(0.5, 1),\n    '&:focus': {\n      outline: 'none'\n    }\n  }\n}));\n\n// Add logging utility\n_c12 = EditableTitle;\nconst logDebug = (component, action, details) => {\n  console.log(`[${component}] ${action}:`, details);\n};\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl,\n  otherPanelMessages,\n  onBrainstormMessage,\n  onMessageSubmit,\n  onModelSelect\n}) {\n  _s2();\n  var _s = $RefreshSig$(),\n    _models$find2,\n    _models$find3,\n    _currentConversation$;\n  // Process streaming chunks\n  const processStreamingChunk = useCallback(chunk => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n      try {\n        var _data$choices$, _data$choices$$delta;\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n        if (data.choices && (_data$choices$ = data.choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$delta = _data$choices$.delta) !== null && _data$choices$$delta !== void 0 && _data$choices$$delta.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n    return accumulatedContent;\n  }, []);\n  const processStreamingResponse = useCallback(async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = ''; // Reset accumulated content for each new response\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        accumulatedContent += newContent;\n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: accumulatedContent\n        }));\n      }\n\n      // Add completed message to conversation\n      if (accumulatedContent) {\n        updateConversationMessages([...currentConversation.messages, {\n          content: accumulatedContent,\n          timestamp: new Date().toISOString(),\n          role: 'assistant'\n        }]);\n      }\n      return accumulatedContent;\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Stream was aborted');\n        return accumulatedContent;\n      }\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  }, [processStreamingChunk, position, setStreamingResponses, currentConversation.messages, updateConversationMessages]);\n\n  // Update initial selectedModel state to maintain model selection\n  const [selectedModel, setSelectedModel] = useState(() => {\n    const savedModel = localStorage.getItem(`selectedModel-${position}`);\n    // Only use saved model if it exists in the available models\n    return savedModel && models.some(m => m.id === savedModel) ? savedModel : '';\n  });\n  const [inputValue, setInputValue] = useState('');\n  const [brainstormEnabled, setBrainstormEnabled] = useState(() => {\n    const saved = localStorage.getItem(`brainstorm-enabled-${position}`);\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [brainstormIterations, setBrainstormIterations] = useState(() => {\n    const saved = localStorage.getItem(`brainstorm-iterations-${position}`);\n    return saved ? JSON.parse(saved) : 0; // 0 means no iterations set, -1 means infinite\n  });\n  const [brainstormMenuAnchor, setBrainstormMenuAnchor] = useState(null);\n  const [isEditingName, setIsEditingName] = useState(false);\n  const [editedName, setEditedName] = useState('');\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{\n      id: Date.now(),\n      name: 'New Conversation',\n      timestamp: new Date().toISOString(),\n      messages: []\n    }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState(() => {\n    var _conversations$;\n    return (_conversations$ = conversations[0]) === null || _conversations$ === void 0 ? void 0 : _conversations$.id;\n  });\n  const currentConversation = useMemo(() => {\n    return conversations.find(c => c.id === currentConversationId) || conversations[0];\n  }, [conversations, currentConversationId]);\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n  const updateConversationMessages = useCallback(newMessages => {\n    setConversations(prev => prev.map(conv => conv.id === currentConversationId ? {\n      ...conv,\n      messages: newMessages\n    } : conv));\n  }, [currentConversationId]);\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  // Add health check state\n  const [lastHealthCheck, setLastHealthCheck] = useState(() => {\n    return parseInt(localStorage.getItem('lastHealthCheck') || '0');\n  });\n\n  // Add health check toggle state\n  const [healthChecksEnabled, setHealthChecksEnabled] = useState(() => {\n    return localStorage.getItem('healthChecksEnabled') !== 'false';\n  });\n\n  // Add loading state for model switching\n  const [isModelSwitching, setIsModelSwitching] = useState(false);\n\n  // Add model status tracking\n  const [modelStatus, setModelStatus] = useState({});\n  const lastNetworkCheck = useRef(0);\n  const networkCheckInterval = 60000; // 1 minute in milliseconds\n\n  // Cache models list with a longer interval\n  const [cachedModels, setCachedModels] = useState([]);\n  const modelListInterval = 60000; // 1 minute\n  const lastModelListCheck = useRef(0);\n\n  // Add state for scroll management\n  const [userHasScrolled, setUserHasScrolled] = useState(false);\n  const messageListRef = useRef(null);\n\n  // Function to check if scrolled to bottom\n  const isScrolledToBottom = useCallback(() => {\n    if (!messageListRef.current) return true;\n    const {\n      scrollHeight,\n      scrollTop,\n      clientHeight\n    } = messageListRef.current;\n    // Consider \"almost\" at bottom (within 100px) as at bottom\n    return scrollHeight - scrollTop - clientHeight < 100;\n  }, []);\n\n  // Handle scroll events\n  const handleScroll = useCallback(e => {\n    // Only set userHasScrolled if the scroll was manual (wheel or drag)\n    if (e.type === 'wheel' || e.type === 'touchmove') {\n      const wasAtBottom = isScrolledToBottom();\n      setUserHasScrolled(!wasAtBottom);\n    }\n  }, [isScrolledToBottom]);\n\n  // Scroll to bottom function\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current && (!userHasScrolled || isScrolledToBottom())) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [userHasScrolled, isScrolledToBottom]);\n\n  // Update scroll effect\n  useEffect(() => {\n    if (!messageListRef.current) return;\n    const messageList = messageListRef.current;\n    messageList.addEventListener('wheel', handleScroll);\n    messageList.addEventListener('touchmove', handleScroll);\n    return () => {\n      messageList.removeEventListener('wheel', handleScroll);\n      messageList.removeEventListener('touchmove', handleScroll);\n    };\n  }, [handleScroll]);\n\n  // Update auto-scroll effect\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 100);\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  // Update loadedModels state to use global state\n  const [loadedModels, setLoadedModels] = useState(() => {\n    const saved = localStorage.getItem('loadedModels');\n    return new Set(saved ? JSON.parse(saved) : []);\n  });\n\n  // Save loadedModels to localStorage whenever it changes\n  useEffect(() => {\n    if (loadedModels.size > 0) {\n      localStorage.setItem('loadedModels', JSON.stringify(Array.from(loadedModels)));\n    }\n  }, [loadedModels]);\n\n  // Update handleModelChange to prevent unnecessary model loading checks\n  const handleModelChange = useCallback(async modelId => {\n    if (modelId === selectedModel) return;\n    logDebug('ModelChange', 'Starting model change', {\n      from: selectedModel,\n      to: modelId\n    });\n    setIsModelSwitching(true);\n    try {\n      // Only do a load check if we haven't seen this model before\n      if (!loadedModels.has(modelId)) {\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            model: modelId,\n            messages: [{\n              role: 'system',\n              content: 'Hello'\n            }],\n            stream: false,\n            max_tokens: 1\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to load model: ${response.statusText}`);\n        }\n\n        // Add to loaded models\n        setLoadedModels(prev => new Set([...prev, modelId]));\n      }\n\n      // Update selected model\n      setSelectedModel(modelId);\n      localStorage.setItem(`selectedModel-${position}`, modelId);\n      onModelSelect === null || onModelSelect === void 0 ? void 0 : onModelSelect(position, modelId);\n    } catch (error) {\n      console.error('Error switching model:', error);\n    } finally {\n      setIsModelSwitching(false);\n    }\n  }, [position, onModelSelect, selectedModel, serverUrl, loadedModels]);\n\n  // Remove model unloading completely - let LM Studio handle it\n  const handleModelAction = useCallback(async action => {\n    if (!selectedModel) return;\n    logDebug('ModelAction', 'Starting model action', {\n      action,\n      model: selectedModel\n    });\n    setIsModelSwitching(true);\n    try {\n      if (action === 'refresh') {\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            model: selectedModel,\n            messages: [{\n              role: 'system',\n              content: 'Hello'\n            }],\n            stream: false,\n            max_tokens: 1\n          })\n        });\n        if (response.ok) {\n          setLoadedModels(prev => new Set([...prev, selectedModel]));\n        }\n      }\n      // Remove unload action completely\n    } catch (error) {\n      console.warn(`Failed to ${action} model:`, error);\n    } finally {\n      setIsModelSwitching(false);\n    }\n  }, [selectedModel, serverUrl]);\n\n  // Add effect to maintain model loaded state\n  useEffect(() => {\n    if (selectedModel && !loadedModels.has(selectedModel)) {\n      setLoadedModels(prev => new Set([...prev, selectedModel]));\n    }\n  }, [selectedModel, loadedModels]);\n\n  // Add back the missing utility functions\n  const getModelColor = modelName => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n\n    // Use a consistent color scheme based on model name\n    const colors = {\n      hermes: '#00BFA5',\n      // Teal\n      nomic: '#4A90E2',\n      // Blue\n      llama: '#2E7D32',\n      // Green\n      mistral: '#ED6C02',\n      // Orange\n      openchat: '#1976D2',\n      // Light blue\n      qwen: '#9C27B0',\n      // Purple\n      gemma: '#FF4081',\n      // Pink\n      default: '#757575' // Grey\n    };\n\n    // Find the first matching model name in the colors object\n    const modelType = Object.keys(colors).find(key => name.includes(key));\n    return modelType ? colors[modelType] : colors.default;\n  };\n  const getModelImage = modelName => {\n    if (!modelName) return null;\n    const name = modelName.trim().toLowerCase();\n\n    // Map of model names to their image files\n    const modelImages = {\n      hermes: './Images/Hermes.jpg',\n      nomic: './Images/Nomic.png',\n      qwen: './Images/Qwen2.png',\n      starcoder: './Images/StarCoder.jpg',\n      gemma: './Images/Gemma.png'\n    };\n\n    // Find the first matching model name in the images object\n    const modelType = Object.keys(modelImages).find(key => name.includes(key));\n    return modelType ? modelImages[modelType] : null;\n  };\n  const getModelLetter = modelName => {\n    if (!modelName) return 'A';\n    return modelName.charAt(0).toUpperCase();\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleEmojiClick = emojiData => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = inputValue.slice(0, cursorPosition) + emoji + inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n      setThinking(prev => ({\n        ...prev,\n        [position]: true\n      }));\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n      const data = await response.json();\n\n      // Add file message to chat\n      updateConversationMessages([...currentConversation.messages, {\n        content: `📎 Uploaded file: ${file.name}`,\n        timestamp: new Date().toISOString(),\n        role: 'user',\n        fileId: data.id\n      }]);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      updateConversationMessages([...currentConversation.messages, {\n        content: `Failed to upload file: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n    } finally {\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  const supportsFileUpload = () => {\n    var _currentModel$name, _currentModel$capabil;\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$name = currentModel.name) === null || _currentModel$name === void 0 ? void 0 : _currentModel$name.toLowerCase()) || '';\n\n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$capabil = currentModel.capabilities) === null || _currentModel$capabil === void 0 ? void 0 : _currentModel$capabil.includes('file_upload')) || false;\n  };\n\n  // Add back MessageComponent\n  const MessageComponent = /*#__PURE__*/_s(/*#__PURE__*/memo(_s(({\n    message,\n    align\n  }) => {\n    _s();\n    const [isDragging, setIsDragging] = useState(false);\n    const handleDragStart = e => {\n      var _models$find;\n      setIsDragging(true);\n      // Set both text and rich data for different drop targets\n      e.dataTransfer.setData('text/plain', message.content);\n      e.dataTransfer.setData('application/json', JSON.stringify({\n        type: 'chat_message',\n        content: message.content,\n        timestamp: message.timestamp,\n        role: message.role,\n        metadata: {\n          model: selectedModel,\n          modelName: (_models$find = models.find(m => m.id === selectedModel)) === null || _models$find === void 0 ? void 0 : _models$find.name,\n          conversationId: currentConversationId,\n          conversationName: currentConversation.name\n        }\n      }));\n      e.dataTransfer.effectAllowed = 'copyMove';\n\n      // Create a custom drag image\n      const dragPreview = document.createElement('div');\n      dragPreview.className = 'message-drag-preview';\n      dragPreview.innerHTML = `\n        <div style=\"\n          padding: 8px 12px;\n          background: rgba(25, 118, 210, 0.9);\n          border-radius: 8px;\n          color: white;\n          font-size: 14px;\n          max-width: 200px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n        \">\n          ${message.content.substring(0, 50)}${message.content.length > 50 ? '...' : ''}\n        </div>\n      `;\n      document.body.appendChild(dragPreview);\n      e.dataTransfer.setDragImage(dragPreview, 0, 0);\n      setTimeout(() => document.body.removeChild(dragPreview), 0);\n      e.currentTarget.classList.add('dragging');\n    };\n    const handleDragEnd = e => {\n      setIsDragging(false);\n      e.currentTarget.classList.remove('dragging');\n      setTimeout(() => setIsDragging(false), 100);\n    };\n    return /*#__PURE__*/_jsxDEV(Message, {\n      align: align,\n      draggable: true,\n      onDragStart: handleDragStart,\n      onDragEnd: handleDragEnd,\n      sx: {\n        cursor: isDragging ? 'grabbing' : 'grab',\n        '&:hover': {\n          '& .message-content': {\n            boxShadow: 2,\n            transform: 'translateY(-1px)'\n          }\n        },\n        '&.dragging .message-content': {\n          opacity: 0.7,\n          boxShadow: 4,\n          transform: 'scale(0.98)'\n        },\n        '& .message-content': {\n          transition: 'all 0.2s ease'\n        }\n      },\n      children: message.role === 'error' ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 16,\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n          align: align,\n          className: \"message-content\",\n          sx: {\n            transition: 'all 0.2s ease'\n          },\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            components: {\n              pre: ({\n                node,\n                ...props\n              }) => /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  backgroundColor: 'rgba(0, 0, 0, 0.1)',\n                  padding: '8px',\n                  borderRadius: '4px',\n                  overflowX: 'auto'\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 21\n              }, this),\n              code: ({\n                node,\n                inline,\n                ...props\n              }) => inline ? /*#__PURE__*/_jsxDEV(\"code\", {\n                style: {\n                  backgroundColor: 'rgba(0, 0, 0, 0.1)',\n                  padding: '2px 4px',\n                  borderRadius: '3px'\n                },\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"code\", {\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 23\n              }, this)\n            },\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"textSecondary\",\n          sx: {\n            mt: 0.5,\n            opacity: 0.7,\n            fontSize: '0.7rem'\n          },\n          children: new Date(message.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this);\n  }, \"VIDKbg2yfT0CLfTnlFHLO2Fjmb8=\")), \"VIDKbg2yfT0CLfTnlFHLO2Fjmb8=\");\n\n  // Save brainstorm state\n  useEffect(() => {\n    localStorage.setItem(`brainstorm-enabled-${position}`, brainstormEnabled);\n  }, [brainstormEnabled, position]);\n\n  // Save brainstorm iterations to localStorage\n  useEffect(() => {\n    localStorage.setItem(`brainstorm-iterations-${position}`, brainstormIterations);\n  }, [brainstormIterations, position]);\n  const handleEditName = () => {\n    setEditedName(currentConversation.name);\n    setIsEditingName(true);\n  };\n  const handleSaveName = () => {\n    if (editedName.trim()) {\n      setConversations(prev => prev.map(conv => conv.id === currentConversationId ? {\n        ...conv,\n        name: editedName.trim()\n      } : conv));\n    }\n    setIsEditingName(false);\n  };\n  const handleCancelEdit = () => {\n    setIsEditingName(false);\n    setEditedName('');\n  };\n\n  // Add brainstorm menu handler\n  const handleBrainstormContextMenu = event => {\n    event.preventDefault();\n    setBrainstormMenuAnchor(event.currentTarget);\n  };\n\n  // Update the brainstorm menu items to save state\n  const handleBrainstormIterationChange = count => {\n    setBrainstormIterations(count);\n    setBrainstormMenuAnchor(null);\n    // If iterations are set but brainstorm is not enabled, enable it\n    if (!brainstormEnabled) {\n      setBrainstormEnabled(true);\n    }\n  };\n  const handleDownloadBrainstorm = useCallback(() => {\n    const formatMessage = msg => {\n      var _msg$metadata;\n      const timestamp = new Date(msg.timestamp).toLocaleString();\n      const model = ((_msg$metadata = msg.metadata) === null || _msg$metadata === void 0 ? void 0 : _msg$metadata.modelName) || 'Unknown Model';\n      const role = msg.role === 'user' ? 'Human' : 'Assistant';\n      return `[${timestamp}] ${role} (${model}):\\n${msg.content}\\n\\n`;\n    };\n    const text = currentConversation.messages.map(formatMessage).join('');\n    const blob = new Blob([text], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `conversation-${currentConversation.name}-${new Date().toISOString()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [currentConversation]);\n\n  // Add the missing handleBrainstormToggle function\n  const handleBrainstormToggle = useCallback(() => {\n    const newState = !brainstormEnabled;\n    setBrainstormEnabled(newState);\n\n    // Notify other panel\n    const event = new CustomEvent('brainstormSync', {\n      detail: {\n        enabled: newState,\n        iterations: brainstormIterations,\n        fromPosition: position\n      }\n    });\n    window.dispatchEvent(event);\n  }, [brainstormEnabled, brainstormIterations, position]);\n\n  // Update handleSendMessage to properly handle message state\n  const handleSendMessage = useCallback(async () => {\n    if (!inputValue.trim() || !selectedModel || isModelSwitching) return;\n    const message = inputValue.trim();\n    const currentMessages = [...currentConversation.messages]; // Capture current state\n\n    // Clear input before processing\n    setInputValue('');\n\n    // Add user message immediately\n    const userMessage = {\n      content: message,\n      timestamp: new Date().toISOString(),\n      role: 'user'\n    };\n    updateConversationMessages([...currentMessages, userMessage]);\n    try {\n      setThinking(prev => ({\n        ...prev,\n        [position]: true\n      }));\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: ''\n      }));\n\n      // Create new AbortController for this request\n      abortControllerRef.current = new AbortController();\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: [...currentMessages, userMessage].map(msg => ({\n            role: msg.role,\n            content: msg.content\n          })),\n          stream: true\n        }),\n        signal: abortControllerRef.current.signal\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const reader = response.body.getReader();\n      await processStreamingResponse(reader);\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Request was aborted');\n        return;\n      }\n      console.error('Error sending message:', error);\n      updateConversationMessages([...currentMessages, userMessage, {\n        content: `Error: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n    } finally {\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n      abortControllerRef.current = null;\n      // Clear any remaining streaming response\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: ''\n      }));\n    }\n  }, [inputValue, selectedModel, isModelSwitching, currentConversation.messages, updateConversationMessages, setStreamingResponses, position, serverUrl, processStreamingResponse, setThinking]);\n\n  // Update handleStopResponse to properly handle message state\n  const handleStopResponse = useCallback(() => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n\n      // Immediately update UI state\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n\n      // Add the partial response as a message if there is any\n      if (streamingResponse) {\n        const currentMessages = [...currentConversation.messages];\n        updateConversationMessages([...currentMessages, {\n          content: streamingResponse,\n          timestamp: new Date().toISOString(),\n          role: 'assistant'\n        }]);\n      }\n      // Clear streaming response\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: ''\n      }));\n    }\n  }, [position, setThinking, streamingResponse, currentConversation.messages, updateConversationMessages, setStreamingResponses]);\n\n  // Add handleNewConversation function\n  const handleNewConversation = useCallback(() => {\n    const newConversation = {\n      id: Date.now().toString(),\n      name: 'New Conversation',\n      timestamp: new Date().toISOString(),\n      messages: []\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newConversation.id);\n  }, []);\n\n  // Add handleMenuAction function\n  const handleMenuAction = useCallback(async action => {\n    switch (action) {\n      case 'new':\n        handleNewConversation();\n        break;\n      case 'clear':\n        updateConversationMessages([]);\n        break;\n      case 'delete':\n        setConversations(prev => {\n          const updatedConversations = prev.filter(conv => conv.id !== currentConversationId);\n          if (updatedConversations.length === 0) {\n            const newConversation = {\n              id: Date.now().toString(),\n              name: 'New Conversation',\n              messages: [],\n              timestamp: new Date().toISOString()\n            };\n            return [newConversation];\n          }\n          setCurrentConversationId(updatedConversations[0].id);\n          return updatedConversations;\n        });\n        break;\n      default:\n        break;\n    }\n    setMenuAnchor(null);\n  }, [currentConversationId, handleNewConversation, updateConversationMessages]);\n\n  // Add ThinkingIndicator component\n  const ThinkingIndicator = /*#__PURE__*/memo(({\n    isThinking,\n    onStop\n  }) => isThinking ? /*#__PURE__*/_jsxDEV(Message, {\n    align: \"left\",\n    children: /*#__PURE__*/_jsxDEV(MessageContent, {\n      align: \"left\",\n      sx: {\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        minWidth: '200px',\n        width: 'fit-content',\n        maxWidth: '70%',\n        position: 'relative',\n        padding: '12px 16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: onStop,\n          sx: {\n            ml: 'auto',\n            bgcolor: 'error.main',\n            color: 'error.contrastText',\n            '&:hover': {\n              bgcolor: 'error.dark'\n            },\n            width: 24,\n            height: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(StopIcon, {\n            sx: {\n              fontSize: 16\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1031,\n    columnNumber: 7\n  }, this) : null);\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: selectedModel ? ((_models$find2 = models.find(m => m.id === selectedModel)) === null || _models$find2 === void 0 ? void 0 : _models$find2.name) || 'Select a model' : 'Select a model',\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: selectedModel ? getModelColor(((_models$find3 = models.find(m => m.id === selectedModel)) === null || _models$find3 === void 0 ? void 0 : _models$find3.name) || '') : 'primary.main',\n              transition: 'all 0.3s ease',\n              fontWeight: 600,\n              width: 40,\n              height: 40,\n              cursor: 'help',\n              '& img': {\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover'\n              }\n            },\n            children: selectedModel ? (_models$find4 => {\n              const modelName = ((_models$find4 = models.find(m => m.id === selectedModel)) === null || _models$find4 === void 0 ? void 0 : _models$find4.name) || '';\n              const imagePath = getModelImage(modelName);\n              return imagePath ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePath,\n                alt: modelName,\n                style: {\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 21\n              }, this) : getModelLetter(modelName);\n            })() : 'A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: models.length > 0 ? /*#__PURE__*/_jsxDEV(ModelSelector, {\n            size: \"small\",\n            sx: {\n              minWidth: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedModel || '',\n              onChange: e => handleModelChange(e.target.value),\n              variant: \"standard\",\n              displayEmpty: true,\n              children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: model.id,\n                sx: {\n                  color: loadedModels.has(model.id) ? '#2e7d32' : '#ed6c02',\n                  fontWeight: loadedModels.has(model.id) ? 600 : 400,\n                  '&:hover': {\n                    backgroundColor: loadedModels.has(model.id) ? 'rgba(46, 125, 50, 0.08)' // Green hover\n                    : 'rgba(237, 108, 2, 0.08)' // Orange hover\n                  }\n                },\n                children: [loadedModels.has(model.id) ? '● ' : '○ ', model.name]\n              }, model.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"No AI models available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: brainstormEnabled ? \"AI Brainstorm Active\" : \"Enable AI Brainstorm\\nRight-click to set iterations\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleBrainstormToggle,\n            onContextMenu: handleBrainstormContextMenu,\n            color: brainstormEnabled ? \"primary\" : \"default\",\n            sx: {\n              position: 'relative',\n              '&::after': brainstormEnabled ? {\n                content: '\"\"',\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                width: '120%',\n                height: '120%',\n                borderRadius: '50%',\n                transform: 'translate(-50%, -50%)',\n                animation: 'pulse 2s infinite',\n                backgroundColor: 'primary.main',\n                opacity: 0.2\n              } : {},\n              '@keyframes pulse': {\n                '0%': {\n                  transform: 'translate(-50%, -50%) scale(0.95)',\n                  opacity: 0.5\n                },\n                '70%': {\n                  transform: 'translate(-50%, -50%) scale(1.1)',\n                  opacity: 0.2\n                },\n                '100%': {\n                  transform: 'translate(-50%, -50%) scale(0.95)',\n                  opacity: 0.5\n                }\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(BrainstormIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleNewConversation,\n          title: \"New Conversation\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => setMenuAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      ref: messageListRef,\n      onScroll: e => {\n        if (isScrolledToBottom()) {\n          setUserHasScrolled(false);\n        }\n      },\n      children: [currentConversation === null || currentConversation === void 0 ? void 0 : (_currentConversation$ = currentConversation.messages) === null || _currentConversation$ === void 0 ? void 0 : _currentConversation$.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageComponent, {\n        message: msg,\n        align: msg.role === 'user' ? 'right' : 'left'\n      }, `${msg.timestamp}-${index}-${msg.content.substring(0, 20)}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 11\n      }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(MessageComponent, {\n        message: {\n          content: streamingResponse,\n          timestamp: new Date().toISOString(),\n          role: 'assistant'\n        },\n        align: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 11\n      }, this), isThinking && /*#__PURE__*/_jsxDEV(ThinkingIndicator, {\n        isThinking: isThinking,\n        onStop: handleStopResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        onDragOver: e => {\n          e.preventDefault();\n          e.currentTarget.style.backgroundColor = 'rgba(25, 118, 210, 0.1)';\n          e.dataTransfer.dropEffect = 'copy';\n        },\n        onDragLeave: e => {\n          e.preventDefault();\n          e.currentTarget.style.backgroundColor = '';\n        },\n        onDrop: e => {\n          e.preventDefault();\n          e.currentTarget.style.backgroundColor = '';\n          const text = e.dataTransfer.getData('text/plain');\n          if (text) {\n            setInputValue(prev => {\n              const textarea = document.querySelector('textarea');\n              const cursorPosition = (textarea === null || textarea === void 0 ? void 0 : textarea.selectionStart) || prev.length;\n              return prev.slice(0, cursorPosition) + text + prev.slice(cursorPosition);\n            });\n            // Focus and scroll to end\n            const textarea = document.querySelector('textarea');\n            if (textarea) {\n              textarea.focus();\n              textarea.scrollTop = textarea.scrollHeight;\n            }\n          }\n        },\n        sx: {\n          transition: 'all 0.2s ease',\n          '&:hover': {\n            '&[data-dragging=\"true\"]': {\n              backgroundColor: 'rgba(25, 118, 210, 0.1)'\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: e => setEmojiAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: Boolean(emojiAnchor),\n          anchorEl: emojiAnchor,\n          onClose: () => setEmojiAnchor(null),\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n              onEmojiClick: handleEmojiClick,\n              autoFocusSearch: false,\n              theme: \"dark\",\n              searchPlaceHolder: \"Search emojis...\",\n              width: 320,\n              height: 400,\n              previewConfig: {\n                showPreview: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload,\n          accept: \"image/*,.pdf,.txt,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: !selectedModel ? \"Please select a model first\" : !supportsFileUpload() ? \"This model doesn't support file uploads\" : \"Upload a file\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              disabled: !supportsFileUpload(),\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n                sx: {\n                  color: theme => !supportsFileUpload() ? theme.palette.action.disabled : 'inherit'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1337,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1331,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 4,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleSendMessage(),\n                disabled: !inputValue.trim() || !selectedModel,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1363,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1358,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"error\",\n        sx: {\n          mt: 1,\n          display: 'block'\n        },\n        onClick: () => setUploadError(''),\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1371,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: () => setMenuAnchor(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('new'),\n        children: \"New Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('clear'),\n        children: \"Clear Current Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('delete'),\n        children: \"Delete Current Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDownloadBrainstorm,\n        children: \"Download Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => setHealthChecksEnabled(prev => !prev),\n        children: [healthChecksEnabled ? '✓ ' : '', \" Health Checks Enabled\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleModelAction('refresh'),\n        disabled: !selectedModel || isModelSwitching,\n        children: \"Refresh Current Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConversationHeader, {\n      children: /*#__PURE__*/_jsxDEV(ConversationName, {\n        children: isEditingName ? /*#__PURE__*/_jsxDEV(EditableTitle, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: editedName,\n            onChange: e => setEditedName(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleSaveName(),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: handleSaveName,\n            children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: handleCancelEdit,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1425,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: currentConversation.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: handleEditName,\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"timestamp-group\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: \"timestamp\",\n              component: \"span\",\n              children: new Date(currentConversation.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1441,\n                columnNumber: 30\n              }, this),\n              onClick: handleNewConversation,\n              size: \"small\",\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: currentConversationId,\n              onChange: e => setCurrentConversationId(e.target.value),\n              size: \"small\",\n              sx: {\n                minWidth: 120\n              },\n              children: conversations.map(conv => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: conv.id,\n                children: [conv.name, \" - \", new Date(conv.timestamp).toLocaleDateString()]\n              }, conv.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1454,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: brainstormMenuAnchor,\n      open: Boolean(brainstormMenuAnchor),\n      onClose: () => setBrainstormMenuAnchor(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleBrainstormIterationChange(-1),\n        children: \"Infinite Iterations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1470,\n        columnNumber: 9\n      }, this), [1, 2, 3, 5, 10].map(count => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleBrainstormIterationChange(count),\n        children: [count, \" Iteration\", count > 1 ? 's' : '']\n      }, count, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1474,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1073,\n    columnNumber: 5\n  }, this);\n}\n_s2(ChatWindow, \"Ka6P33Ze8yqxVDxpQQCvBSr4WF8=\");\n_c13 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessageList\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"MessageContent\");\n$RefreshReg$(_c6, \"ChatFooter\");\n$RefreshReg$(_c7, \"InputContainer\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"ModelSelector\");\n$RefreshReg$(_c10, \"ConversationHeader\");\n$RefreshReg$(_c11, \"ConversationName\");\n$RefreshReg$(_c12, \"EditableTitle\");\n$RefreshReg$(_c13, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","memo","Box","Paper","TextField","IconButton","Typography","Avatar","Menu","MenuItem","Select","FormControl","CircularProgress","InputAdornment","Popover","Tooltip","ClickAwayListener","Divider","Button","Send","SendIcon","MoreVert","MoreIcon","VideoCall","VideoIcon","OpenInFull","ExpandIcon","Image","ImageIcon","EmojiEmotions","EmojiIcon","Stop","StopIcon","Add","AddIcon","NoteAdd","NoteAddIcon","Psychology","BrainstormIcon","Edit","EditIcon","Check","CheckIcon","Close","CloseIcon","ReactMarkdown","styled","EmojiPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","display","flexDirection","height","flex","overflow","backgroundColor","palette","background","paper","borderRadius","spacing","_c","ChatHeader","padding","alignItems","justifyContent","borderBottom","divider","_c2","MessageList","flexGrow","default","width","grey","_c3","Message","align","marginBottom","_c4","MessageContent","maxWidth","primary","main","color","contrastText","text","boxShadow","shadows","margin","fontFamily","marginTop","paddingLeft","borderLeft","secondary","_c5","ChatFooter","borderTop","_c6","InputContainer","gap","_c7","ErrorMessage","error","dark","_c8","ModelSelector","paddingBottom","borderBottomColor","_c9","ConversationSelector","minWidth","fontSize","ConversationHeader","_c10","ConversationName","marginLeft","marginRight","_c11","EditableTitle","border","outline","_c12","logDebug","component","action","details","console","log","ChatWindow","position","models","streamingResponse","isThinking","setStreamingResponses","setThinking","serverUrl","otherPanelMessages","onBrainstormMessage","onMessageSubmit","onModelSelect","_s2","_s","$RefreshSig$","_models$find2","_models$find3","_currentConversation$","processStreamingChunk","chunk","lines","split","accumulatedContent","line","trim","includes","_data$choices$","_data$choices$$delta","jsonStr","replace","data","JSON","parse","choices","delta","content","e","warn","processStreamingResponse","reader","responseText","maxIterations","iterations","done","value","read","TextDecoder","decode","newContent","prev","updateConversationMessages","currentConversation","messages","timestamp","Date","toISOString","role","name","selectedModel","setSelectedModel","savedModel","localStorage","getItem","some","m","id","inputValue","setInputValue","brainstormEnabled","setBrainstormEnabled","saved","brainstormIterations","setBrainstormIterations","brainstormMenuAnchor","setBrainstormMenuAnchor","isEditingName","setIsEditingName","editedName","setEditedName","conversations","setConversations","now","currentConversationId","setCurrentConversationId","_conversations$","find","c","setItem","stringify","newMessages","map","conv","menuAnchor","setMenuAnchor","emojiAnchor","setEmojiAnchor","uploadError","setUploadError","fileInputRef","messagesEndRef","abortControllerRef","responseBuffer","updateTimeoutRef","lastHealthCheck","setLastHealthCheck","parseInt","healthChecksEnabled","setHealthChecksEnabled","isModelSwitching","setIsModelSwitching","modelStatus","setModelStatus","lastNetworkCheck","networkCheckInterval","cachedModels","setCachedModels","modelListInterval","lastModelListCheck","userHasScrolled","setUserHasScrolled","messageListRef","isScrolledToBottom","current","scrollHeight","scrollTop","clientHeight","handleScroll","type","wasAtBottom","scrollToBottom","scrollIntoView","behavior","messageList","addEventListener","removeEventListener","scrollTimer","setTimeout","clearTimeout","loadedModels","setLoadedModels","Set","size","Array","from","handleModelChange","modelId","to","has","response","fetch","method","headers","body","model","stream","max_tokens","ok","Error","statusText","handleModelAction","getModelColor","modelName","toLowerCase","colors","hermes","nomic","llama","mistral","openchat","qwen","gemma","modelType","Object","keys","key","getModelImage","modelImages","starcoder","getModelLetter","charAt","toUpperCase","handleKeyPress","event","shiftKey","preventDefault","handleSendMessage","handleEmojiClick","emojiData","emoji","cursorPosition","document","querySelector","selectionStart","updatedText","slice","handleFileUpload","_event$target$files","file","target","files","formData","FormData","append","json","fileId","message","supportsFileUpload","_currentModel$name","_currentModel$capabil","length","currentModel","capabilities","MessageComponent","isDragging","setIsDragging","handleDragStart","_models$find","dataTransfer","setData","metadata","conversationId","conversationName","effectAllowed","dragPreview","createElement","className","innerHTML","substring","appendChild","setDragImage","removeChild","currentTarget","classList","add","handleDragEnd","remove","draggable","onDragStart","onDragEnd","sx","cursor","transform","opacity","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","components","pre","node","props","style","overflowX","code","inline","mt","toLocaleTimeString","handleEditName","handleSaveName","handleCancelEdit","handleBrainstormContextMenu","handleBrainstormIterationChange","count","handleDownloadBrainstorm","formatMessage","msg","_msg$metadata","toLocaleString","join","blob","Blob","url","URL","createObjectURL","a","href","download","click","revokeObjectURL","handleBrainstormToggle","newState","CustomEvent","detail","enabled","fromPosition","window","dispatchEvent","currentMessages","userMessage","AbortController","signal","status","getReader","handleStopResponse","abort","handleNewConversation","newConversation","toString","handleMenuAction","updatedConversations","filter","ThinkingIndicator","onStop","onClick","ml","bgcolor","elevation","title","fontWeight","objectFit","_models$find4","imagePath","src","alt","onChange","displayEmpty","onContextMenu","top","left","animation","ref","onScroll","index","onDragOver","dropEffect","onDragLeave","onDrop","getData","textarea","focus","open","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","onEmojiClick","autoFocusSearch","searchPlaceHolder","previewConfig","showPreview","accept","disabled","_fileInputRef$current","fullWidth","multiline","maxRows","onKeyPress","placeholder","InputProps","disableUnderline","endAdornment","autoFocus","startIcon","toLocaleDateString","_c13","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo, memo } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  IconButton,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  Select,\n  FormControl,\n  CircularProgress,\n  InputAdornment,\n  Popover,\n  Tooltip,\n  ClickAwayListener,\n  Divider,\n  Button,\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  MoreVert as MoreIcon,\n  VideoCall as VideoIcon,\n  OpenInFull as ExpandIcon,\n  Image as ImageIcon,\n  EmojiEmotions as EmojiIcon,\n  Stop as StopIcon,\n  Add as AddIcon,\n  NoteAdd as NoteAddIcon,\n  Psychology as BrainstormIcon,\n  Edit as EditIcon,\n  Check as CheckIcon,\n  Close as CloseIcon,\n} from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3),\n}));\n\nconst ChatHeader = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n}));\n\nconst MessageList = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px',\n  },\n}));\n\nconst Message = styled(Box)(({ theme, align }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2),\n}));\n\nconst MessageContent = styled(Box)(({ theme, align }) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0,\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0),\n    fontFamily: 'monospace',\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5),\n  },\n  '& ul, & ol': {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(3),\n  },\n  '& li': {\n    marginBottom: theme.spacing(0.5),\n  },\n  '& blockquote': {\n    borderLeft: `3px solid ${theme.palette.divider}`,\n    margin: theme.spacing(1, 0),\n    paddingLeft: theme.spacing(2),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst ChatFooter = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1),\n}));\n\nconst ErrorMessage = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n}));\n\nconst ModelSelector = styled(FormControl)(({ theme }) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0,\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent',\n  },\n}));\n\nconst ConversationSelector = styled(FormControl)(({ theme }) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem',\n  },\n}));\n\nconst ConversationHeader = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: theme.spacing(1, 2),\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst ConversationName = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  '& .timestamp-group': {\n    display: 'flex',\n    alignItems: 'center',\n    gap: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n  '& .timestamp': {\n    color: theme.palette.text.secondary,\n    fontSize: '0.75rem',\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst EditableTitle = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  '& input': {\n    background: 'none',\n    border: 'none',\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\n    color: theme.palette.text.primary,\n    fontSize: '1rem',\n    padding: theme.spacing(0.5, 1),\n    '&:focus': {\n      outline: 'none',\n    }\n  }\n}));\n\n// Add logging utility\nconst logDebug = (component, action, details) => {\n  console.log(`[${component}] ${action}:`, details);\n};\n\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl,\n  otherPanelMessages,\n  onBrainstormMessage,\n  onMessageSubmit,\n  onModelSelect,\n}) {\n  // Process streaming chunks\n  const processStreamingChunk = useCallback((chunk) => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n\n      try {\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n\n        if (data.choices && data.choices[0]?.delta?.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n\n    return accumulatedContent;\n  }, []);\n\n  const processStreamingResponse = useCallback(async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = '';  // Reset accumulated content for each new response\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        accumulatedContent += newContent;\n\n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: accumulatedContent\n        }));\n      }\n\n      // Add completed message to conversation\n      if (accumulatedContent) {\n        updateConversationMessages([\n          ...currentConversation.messages,\n          {\n            content: accumulatedContent,\n            timestamp: new Date().toISOString(),\n            role: 'assistant',\n          }\n        ]);\n      }\n\n      return accumulatedContent;\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Stream was aborted');\n        return accumulatedContent;\n      }\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  }, [processStreamingChunk, position, setStreamingResponses, currentConversation.messages, updateConversationMessages]);\n\n  // Update initial selectedModel state to maintain model selection\n  const [selectedModel, setSelectedModel] = useState(() => {\n    const savedModel = localStorage.getItem(`selectedModel-${position}`);\n    // Only use saved model if it exists in the available models\n    return savedModel && models.some(m => m.id === savedModel) ? savedModel : '';\n  });\n\n  const [inputValue, setInputValue] = useState('');\n  const [brainstormEnabled, setBrainstormEnabled] = useState(() => {\n    const saved = localStorage.getItem(`brainstorm-enabled-${position}`);\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [brainstormIterations, setBrainstormIterations] = useState(() => {\n    const saved = localStorage.getItem(`brainstorm-iterations-${position}`);\n    return saved ? JSON.parse(saved) : 0; // 0 means no iterations set, -1 means infinite\n  });\n  const [brainstormMenuAnchor, setBrainstormMenuAnchor] = useState(null);\n  const [isEditingName, setIsEditingName] = useState(false);\n  const [editedName, setEditedName] = useState('');\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    return saved ? JSON.parse(saved) : [{\n      id: Date.now(),\n      name: 'New Conversation',\n      timestamp: new Date().toISOString(),\n      messages: []\n    }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState(() => {\n    return conversations[0]?.id;\n  });\n\n  const currentConversation = useMemo(() => {\n    return conversations.find(c => c.id === currentConversationId) || conversations[0];\n  }, [conversations, currentConversationId]);\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n\n  const updateConversationMessages = useCallback((newMessages) => {\n    setConversations(prev => prev.map(conv => \n      conv.id === currentConversationId\n        ? { ...conv, messages: newMessages }\n        : conv\n    ));\n  }, [currentConversationId]);\n\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  // Add health check state\n  const [lastHealthCheck, setLastHealthCheck] = useState(() => {\n    return parseInt(localStorage.getItem('lastHealthCheck') || '0');\n  });\n\n  // Add health check toggle state\n  const [healthChecksEnabled, setHealthChecksEnabled] = useState(() => {\n    return localStorage.getItem('healthChecksEnabled') !== 'false';\n  });\n\n  // Add loading state for model switching\n  const [isModelSwitching, setIsModelSwitching] = useState(false);\n\n  // Add model status tracking\n  const [modelStatus, setModelStatus] = useState({});\n  const lastNetworkCheck = useRef(0);\n  const networkCheckInterval = 60000; // 1 minute in milliseconds\n\n  // Cache models list with a longer interval\n  const [cachedModels, setCachedModels] = useState([]);\n  const modelListInterval = 60000; // 1 minute\n  const lastModelListCheck = useRef(0);\n\n  // Add state for scroll management\n  const [userHasScrolled, setUserHasScrolled] = useState(false);\n  const messageListRef = useRef(null);\n  \n  // Function to check if scrolled to bottom\n  const isScrolledToBottom = useCallback(() => {\n    if (!messageListRef.current) return true;\n    const { scrollHeight, scrollTop, clientHeight } = messageListRef.current;\n    // Consider \"almost\" at bottom (within 100px) as at bottom\n    return scrollHeight - scrollTop - clientHeight < 100;\n  }, []);\n\n  // Handle scroll events\n  const handleScroll = useCallback((e) => {\n    // Only set userHasScrolled if the scroll was manual (wheel or drag)\n    if (e.type === 'wheel' || e.type === 'touchmove') {\n      const wasAtBottom = isScrolledToBottom();\n      setUserHasScrolled(!wasAtBottom);\n    }\n  }, [isScrolledToBottom]);\n\n  // Scroll to bottom function\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current && (!userHasScrolled || isScrolledToBottom())) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [userHasScrolled, isScrolledToBottom]);\n\n  // Update scroll effect\n  useEffect(() => {\n    if (!messageListRef.current) return;\n    \n    const messageList = messageListRef.current;\n    messageList.addEventListener('wheel', handleScroll);\n    messageList.addEventListener('touchmove', handleScroll);\n    \n    return () => {\n      messageList.removeEventListener('wheel', handleScroll);\n      messageList.removeEventListener('touchmove', handleScroll);\n    };\n  }, [handleScroll]);\n\n  // Update auto-scroll effect\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 100);\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  // Update loadedModels state to use global state\n  const [loadedModels, setLoadedModels] = useState(() => {\n    const saved = localStorage.getItem('loadedModels');\n    return new Set(saved ? JSON.parse(saved) : []);\n  });\n\n  // Save loadedModels to localStorage whenever it changes\n  useEffect(() => {\n    if (loadedModels.size > 0) {\n      localStorage.setItem('loadedModels', JSON.stringify(Array.from(loadedModels)));\n    }\n  }, [loadedModels]);\n\n  // Update handleModelChange to prevent unnecessary model loading checks\n  const handleModelChange = useCallback(async (modelId) => {\n    if (modelId === selectedModel) return;\n    \n    logDebug('ModelChange', 'Starting model change', { from: selectedModel, to: modelId });\n    setIsModelSwitching(true);\n    \n    try {\n      // Only do a load check if we haven't seen this model before\n      if (!loadedModels.has(modelId)) {\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            model: modelId,\n            messages: [{ role: 'system', content: 'Hello' }],\n            stream: false,\n            max_tokens: 1\n          })\n        });\n\n        if (!response.ok) {\n          throw new Error(`Failed to load model: ${response.statusText}`);\n        }\n        \n        // Add to loaded models\n        setLoadedModels(prev => new Set([...prev, modelId]));\n      }\n      \n      // Update selected model\n      setSelectedModel(modelId);\n      localStorage.setItem(`selectedModel-${position}`, modelId);\n      onModelSelect?.(position, modelId);\n      \n    } catch (error) {\n      console.error('Error switching model:', error);\n    } finally {\n      setIsModelSwitching(false);\n    }\n  }, [position, onModelSelect, selectedModel, serverUrl, loadedModels]);\n\n  // Remove model unloading completely - let LM Studio handle it\n  const handleModelAction = useCallback(async (action) => {\n    if (!selectedModel) return;\n    \n    logDebug('ModelAction', 'Starting model action', { \n      action, \n      model: selectedModel \n    });\n    \n    setIsModelSwitching(true);\n    try {\n      if (action === 'refresh') {\n        const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            model: selectedModel,\n            messages: [{ role: 'system', content: 'Hello' }],\n            stream: false,\n            max_tokens: 1\n          })\n        });\n        \n        if (response.ok) {\n          setLoadedModels(prev => new Set([...prev, selectedModel]));\n        }\n      }\n      // Remove unload action completely\n    } catch (error) {\n      console.warn(`Failed to ${action} model:`, error);\n    } finally {\n      setIsModelSwitching(false);\n    }\n  }, [selectedModel, serverUrl]);\n\n  // Add effect to maintain model loaded state\n  useEffect(() => {\n    if (selectedModel && !loadedModels.has(selectedModel)) {\n      setLoadedModels(prev => new Set([...prev, selectedModel]));\n    }\n  }, [selectedModel, loadedModels]);\n\n  // Add back the missing utility functions\n  const getModelColor = (modelName) => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    \n    // Use a consistent color scheme based on model name\n    const colors = {\n      hermes: '#00BFA5',    // Teal\n      nomic: '#4A90E2',     // Blue\n      llama: '#2E7D32',     // Green\n      mistral: '#ED6C02',   // Orange\n      openchat: '#1976D2',  // Light blue\n      qwen: '#9C27B0',      // Purple\n      gemma: '#FF4081',     // Pink\n      default: '#757575'    // Grey\n    };\n\n    // Find the first matching model name in the colors object\n    const modelType = Object.keys(colors).find(key => name.includes(key));\n    return modelType ? colors[modelType] : colors.default;\n  };\n\n  const getModelImage = (modelName) => {\n    if (!modelName) return null;\n    const name = modelName.trim().toLowerCase();\n    \n    // Map of model names to their image files\n    const modelImages = {\n      hermes: './Images/Hermes.jpg',\n      nomic: './Images/Nomic.png',\n      qwen: './Images/Qwen2.png',\n      starcoder: './Images/StarCoder.jpg',\n      gemma: './Images/Gemma.png'\n    };\n\n    // Find the first matching model name in the images object\n    const modelType = Object.keys(modelImages).find(key => name.includes(key));\n    return modelType ? modelImages[modelType] : null;\n  };\n\n  const getModelLetter = (modelName) => {\n    if (!modelName) return 'A';\n    return modelName.charAt(0).toUpperCase();\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = \n      inputValue.slice(0, cursorPosition) + \n      emoji + \n      inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n\n      setThinking(prev => ({ ...prev, [position]: true }));\n\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      // Add file message to chat\n      updateConversationMessages([\n        ...currentConversation.messages,\n        {\n          content: `📎 Uploaded file: ${file.name}`,\n          timestamp: new Date().toISOString(),\n          role: 'user',\n          fileId: data.id,\n        },\n      ]);\n\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      updateConversationMessages([\n        ...currentConversation.messages,\n        {\n          content: `Failed to upload file: ${error.message}`,\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n    } finally {\n      setThinking(prev => ({ ...prev, [position]: false }));\n    }\n  };\n\n  const supportsFileUpload = () => {\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = currentModel?.name?.toLowerCase() || '';\n    \n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return currentModel?.capabilities?.includes('file_upload') || false;\n  };\n\n  // Add back MessageComponent\n  const MessageComponent = memo(({ message, align }) => {\n    const [isDragging, setIsDragging] = useState(false);\n\n    const handleDragStart = (e) => {\n      setIsDragging(true);\n      // Set both text and rich data for different drop targets\n      e.dataTransfer.setData('text/plain', message.content);\n      e.dataTransfer.setData('application/json', JSON.stringify({\n        type: 'chat_message',\n        content: message.content,\n        timestamp: message.timestamp,\n        role: message.role,\n        metadata: {\n          model: selectedModel,\n          modelName: models.find(m => m.id === selectedModel)?.name,\n          conversationId: currentConversationId,\n          conversationName: currentConversation.name\n        }\n      }));\n      e.dataTransfer.effectAllowed = 'copyMove';\n      \n      // Create a custom drag image\n      const dragPreview = document.createElement('div');\n      dragPreview.className = 'message-drag-preview';\n      dragPreview.innerHTML = `\n        <div style=\"\n          padding: 8px 12px;\n          background: rgba(25, 118, 210, 0.9);\n          border-radius: 8px;\n          color: white;\n          font-size: 14px;\n          max-width: 200px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n        \">\n          ${message.content.substring(0, 50)}${message.content.length > 50 ? '...' : ''}\n        </div>\n      `;\n      document.body.appendChild(dragPreview);\n      e.dataTransfer.setDragImage(dragPreview, 0, 0);\n      setTimeout(() => document.body.removeChild(dragPreview), 0);\n\n      e.currentTarget.classList.add('dragging');\n    };\n\n    const handleDragEnd = (e) => {\n      setIsDragging(false);\n      e.currentTarget.classList.remove('dragging');\n      setTimeout(() => setIsDragging(false), 100);\n    };\n\n    return (\n      <Message \n        align={align}\n        draggable={true}\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        sx={{ \n          cursor: isDragging ? 'grabbing' : 'grab',\n          '&:hover': {\n            '& .message-content': {\n              boxShadow: 2,\n              transform: 'translateY(-1px)',\n            }\n          },\n          '&.dragging .message-content': {\n            opacity: 0.7,\n            boxShadow: 4,\n            transform: 'scale(0.98)',\n          },\n          '& .message-content': {\n            transition: 'all 0.2s ease',\n          }\n        }}\n      >\n        {message.role === 'error' ? (\n          <ErrorMessage>\n            <CircularProgress size={16} color=\"error\" />\n            <Typography variant=\"body2\">{message.content}</Typography>\n          </ErrorMessage>\n        ) : (\n          <>\n            <MessageContent \n              align={align} \n              className=\"message-content\"\n              sx={{ \n                transition: 'all 0.2s ease',\n              }}\n            >\n              <ReactMarkdown \n                components={{\n                  pre: ({ node, ...props }) => (\n                    <pre style={{ \n                      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n                      padding: '8px',\n                      borderRadius: '4px',\n                      overflowX: 'auto',\n                    }} {...props} />\n                  ),\n                  code: ({ node, inline, ...props }) => (\n                    inline ? \n                      <code style={{ \n                        backgroundColor: 'rgba(0, 0, 0, 0.1)',\n                        padding: '2px 4px',\n                        borderRadius: '3px',\n                      }} {...props} /> :\n                      <code {...props} />\n                  ),\n                }}\n              >\n                {message.content}\n              </ReactMarkdown>\n            </MessageContent>\n            <Typography \n              variant=\"caption\" \n              color=\"textSecondary\" \n              sx={{ \n                mt: 0.5,\n                opacity: 0.7,\n                fontSize: '0.7rem',\n              }}\n            >\n              {new Date(message.timestamp).toLocaleTimeString()}\n            </Typography>\n          </>\n        )}\n      </Message>\n    );\n  });\n\n  // Save brainstorm state\n  useEffect(() => {\n    localStorage.setItem(`brainstorm-enabled-${position}`, brainstormEnabled);\n  }, [brainstormEnabled, position]);\n\n  // Save brainstorm iterations to localStorage\n  useEffect(() => {\n    localStorage.setItem(`brainstorm-iterations-${position}`, brainstormIterations);\n  }, [brainstormIterations, position]);\n\n  const handleEditName = () => {\n    setEditedName(currentConversation.name);\n    setIsEditingName(true);\n  };\n\n  const handleSaveName = () => {\n    if (editedName.trim()) {\n      setConversations(prev => prev.map(conv => \n        conv.id === currentConversationId \n          ? { ...conv, name: editedName.trim() }\n          : conv\n      ));\n    }\n    setIsEditingName(false);\n  };\n\n  const handleCancelEdit = () => {\n    setIsEditingName(false);\n    setEditedName('');\n  };\n\n  // Add brainstorm menu handler\n  const handleBrainstormContextMenu = (event) => {\n    event.preventDefault();\n    setBrainstormMenuAnchor(event.currentTarget);\n  };\n\n  // Update the brainstorm menu items to save state\n  const handleBrainstormIterationChange = (count) => {\n    setBrainstormIterations(count);\n    setBrainstormMenuAnchor(null);\n    // If iterations are set but brainstorm is not enabled, enable it\n    if (!brainstormEnabled) {\n      setBrainstormEnabled(true);\n    }\n  };\n\n  const handleDownloadBrainstorm = useCallback(() => {\n    const formatMessage = (msg) => {\n      const timestamp = new Date(msg.timestamp).toLocaleString();\n      const model = msg.metadata?.modelName || 'Unknown Model';\n      const role = msg.role === 'user' ? 'Human' : 'Assistant';\n      return `[${timestamp}] ${role} (${model}):\\n${msg.content}\\n\\n`;\n    };\n\n    const text = currentConversation.messages.map(formatMessage).join('');\n    const blob = new Blob([text], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `conversation-${currentConversation.name}-${new Date().toISOString()}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [currentConversation]);\n\n  // Add the missing handleBrainstormToggle function\n  const handleBrainstormToggle = useCallback(() => {\n    const newState = !brainstormEnabled;\n    setBrainstormEnabled(newState);\n    \n    // Notify other panel\n    const event = new CustomEvent('brainstormSync', {\n      detail: {\n        enabled: newState,\n        iterations: brainstormIterations,\n        fromPosition: position\n      }\n    });\n    window.dispatchEvent(event);\n  }, [brainstormEnabled, brainstormIterations, position]);\n\n  // Update handleSendMessage to properly handle message state\n  const handleSendMessage = useCallback(async () => {\n    if (!inputValue.trim() || !selectedModel || isModelSwitching) return;\n\n    const message = inputValue.trim();\n    const currentMessages = [...currentConversation.messages];  // Capture current state\n    \n    // Clear input before processing\n    setInputValue('');\n    \n    // Add user message immediately\n    const userMessage = {\n      content: message,\n      timestamp: new Date().toISOString(),\n      role: 'user',\n    };\n    \n    updateConversationMessages([...currentMessages, userMessage]);\n\n    try {\n      setThinking(prev => ({ ...prev, [position]: true }));\n      setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n\n      // Create new AbortController for this request\n      abortControllerRef.current = new AbortController();\n\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: [...currentMessages, userMessage].map(msg => ({\n            role: msg.role,\n            content: msg.content\n          })),\n          stream: true\n        }),\n        signal: abortControllerRef.current.signal\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const reader = response.body.getReader();\n      await processStreamingResponse(reader);\n      \n    } catch (error) {\n      if (error.name === 'AbortError') {\n        console.log('Request was aborted');\n        return;\n      }\n      console.error('Error sending message:', error);\n      updateConversationMessages([\n        ...currentMessages,\n        userMessage,\n        {\n          content: `Error: ${error.message}`,\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        }\n      ]);\n    } finally {\n      setThinking(prev => ({ ...prev, [position]: false }));\n      abortControllerRef.current = null;\n      // Clear any remaining streaming response\n      setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n    }\n  }, [\n    inputValue,\n    selectedModel,\n    isModelSwitching,\n    currentConversation.messages,\n    updateConversationMessages,\n    setStreamingResponses,\n    position,\n    serverUrl,\n    processStreamingResponse,\n    setThinking\n  ]);\n\n  // Update handleStopResponse to properly handle message state\n  const handleStopResponse = useCallback(() => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      \n      // Immediately update UI state\n      setThinking(prev => ({ ...prev, [position]: false }));\n      \n      // Add the partial response as a message if there is any\n      if (streamingResponse) {\n        const currentMessages = [...currentConversation.messages];\n        updateConversationMessages([\n          ...currentMessages,\n          {\n            content: streamingResponse,\n            timestamp: new Date().toISOString(),\n            role: 'assistant',\n          }\n        ]);\n      }\n      // Clear streaming response\n      setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n    }\n  }, [position, setThinking, streamingResponse, currentConversation.messages, updateConversationMessages, setStreamingResponses]);\n\n  // Add handleNewConversation function\n  const handleNewConversation = useCallback(() => {\n    const newConversation = {\n      id: Date.now().toString(),\n      name: 'New Conversation',\n      timestamp: new Date().toISOString(),\n      messages: []\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newConversation.id);\n  }, []);\n\n  // Add handleMenuAction function\n  const handleMenuAction = useCallback(async (action) => {\n    switch (action) {\n      case 'new':\n        handleNewConversation();\n        break;\n      case 'clear':\n        updateConversationMessages([]);\n        break;\n      case 'delete':\n        setConversations(prev => {\n          const updatedConversations = prev.filter(conv => conv.id !== currentConversationId);\n          if (updatedConversations.length === 0) {\n            const newConversation = {\n              id: Date.now().toString(),\n              name: 'New Conversation',\n              messages: [],\n              timestamp: new Date().toISOString()\n            };\n            return [newConversation];\n          }\n          setCurrentConversationId(updatedConversations[0].id);\n          return updatedConversations;\n        });\n        break;\n      default:\n        break;\n    }\n    setMenuAnchor(null);\n  }, [currentConversationId, handleNewConversation, updateConversationMessages]);\n\n  // Add ThinkingIndicator component\n  const ThinkingIndicator = memo(({ isThinking, onStop }) => (\n    isThinking ? (\n      <Message align=\"left\">\n        <MessageContent \n          align=\"left\" \n          sx={{ \n            backgroundColor: 'rgba(0, 0, 0, 0.2)',\n            minWidth: '200px',\n            width: 'fit-content',\n            maxWidth: '70%',\n            position: 'relative',\n            padding: '12px 16px'\n          }}\n        >\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 1\n          }}>\n            <CircularProgress size={16} />\n            <Typography>Thinking...</Typography>\n            <IconButton \n              size=\"small\" \n              onClick={onStop}\n              sx={{ \n                ml: 'auto',\n                bgcolor: 'error.main',\n                color: 'error.contrastText',\n                '&:hover': {\n                  bgcolor: 'error.dark',\n                },\n                width: 24,\n                height: 24,\n              }}\n            >\n              <StopIcon sx={{ fontSize: 16 }} />\n            </IconButton>\n          </Box>\n        </MessageContent>\n      </Message>\n    ) : null\n  ));\n\n  return (\n    <StyledPaper elevation={3}>\n      <ChatHeader>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Tooltip title={selectedModel ? (models.find(m => m.id === selectedModel)?.name || 'Select a model') : 'Select a model'}>\n            <Avatar sx={{ \n              bgcolor: selectedModel ? \n                getModelColor(models.find(m => m.id === selectedModel)?.name || '') :\n                'primary.main',\n              transition: 'all 0.3s ease',\n              fontWeight: 600,\n              width: 40,\n              height: 40,\n              cursor: 'help',\n              '& img': {\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover',\n              }\n            }}>\n              {selectedModel ? (\n                (() => {\n                  const modelName = models.find(m => m.id === selectedModel)?.name || '';\n                  const imagePath = getModelImage(modelName);\n                  return imagePath ? (\n                    <img \n                      src={imagePath} \n                      alt={modelName}\n                      style={{\n                        width: '100%',\n                        height: '100%',\n                        objectFit: 'cover',\n                      }}\n                    />\n                  ) : (\n                    getModelLetter(modelName)\n                  );\n                })()\n              ) : 'A'}\n            </Avatar>\n          </Tooltip>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            {models.length > 0 ? (\n              <ModelSelector size=\"small\" sx={{ minWidth: 200 }}>\n                <Select\n                  value={selectedModel || ''}\n                  onChange={(e) => handleModelChange(e.target.value)}\n                  variant=\"standard\"\n                  displayEmpty\n                >\n                  {models.map((model) => (\n                    <MenuItem \n                      key={model.id} \n                      value={model.id}\n                      sx={{ \n                        color: loadedModels.has(model.id) ? '#2e7d32' : '#ed6c02',\n                        fontWeight: loadedModels.has(model.id) ? 600 : 400,\n                        '&:hover': {\n                          backgroundColor: loadedModels.has(model.id) \n                            ? 'rgba(46, 125, 50, 0.08)'  // Green hover\n                            : 'rgba(237, 108, 2, 0.08)'  // Orange hover\n                        }\n                      }}\n                    >\n                      {loadedModels.has(model.id) ? '● ' : '○ '}\n                      {model.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </ModelSelector>\n            ) : (\n              <Typography variant=\"caption\" color=\"error\">\n                No AI models available\n              </Typography>\n            )}\n          </Box>\n        </Box>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Tooltip title={brainstormEnabled ? \"AI Brainstorm Active\" : \"Enable AI Brainstorm\\nRight-click to set iterations\"}>\n            <IconButton \n              onClick={handleBrainstormToggle}\n              onContextMenu={handleBrainstormContextMenu}\n              color={brainstormEnabled ? \"primary\" : \"default\"}\n              sx={{\n                position: 'relative',\n                '&::after': brainstormEnabled ? {\n                  content: '\"\"',\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  width: '120%',\n                  height: '120%',\n                  borderRadius: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  animation: 'pulse 2s infinite',\n                  backgroundColor: 'primary.main',\n                  opacity: 0.2,\n                } : {},\n                '@keyframes pulse': {\n                  '0%': {\n                    transform: 'translate(-50%, -50%) scale(0.95)',\n                    opacity: 0.5,\n                  },\n                  '70%': {\n                    transform: 'translate(-50%, -50%) scale(1.1)',\n                    opacity: 0.2,\n                  },\n                  '100%': {\n                    transform: 'translate(-50%, -50%) scale(0.95)',\n                    opacity: 0.5,\n                  },\n                },\n              }}\n            >\n              <BrainstormIcon />\n            </IconButton>\n          </Tooltip>\n          <IconButton \n            onClick={handleNewConversation}\n            title=\"New Conversation\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\n            <MoreIcon />\n          </IconButton>\n        </Box>\n      </ChatHeader>\n\n      <MessageList\n        ref={messageListRef}\n        onScroll={(e) => {\n          if (isScrolledToBottom()) {\n            setUserHasScrolled(false);\n          }\n        }}\n      >\n        {currentConversation?.messages?.map((msg, index) => (\n          <MessageComponent\n            key={`${msg.timestamp}-${index}-${msg.content.substring(0, 20)}`}\n            message={msg}\n            align={msg.role === 'user' ? 'right' : 'left'}\n          />\n        ))}\n        {streamingResponse && (\n          <MessageComponent\n            message={{\n              content: streamingResponse,\n              timestamp: new Date().toISOString(),\n              role: 'assistant'\n            }}\n            align=\"left\"\n          />\n        )}\n        {isThinking && (\n          <ThinkingIndicator \n            isThinking={isThinking} \n            onStop={handleStopResponse}\n          />\n        )}\n        <div ref={messagesEndRef} />\n      </MessageList>\n\n      <ChatFooter>\n        <InputContainer\n          onDragOver={(e) => {\n            e.preventDefault();\n            e.currentTarget.style.backgroundColor = 'rgba(25, 118, 210, 0.1)';\n            e.dataTransfer.dropEffect = 'copy';\n          }}\n          onDragLeave={(e) => {\n            e.preventDefault();\n            e.currentTarget.style.backgroundColor = '';\n          }}\n          onDrop={(e) => {\n            e.preventDefault();\n            e.currentTarget.style.backgroundColor = '';\n            const text = e.dataTransfer.getData('text/plain');\n            if (text) {\n              setInputValue(prev => {\n                const textarea = document.querySelector('textarea');\n                const cursorPosition = textarea?.selectionStart || prev.length;\n                return prev.slice(0, cursorPosition) + text + prev.slice(cursorPosition);\n              });\n              // Focus and scroll to end\n              const textarea = document.querySelector('textarea');\n              if (textarea) {\n                textarea.focus();\n                textarea.scrollTop = textarea.scrollHeight;\n              }\n            }\n          }}\n          sx={{\n            transition: 'all 0.2s ease',\n            '&:hover': {\n              '&[data-dragging=\"true\"]': {\n                backgroundColor: 'rgba(25, 118, 210, 0.1)',\n              }\n            }\n          }}\n        >\n          <IconButton \n            size=\"small\" \n            onClick={(e) => setEmojiAnchor(e.currentTarget)}\n          >\n            <EmojiIcon />\n          </IconButton>\n          <Popover\n            open={Boolean(emojiAnchor)}\n            anchorEl={emojiAnchor}\n            onClose={() => setEmojiAnchor(null)}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            <Box sx={{ \n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n              }\n            }}>\n              <EmojiPicker\n                onEmojiClick={handleEmojiClick}\n                autoFocusSearch={false}\n                theme=\"dark\"\n                searchPlaceHolder=\"Search emojis...\"\n                width={320}\n                height={400}\n                previewConfig={{\n                  showPreview: false\n                }}\n              />\n            </Box>\n          </Popover>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleFileUpload}\n            accept=\"image/*,.pdf,.txt,.doc,.docx\"\n          />\n          <Tooltip title={\n            !selectedModel ? \"Please select a model first\" :\n            !supportsFileUpload() ? \"This model doesn't support file uploads\" :\n            \"Upload a file\"\n          }>\n            <span>\n              <IconButton \n                size=\"small\"\n                disabled={!supportsFileUpload()}\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <ImageIcon sx={{ \n                  color: theme => !supportsFileUpload() ? \n                    theme.palette.action.disabled : \n                    'inherit'\n                }} />\n              </IconButton>\n            </span>\n          </Tooltip>\n          <TextField\n            fullWidth\n            multiline\n            maxRows={4}\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            variant=\"standard\"\n            InputProps={{\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => handleSendMessage()}\n                    disabled={!inputValue.trim() || !selectedModel}\n                    color=\"primary\"\n                  >\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </InputContainer>\n        {uploadError && (\n          <Typography \n            variant=\"caption\" \n            color=\"error\" \n            sx={{ mt: 1, display: 'block' }}\n            onClick={() => setUploadError('')}\n          >\n            {uploadError}\n          </Typography>\n        )}\n      </ChatFooter>\n\n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={() => setMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => handleMenuAction('new')}>\n          New Conversation\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('clear')}>\n          Clear Current Conversation\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('delete')}>\n          Delete Current Conversation\n        </MenuItem>\n        <MenuItem onClick={handleDownloadBrainstorm}>\n          Download Conversation\n        </MenuItem>\n        <MenuItem onClick={() => setHealthChecksEnabled(prev => !prev)}>\n          {healthChecksEnabled ? '✓ ' : ''} Health Checks Enabled\n        </MenuItem>\n        <Divider />\n        <MenuItem \n          onClick={() => handleModelAction('refresh')}\n          disabled={!selectedModel || isModelSwitching}\n        >\n          Refresh Current Model\n        </MenuItem>\n      </Menu>\n\n      <ConversationHeader>\n        <ConversationName>\n          {isEditingName ? (\n            <EditableTitle>\n              <input\n                value={editedName}\n                onChange={(e) => setEditedName(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleSaveName()}\n                autoFocus\n              />\n              <IconButton size=\"small\" onClick={handleSaveName}>\n                <CheckIcon fontSize=\"small\" />\n              </IconButton>\n              <IconButton size=\"small\" onClick={handleCancelEdit}>\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </EditableTitle>\n          ) : (\n            <>\n              <Typography variant=\"h6\" component=\"div\">\n                {currentConversation.name}\n              </Typography>\n              <IconButton size=\"small\" onClick={handleEditName}>\n                <EditIcon fontSize=\"small\" />\n              </IconButton>\n              <Box className=\"timestamp-group\">\n                <Typography className=\"timestamp\" component=\"span\">\n                  {new Date(currentConversation.timestamp).toLocaleString()}\n                </Typography>\n                <Button\n                  startIcon={<AddIcon />}\n                  onClick={handleNewConversation}\n                  size=\"small\"\n                >\n                  New Chat\n                </Button>\n                <Select\n                  value={currentConversationId}\n                  onChange={(e) => setCurrentConversationId(e.target.value)}\n                  size=\"small\"\n                  sx={{ minWidth: 120 }}\n                >\n                  {conversations.map(conv => (\n                    <MenuItem key={conv.id} value={conv.id}>\n                      {conv.name} - {new Date(conv.timestamp).toLocaleDateString()}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </Box>\n            </>\n          )}\n        </ConversationName>\n      </ConversationHeader>\n\n      <Menu\n        anchorEl={brainstormMenuAnchor}\n        open={Boolean(brainstormMenuAnchor)}\n        onClose={() => setBrainstormMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => handleBrainstormIterationChange(-1)}>\n          Infinite Iterations\n        </MenuItem>\n        {[1, 2, 3, 5, 10].map(count => (\n          <MenuItem \n            key={count}\n            onClick={() => handleBrainstormIterationChange(count)}\n          >\n            {count} Iteration{count > 1 ? 's' : ''}\n          </MenuItem>\n        ))}\n      </Menu>\n    </StyledPaper>\n  );\n}\n\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}