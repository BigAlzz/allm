{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Box, Paper, TextField, IconButton, Typography, Avatar, Menu, MenuItem, Select, FormControl, CircularProgress, InputAdornment, Popover, Tooltip, ClickAwayListener } from '@mui/material';\nimport { Send as SendIcon, MoreVert as MoreIcon, VideoCall as VideoIcon, OpenInFull as ExpandIcon, Image as ImageIcon, EmojiEmotions as EmojiIcon, Stop as StopIcon, Add as AddIcon, NoteAdd as NoteAddIcon } from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst ChatHeader = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\n_c2 = ChatHeader;\nconst MessageList = styled(Box)(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px'\n  }\n}));\n_c3 = MessageList;\nconst Message = styled(Box)(({\n  theme,\n  align\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2)\n}));\n_c4 = Message;\nconst MessageContent = styled(Box)(({\n  theme,\n  align\n}) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0)\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5)\n  }\n}));\n_c5 = MessageContent;\nconst ChatFooter = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper\n}));\n_c6 = ChatFooter;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1)\n}));\n_c7 = InputContainer;\nconst ErrorMessage = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2)\n}));\n_c8 = ErrorMessage;\nconst ModelSelector = styled(FormControl)(({\n  theme\n}) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent'\n  }\n}));\n_c9 = ModelSelector;\nconst ConversationSelector = styled(FormControl)(({\n  theme\n}) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem'\n  }\n}));\n_c10 = ConversationSelector;\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl\n}) {\n  _s2();\n  var _s = $RefreshSig$(),\n    _models$find,\n    _models$find2;\n  // Move startNewConversation definition before any hooks that use it\n  const startNewConversation = useCallback(() => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Conversation',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n  }, []); // Empty dependency array since it only uses setState functions\n\n  // Initialize state with timestamp-based ID\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    const initialId = Date.now().toString();\n    return saved ? JSON.parse(saved) : [{\n      id: initialId,\n      name: 'New Conversation',\n      messages: [],\n      timestamp: new Date().toISOString()\n    }];\n  });\n  const [currentConversationId, setCurrentConversationId] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    if (saved) {\n      var _parsedConversations$;\n      const parsedConversations = JSON.parse(saved);\n      return ((_parsedConversations$ = parsedConversations[0]) === null || _parsedConversations$ === void 0 ? void 0 : _parsedConversations$.id) || Date.now().toString();\n    }\n    return Date.now().toString();\n  });\n\n  // Remove separate messages state and use conversation messages directly\n  const currentConversation = useMemo(() => conversations.find(c => c.id === currentConversationId) || conversations[0], [conversations, currentConversationId]);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  // Add health check state\n  const [lastHealthCheck, setLastHealthCheck] = useState(() => {\n    return parseInt(localStorage.getItem('lastHealthCheck') || '0');\n  });\n\n  // Add unloadModel function\n  const unloadModel = useCallback(async modelId => {\n    if (!modelId) return;\n    try {\n      await fetch(`${serverUrl}/v1/model/unload`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: modelId\n        })\n      });\n    } catch (error) {\n      console.warn('Failed to unload model:', error);\n    }\n  }, [serverUrl]);\n\n  // Update model selection to unload previous model\n  const handleModelChange = useCallback(async newModelId => {\n    if (selectedModel && selectedModel !== newModelId) {\n      // Unload the previously selected model\n      await unloadModel(selectedModel);\n    }\n    setSelectedModel(newModelId);\n  }, [selectedModel, unloadModel]);\n\n  // Update model loading logic to be more efficient\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      // Only set model if found, don't trigger unnecessary model loads\n      if (preferredModel) {\n        handleModelChange(preferredModel.id);\n      }\n    }\n  }, [models, selectedModel, handleModelChange]);\n\n  // Modify health check to use a lightweight endpoint\n  const checkServerHealth = useCallback(async headers => {\n    const now = Date.now();\n    const healthCheckInterval = 60000;\n    if (now - lastHealthCheck > healthCheckInterval) {\n      try {\n        // Use basic health check endpoint that doesn't load models\n        const healthCheck = await fetch(`${serverUrl}/health`, {\n          method: 'HEAD',\n          // Use HEAD request instead of GET\n          headers,\n          signal: AbortSignal.timeout(5000),\n          cache: 'no-store'\n        });\n        if (!healthCheck.ok) {\n          throw new Error('Server is not responding properly');\n        }\n        setLastHealthCheck(now);\n        localStorage.setItem('lastHealthCheck', now.toString());\n      } catch (healthError) {\n        if (healthError.name !== 'AbortError') {\n          throw new Error('Cannot connect to server. Please check your connection.');\n        }\n      }\n    }\n  }, [serverUrl, lastHealthCheck]);\n\n  // Update conversation messages\n  const updateConversationMessages = useCallback(newMessages => {\n    setConversations(prev => prev.map(conv => conv.id === currentConversationId ? {\n      ...conv,\n      messages: newMessages\n    } : conv));\n  }, [currentConversationId]);\n\n  // Move cleanupConversation before handleConversationChange\n  const cleanupConversation = useCallback(conversationId => {\n    // Abort any ongoing requests\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n\n    // Clear streaming responses\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n\n    // Clear thinking state\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n\n    // Clear response buffer\n    responseBuffer.current = '';\n\n    // Clear any pending timeouts\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n      updateTimeoutRef.current = null;\n    }\n  }, [position, setStreamingResponses, setThinking]);\n\n  // Handle conversation switch\n  const handleConversationChange = useCallback(newId => {\n    if (!conversations.some(conv => conv.id === newId)) {\n      var _conversations$;\n      console.warn('Invalid conversation ID, selecting first available conversation');\n      newId = ((_conversations$ = conversations[0]) === null || _conversations$ === void 0 ? void 0 : _conversations$.id) || Date.now().toString();\n    }\n\n    // Clean up the current conversation before switching\n    cleanupConversation(currentConversationId);\n    setCurrentConversationId(newId);\n  }, [conversations, currentConversationId, cleanupConversation]);\n\n  // Optimize streaming updates\n  const updateStreamingResponse = useCallback(newContent => {\n    responseBuffer.current = newContent;\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 1500); // 1.5 second debounce\n  }, [position, setStreamingResponses]);\n\n  // Update handleSendMessage to include model management options\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || !selectedModel) return;\n\n    // Reset states before starting new message\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n    responseBuffer.current = '';\n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user'\n    };\n\n    // Update conversation with new message\n    const updatedMessages = [...currentConversation.messages, newMessage];\n    updateConversationMessages(updatedMessages);\n    setInputValue('');\n\n    // Set thinking state after message is added\n    setThinking(prev => ({\n      ...prev,\n      [position]: true\n    }));\n    try {\n      abortControllerRef.current = new AbortController();\n      const timeoutId = setTimeout(() => {\n        if (abortControllerRef.current) {\n          abortControllerRef.current.abort();\n        }\n      }, 180000);\n      const headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Keep-Alive': 'timeout=180',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      };\n\n      // Only check basic server health\n      await checkServerHealth(headers);\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        signal: abortControllerRef.current.signal,\n        headers,\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: updatedMessages.map(msg => ({\n            role: msg.role === 'error' ? 'assistant' : msg.role,\n            content: msg.content\n          })),\n          stream: true,\n          temperature: 0.7,\n          max_tokens: 2000,\n          options: {\n            load_model_only_when_needed: true,\n            unload_model_after_completion: true,\n            skip_embedding_model: true,\n            unload_other_models: true // Add option to unload other models\n          }\n        }),\n        cache: 'no-store'\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\n      }\n      if (!response.body) {\n        throw new Error('Server response has no body');\n      }\n      const reader = response.body.getReader();\n      responseBuffer.current = '';\n      try {\n        const responseText = await processStreamingResponse(reader);\n        if (responseText) {\n          const updatedMessagesWithResponse = [...updatedMessages, {\n            content: responseText,\n            timestamp: new Date().toISOString(),\n            role: 'assistant'\n          }];\n          updateConversationMessages(updatedMessagesWithResponse);\n        }\n      } finally {\n        if (updateTimeoutRef.current) {\n          clearTimeout(updateTimeoutRef.current);\n          updateTimeoutRef.current = null;\n        }\n        setStreamingResponses(prev => ({\n          ...prev,\n          [position]: ''\n        }));\n        setThinking(prev => ({\n          ...prev,\n          [position]: false\n        }));\n        responseBuffer.current = '';\n        abortControllerRef.current = null;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'Unable to get response from LM Studio. ';\n      try {\n        var _errorData$error;\n        // Try to parse the error response\n        const errorData = error.message.includes('{') ? JSON.parse(error.message.substring(error.message.indexOf('{'))) : null;\n        if (errorData !== null && errorData !== void 0 && (_errorData$error = errorData.error) !== null && _errorData$error !== void 0 && _errorData$error.message) {\n          if (errorData.error.message.includes('Failed to load model')) {\n            errorMessage = `Model loading failed. Please ensure:\\n` + `1. The model file exists and is not corrupted\\n` + `2. You have sufficient RAM available\\n` + `3. Try restarting LM Studio\\n\\n` + `Technical details: ${errorData.error.message}`;\n          } else {\n            errorMessage += errorData.error.message;\n          }\n        } else if (error.name === 'AbortError') {\n          errorMessage += 'Request timed out. The model might be too slow or not responding.';\n        } else if (error.message === 'Failed to fetch') {\n          errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct\\n4. Your internet connection is stable`;\n        } else {\n          errorMessage += error.message;\n        }\n      } catch (parseError) {\n        // If we can't parse the error, just use the original error message\n        errorMessage += error.message;\n      }\n      updateConversationMessages([...updatedMessages, {\n        content: errorMessage,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n  useEffect(() => {\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n  }, [currentConversationId, position, setStreamingResponses]);\n  const handleClearChat = useCallback(() => {\n    updateConversationMessages([]); // Clear messages in current conversation\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  }, [position, setStreamingResponses, setThinking, updateConversationMessages]);\n  const handleMenuAction = useCallback(action => {\n    switch (action) {\n      case 'new':\n        startNewConversation();\n        break;\n      case 'clear':\n        handleClearChat();\n        break;\n      case 'delete':\n        // Clean up the conversation before deleting\n        cleanupConversation(currentConversationId);\n        setConversations(prev => {\n          const updatedConversations = prev.filter(conv => conv.id !== currentConversationId);\n          if (updatedConversations.length === 0) {\n            const newId = Date.now().toString();\n            const newConversation = {\n              id: newId,\n              name: 'New Conversation',\n              messages: [],\n              timestamp: new Date().toISOString()\n            };\n            return [newConversation];\n          }\n          // Switch to the first conversation in the list\n          setCurrentConversationId(updatedConversations[0].id);\n          return updatedConversations;\n        });\n        break;\n      default:\n        break;\n    }\n    setMenuAnchor(null);\n  }, [currentConversationId, handleClearChat, startNewConversation, cleanupConversation]);\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: ''\n      }));\n    }\n  };\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n\n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 ? firstMessage.content.substring(0, 30) + '...' : firstMessage.content;\n    setConversations(prev => prev.map(conv => conv.id === id ? {\n      ...conv,\n      name\n    } : conv));\n  };\n\n  // Batch updates for message list scrolling with longer delay\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  // Add rate limiting for streaming updates\n  const processStreamingChunk = useCallback(chunk => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n      try {\n        var _data$choices$, _data$choices$$delta;\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n        if (data.choices && (_data$choices$ = data.choices[0]) !== null && _data$choices$ !== void 0 && (_data$choices$$delta = _data$choices$.delta) !== null && _data$choices$$delta !== void 0 && _data$choices$$delta.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n    return accumulatedContent;\n  }, []);\n\n  // Clean up timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const processStreamingResponse = async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = '';\n    let lastUpdateTime = Date.now();\n    const updateInterval = 1500; // Update every 1.5 seconds\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        responseText += newContent;\n        accumulatedContent += newContent;\n\n        // Only update UI if enough time has passed\n        if (Date.now() - lastUpdateTime >= updateInterval) {\n          updateStreamingResponse(accumulatedContent);\n          accumulatedContent = '';\n          lastUpdateTime = Date.now();\n        }\n      }\n\n      // Final update for any remaining content\n      if (accumulatedContent) {\n        updateStreamingResponse(accumulatedContent);\n      }\n      return responseText;\n    } catch (error) {\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  };\n  const handleEmojiClick = emojiData => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = inputValue.slice(0, cursorPosition) + emoji + inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n      setThinking(prev => ({\n        ...prev,\n        [position]: true\n      }));\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n      const data = await response.json();\n\n      // Add file message to chat\n      updateConversationMessages([...currentConversation.messages, {\n        content: `📎 Uploaded file: ${file.name}`,\n        timestamp: new Date().toISOString(),\n        role: 'user',\n        fileId: data.id\n      }]);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      updateConversationMessages([...currentConversation.messages, {\n        content: `Failed to upload file: ${error.message}`,\n        timestamp: new Date().toISOString(),\n        role: 'error'\n      }]);\n    } finally {\n      setThinking(prev => ({\n        ...prev,\n        [position]: false\n      }));\n    }\n  };\n  const supportsFileUpload = () => {\n    var _currentModel$name, _currentModel$capabil;\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$name = currentModel.name) === null || _currentModel$name === void 0 ? void 0 : _currentModel$name.toLowerCase()) || '';\n\n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return (currentModel === null || currentModel === void 0 ? void 0 : (_currentModel$capabil = currentModel.capabilities) === null || _currentModel$capabil === void 0 ? void 0 : _currentModel$capabil.includes('file_upload')) || false;\n  };\n  const getModelLetter = modelName => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    if (name.includes('hermes')) return 'H';\n    return modelName.charAt(0).toUpperCase();\n  };\n  const getModelColor = modelName => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    if (name.includes('hermes')) return '#00BFA5'; // Teal for Hermes\n    return '#757575'; // Grey for unknown models\n  };\n  const getModelImage = modelName => {\n    if (!modelName) return null;\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return './Images/Deepseek.png';\n    if (name.includes('qwen')) return './Images/Qwen2.png';\n    if (name.includes('starcoder')) return './Images/StarCoder.jpg';\n    if (name.includes('gemma')) return './Images/Gemma.png';\n    if (name.includes('hermes')) return './Images/Hermes.jpg';\n    return null;\n  };\n\n  // Update MessageComponent to include menu\n  const MessageComponent = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_s(({\n    message,\n    align\n  }) => {\n    _s();\n    const [menuAnchor, setMenuAnchor] = useState(null);\n    const [isDragging, setIsDragging] = useState(false);\n    const handleMessageClick = event => {\n      if (!isDragging) {\n        // Only show menu if not dragging\n        event.preventDefault();\n        setMenuAnchor(event.currentTarget);\n      }\n    };\n    const handleDragStart = e => {\n      setIsDragging(true);\n      e.dataTransfer.setData('text/plain', message.content);\n      e.dataTransfer.effectAllowed = 'copy';\n      // Add a class to style the dragged element\n      e.currentTarget.classList.add('dragging');\n    };\n    const handleDragEnd = e => {\n      setIsDragging(false);\n      // Remove the dragging class\n      e.currentTarget.classList.remove('dragging');\n      // Reset after a short delay to allow click events if no drag occurred\n      setTimeout(() => setIsDragging(false), 100);\n    };\n    const handleAddToNotebook = () => {\n      const event = new CustomEvent('addToNotebook', {\n        detail: {\n          content: message.content,\n          timestamp: message.timestamp,\n          role: message.role\n        }\n      });\n      window.dispatchEvent(event);\n      setMenuAnchor(null);\n    };\n    return /*#__PURE__*/_jsxDEV(Message, {\n      align: align,\n      draggable: true,\n      onDragStart: handleDragStart,\n      onDragEnd: handleDragEnd,\n      onClick: handleMessageClick,\n      sx: {\n        cursor: isDragging ? 'grabbing' : 'grab',\n        '&:hover': {\n          '& .message-content': {\n            boxShadow: 2\n          }\n        },\n        '&.dragging .message-content': {\n          opacity: 0.7,\n          boxShadow: 4\n        }\n      },\n      children: [message.role === 'error' ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 16,\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n          align: align,\n          className: \"message-content\",\n          sx: {\n            transition: 'all 0.2s ease'\n          },\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"textSecondary\",\n          sx: {\n            mt: 0.5,\n            opacity: 0.7,\n            fontSize: '0.7rem'\n          },\n          children: new Date(message.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: menuAnchor,\n        open: Boolean(menuAnchor),\n        onClose: () => setMenuAnchor(null),\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: align === 'right' ? 'right' : 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: align === 'right' ? 'right' : 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: handleAddToNotebook,\n          children: [/*#__PURE__*/_jsxDEV(NoteAddIcon, {\n            sx: {\n              mr: 1,\n              fontSize: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this), \"Add to Notebook\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 7\n    }, this);\n  }, \"ndg/5fElBO7NEv9vuDyOL/b5Bkg=\")), \"ndg/5fElBO7NEv9vuDyOL/b5Bkg=\");\n\n  // Memoize streaming response component\n  const StreamingResponseComponent = /*#__PURE__*/React.memo(({\n    content\n  }) => content ? /*#__PURE__*/_jsxDEV(Message, {\n    align: \"left\",\n    children: /*#__PURE__*/_jsxDEV(MessageContent, {\n      align: \"left\",\n      sx: {\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        // Slightly darker background to distinguish from final responses\n        minWidth: '200px',\n        width: 'fit-content',\n        maxWidth: '70%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 909,\n    columnNumber: 7\n  }, this) : null);\n\n  // Update ThinkingIndicator to be more precise\n  const ThinkingIndicator = /*#__PURE__*/React.memo(({\n    isThinking,\n    onStop\n  }) => isThinking && !streamingResponse && !currentConversation.messages.find(m => m.role === 'error') ? /*#__PURE__*/_jsxDEV(Message, {\n    align: \"left\",\n    children: /*#__PURE__*/_jsxDEV(MessageContent, {\n      align: \"left\",\n      sx: {\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        minWidth: '200px',\n        width: 'fit-content',\n        maxWidth: '70%',\n        position: 'relative',\n        padding: '12px 16px',\n        '& pre': {\n          margin: 0,\n          padding: 0,\n          backgroundColor: 'transparent',\n          fontFamily: 'inherit',\n          whiteSpace: 'pre-wrap',\n          fontSize: '0.875rem'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: \"<think>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            marginLeft: '8px'\n          },\n          children: \"Processing request and generating response...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: \"</think>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            mt: 1,\n            pt: 1,\n            borderTop: '1px solid rgba(255, 255, 255, 0.1)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: onStop,\n            sx: {\n              ml: 'auto',\n              bgcolor: 'error.main',\n              color: 'error.contrastText',\n              '&:hover': {\n                bgcolor: 'error.dark'\n              },\n              width: 24,\n              height: 24\n            },\n            children: /*#__PURE__*/_jsxDEV(StopIcon, {\n              sx: {\n                fontSize: 16\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 932,\n    columnNumber: 7\n  }, this) : null);\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: selectedModel ? ((_models$find = models.find(m => m.id === selectedModel)) === null || _models$find === void 0 ? void 0 : _models$find.name) || 'Select a model' : 'Select a model',\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: selectedModel ? getModelColor(((_models$find2 = models.find(m => m.id === selectedModel)) === null || _models$find2 === void 0 ? void 0 : _models$find2.name) || '') : 'primary.main',\n              transition: 'all 0.3s ease',\n              fontWeight: 600,\n              width: 40,\n              height: 40,\n              cursor: 'help',\n              '& img': {\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover'\n              }\n            },\n            children: selectedModel ? (_models$find3 => {\n              const modelName = ((_models$find3 = models.find(m => m.id === selectedModel)) === null || _models$find3 === void 0 ? void 0 : _models$find3.name) || '';\n              const imagePath = getModelImage(modelName);\n              return imagePath ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePath,\n                alt: modelName,\n                style: {\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 21\n              }, this) : getModelLetter(modelName);\n            })() : 'A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ConversationSelector, {\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: currentConversationId,\n              onChange: e => handleConversationChange(e.target.value),\n              variant: \"standard\",\n              sx: {\n                fontSize: '0.875rem'\n              },\n              children: conversations.map(conv => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: conv.id,\n                children: conv.name || 'New Conversation'\n              }, conv.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1045,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 13\n          }, this), models.length > 0 ? /*#__PURE__*/_jsxDEV(ModelSelector, {\n            size: \"small\",\n            sx: {\n              minWidth: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedModel || '',\n              onChange: e => handleModelChange(e.target.value),\n              variant: \"standard\",\n              displayEmpty: true,\n              children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: model.id,\n                children: model.name\n              }, model.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1060,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"error\",\n            children: \"No AI models available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: startNewConversation,\n          title: \"New Conversation\",\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: e => setMenuAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(MoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      children: [currentConversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageComponent, {\n        message: msg,\n        align: msg.role === 'user' ? 'right' : 'left'\n      }, `${msg.timestamp}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(StreamingResponseComponent, {\n        content: streamingResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThinkingIndicator, {\n        isThinking: isThinking,\n        onStop: handleStopResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1086,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        onDragOver: e => {\n          e.preventDefault();\n          e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';\n        },\n        onDragLeave: e => {\n          e.preventDefault();\n          e.currentTarget.style.backgroundColor = '';\n        },\n        onDrop: e => {\n          e.preventDefault();\n          e.currentTarget.style.backgroundColor = '';\n          const text = e.dataTransfer.getData('text/plain');\n          setInputValue(prev => {\n            var _document$querySelect;\n            const cursorPosition = ((_document$querySelect = document.querySelector('textarea')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.selectionStart) || prev.length;\n            return prev.slice(0, cursorPosition) + text + prev.slice(cursorPosition);\n          });\n        },\n        sx: {\n          transition: 'background-color 0.2s ease',\n          '&:hover': {\n            '&[data-dragging=\"true\"]': {\n              backgroundColor: 'rgba(255, 255, 255, 0.1)'\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: e => setEmojiAnchor(e.currentTarget),\n          children: /*#__PURE__*/_jsxDEV(EmojiIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: Boolean(emojiAnchor),\n          anchorEl: emojiAnchor,\n          onClose: () => setEmojiAnchor(null),\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n              onEmojiClick: handleEmojiClick,\n              autoFocusSearch: false,\n              theme: \"dark\",\n              searchPlaceHolder: \"Search emojis...\",\n              width: 320,\n              height: 400,\n              previewConfig: {\n                showPreview: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileUpload,\n          accept: \"image/*,.pdf,.txt,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: !selectedModel ? \"Please select a model first\" : !supportsFileUpload() ? \"This model doesn't support file uploads\" : \"Upload a file\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              disabled: !supportsFileUpload(),\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              children: /*#__PURE__*/_jsxDEV(ImageIcon, {\n                sx: {\n                  color: theme => !supportsFileUpload() ? theme.palette.action.disabled : 'inherit'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 4,\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\",\n          variant: \"standard\",\n          InputProps: {\n            disableUnderline: true,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleSendMessage,\n                disabled: !inputValue.trim() || !selectedModel,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1215,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 9\n      }, this), uploadError && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"error\",\n        sx: {\n          mt: 1,\n          display: 'block'\n        },\n        onClick: () => setUploadError(''),\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: menuAnchor,\n      open: Boolean(menuAnchor),\n      onClose: () => setMenuAnchor(null),\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('new'),\n        children: \"New Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('clear'),\n        children: \"Clear Current Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: () => handleMenuAction('delete'),\n        children: \"Delete Current Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 996,\n    columnNumber: 5\n  }, this);\n}\n_s2(ChatWindow, \"MsQxp27mXTAeUOjmYgS6YvmOJ2g=\");\n_c11 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"ChatHeader\");\n$RefreshReg$(_c3, \"MessageList\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"MessageContent\");\n$RefreshReg$(_c6, \"ChatFooter\");\n$RefreshReg$(_c7, \"InputContainer\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"ModelSelector\");\n$RefreshReg$(_c10, \"ConversationSelector\");\n$RefreshReg$(_c11, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","Box","Paper","TextField","IconButton","Typography","Avatar","Menu","MenuItem","Select","FormControl","CircularProgress","InputAdornment","Popover","Tooltip","ClickAwayListener","Send","SendIcon","MoreVert","MoreIcon","VideoCall","VideoIcon","OpenInFull","ExpandIcon","Image","ImageIcon","EmojiEmotions","EmojiIcon","Stop","StopIcon","Add","AddIcon","NoteAdd","NoteAddIcon","ReactMarkdown","styled","EmojiPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","display","flexDirection","height","flex","overflow","backgroundColor","palette","background","paper","borderRadius","spacing","_c","ChatHeader","padding","alignItems","justifyContent","borderBottom","divider","_c2","MessageList","flexGrow","default","width","grey","_c3","Message","align","marginBottom","_c4","MessageContent","maxWidth","primary","main","color","contrastText","text","boxShadow","shadows","margin","fontFamily","_c5","ChatFooter","borderTop","_c6","InputContainer","gap","_c7","ErrorMessage","error","dark","_c8","ModelSelector","paddingBottom","borderBottomColor","_c9","ConversationSelector","minWidth","fontSize","_c10","ChatWindow","position","models","streamingResponse","isThinking","setStreamingResponses","setThinking","serverUrl","_s2","_s","$RefreshSig$","_models$find","_models$find2","startNewConversation","newId","Date","now","toString","newConversation","id","name","messages","timestamp","toISOString","setConversations","prev","setCurrentConversationId","conversations","saved","localStorage","getItem","initialId","JSON","parse","currentConversationId","_parsedConversations$","parsedConversations","currentConversation","find","c","inputValue","setInputValue","selectedModel","setSelectedModel","menuAnchor","setMenuAnchor","emojiAnchor","setEmojiAnchor","uploadError","setUploadError","fileInputRef","messagesEndRef","abortControllerRef","responseBuffer","updateTimeoutRef","lastHealthCheck","setLastHealthCheck","parseInt","unloadModel","modelId","fetch","method","headers","body","stringify","model","console","warn","handleModelChange","newModelId","length","preferredModel","m","toLowerCase","includes","checkServerHealth","healthCheckInterval","healthCheck","signal","AbortSignal","timeout","cache","ok","Error","setItem","healthError","updateConversationMessages","newMessages","map","conv","cleanupConversation","conversationId","current","abort","clearTimeout","handleConversationChange","some","_conversations$","updateStreamingResponse","newContent","setTimeout","handleSendMessage","trim","newMessage","content","role","updatedMessages","AbortController","timeoutId","response","msg","stream","temperature","max_tokens","options","load_model_only_when_needed","unload_model_after_completion","skip_embedding_model","unload_other_models","errorText","status","reader","getReader","responseText","processStreamingResponse","updatedMessagesWithResponse","errorMessage","_errorData$error","errorData","message","substring","indexOf","parseError","scrollToBottom","scrollIntoView","behavior","scrollTimer","handleClearChat","handleMenuAction","action","updatedConversations","filter","handleStopResponse","updateConversationName","firstMessage","processStreamingChunk","chunk","lines","split","accumulatedContent","line","_data$choices$","_data$choices$$delta","jsonStr","replace","data","choices","delta","e","handleKeyPress","event","key","shiftKey","preventDefault","maxIterations","iterations","lastUpdateTime","updateInterval","done","value","read","TextDecoder","decode","handleEmojiClick","emojiData","emoji","cursorPosition","document","querySelector","selectionStart","updatedText","slice","handleFileUpload","_event$target$files","file","target","files","size","formData","FormData","append","statusText","json","fileId","supportsFileUpload","_currentModel$name","_currentModel$capabil","currentModel","modelName","capabilities","getModelLetter","charAt","toUpperCase","getModelColor","getModelImage","MessageComponent","memo","isDragging","setIsDragging","handleMessageClick","currentTarget","handleDragStart","dataTransfer","setData","effectAllowed","classList","add","handleDragEnd","remove","handleAddToNotebook","CustomEvent","detail","window","dispatchEvent","draggable","onDragStart","onDragEnd","onClick","sx","cursor","opacity","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","className","transition","mt","toLocaleTimeString","anchorEl","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","mr","StreamingResponseComponent","ThinkingIndicator","onStop","whiteSpace","style","marginLeft","pt","ml","bgcolor","elevation","title","fontWeight","objectFit","_models$find3","imagePath","src","alt","onChange","displayEmpty","index","ref","onDragOver","onDragLeave","onDrop","getData","_document$querySelect","border","onEmojiClick","autoFocusSearch","searchPlaceHolder","previewConfig","showPreview","type","accept","disabled","_fileInputRef$current","click","fullWidth","multiline","maxRows","onKeyPress","placeholder","InputProps","disableUnderline","endAdornment","_c11","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport {\n  Box,\n  Paper,\n  TextField,\n  IconButton,\n  Typography,\n  Avatar,\n  Menu,\n  MenuItem,\n  Select,\n  FormControl,\n  CircularProgress,\n  InputAdornment,\n  Popover,\n  Tooltip,\n  ClickAwayListener,\n} from '@mui/material';\nimport {\n  Send as SendIcon,\n  MoreVert as MoreIcon,\n  VideoCall as VideoIcon,\n  OpenInFull as ExpandIcon,\n  Image as ImageIcon,\n  EmojiEmotions as EmojiIcon,\n  Stop as StopIcon,\n  Add as AddIcon,\n  NoteAdd as NoteAddIcon,\n} from '@mui/icons-material';\nimport ReactMarkdown from 'react-markdown';\nimport { styled } from '@mui/material/styles';\nimport EmojiPicker from 'emoji-picker-react';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100%',\n  flex: 1,\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.paper,\n  borderRadius: theme.spacing(3),\n}));\n\nconst ChatHeader = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n}));\n\nconst MessageList = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.default,\n  '&::-webkit-scrollbar': {\n    width: '4px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'transparent',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: theme.palette.grey[600],\n    borderRadius: '4px',\n  },\n}));\n\nconst Message = styled(Box)(({ theme, align }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: align === 'right' ? 'flex-end' : 'flex-start',\n  marginBottom: theme.spacing(2),\n}));\n\nconst MessageContent = styled(Box)(({ theme, align }) => ({\n  maxWidth: '70%',\n  padding: theme.spacing(1.5),\n  borderRadius: theme.spacing(2),\n  backgroundColor: align === 'right' ? theme.palette.primary.main : theme.palette.background.paper,\n  color: align === 'right' ? theme.palette.primary.contrastText : theme.palette.text.primary,\n  boxShadow: theme.shadows[1],\n  '& p': {\n    margin: 0,\n  },\n  '& pre': {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    overflow: 'auto',\n    margin: theme.spacing(1, 0),\n  },\n  '& code': {\n    fontFamily: 'monospace',\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(0.25, 0.5),\n    borderRadius: theme.spacing(0.5),\n  },\n}));\n\nconst ChatFooter = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n}));\n\nconst InputContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  backgroundColor: theme.palette.background.default,\n  borderRadius: theme.spacing(3),\n  padding: theme.spacing(1),\n}));\n\nconst ErrorMessage = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  backgroundColor: theme.palette.error.dark,\n  color: theme.palette.error.contrastText,\n  borderRadius: theme.spacing(1),\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n}));\n\nconst ModelSelector = styled(FormControl)(({ theme }) => ({\n  '& .MuiSelect-select': {\n    paddingBottom: 0,\n  },\n  '& .MuiInput-underline:before': {\n    borderBottomColor: 'transparent',\n  },\n}));\n\nconst ConversationSelector = styled(FormControl)(({ theme }) => ({\n  minWidth: 200,\n  '& .MuiSelect-select': {\n    fontSize: '0.875rem',\n  },\n}));\n\nfunction ChatWindow({\n  position,\n  models,\n  streamingResponse,\n  isThinking,\n  setStreamingResponses,\n  setThinking,\n  serverUrl,\n}) {\n  // Move startNewConversation definition before any hooks that use it\n  const startNewConversation = useCallback(() => {\n    const newId = Date.now().toString();\n    const newConversation = {\n      id: newId,\n      name: 'New Conversation',\n      messages: [],\n      timestamp: new Date().toISOString()\n    };\n    setConversations(prev => [newConversation, ...prev]);\n    setCurrentConversationId(newId);\n  }, []); // Empty dependency array since it only uses setState functions\n\n  // Initialize state with timestamp-based ID\n  const [conversations, setConversations] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    const initialId = Date.now().toString();\n    return saved ? JSON.parse(saved) : [{\n      id: initialId,\n      name: 'New Conversation',\n      messages: [],\n      timestamp: new Date().toISOString()\n    }];\n  });\n\n  const [currentConversationId, setCurrentConversationId] = useState(() => {\n    const saved = localStorage.getItem(`conversations-${position}`);\n    if (saved) {\n      const parsedConversations = JSON.parse(saved);\n      return parsedConversations[0]?.id || Date.now().toString();\n    }\n    return Date.now().toString();\n  });\n\n  // Remove separate messages state and use conversation messages directly\n  const currentConversation = useMemo(() => \n    conversations.find(c => c.id === currentConversationId) || conversations[0],\n    [conversations, currentConversationId]\n  );\n\n  const [inputValue, setInputValue] = useState('');\n  const [selectedModel, setSelectedModel] = useState('');\n  const [menuAnchor, setMenuAnchor] = useState(null);\n  const [emojiAnchor, setEmojiAnchor] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const abortControllerRef = useRef(null);\n  const responseBuffer = useRef('');\n  const updateTimeoutRef = useRef(null);\n\n  // Add health check state\n  const [lastHealthCheck, setLastHealthCheck] = useState(() => {\n    return parseInt(localStorage.getItem('lastHealthCheck') || '0');\n  });\n\n  // Add unloadModel function\n  const unloadModel = useCallback(async (modelId) => {\n    if (!modelId) return;\n    \n    try {\n      await fetch(`${serverUrl}/v1/model/unload`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          model: modelId\n        })\n      });\n    } catch (error) {\n      console.warn('Failed to unload model:', error);\n    }\n  }, [serverUrl]);\n\n  // Update model selection to unload previous model\n  const handleModelChange = useCallback(async (newModelId) => {\n    if (selectedModel && selectedModel !== newModelId) {\n      // Unload the previously selected model\n      await unloadModel(selectedModel);\n    }\n    setSelectedModel(newModelId);\n  }, [selectedModel, unloadModel]);\n\n  // Update model loading logic to be more efficient\n  useEffect(() => {\n    if (models.length > 0 && !selectedModel) {\n      // Try to select deepseek or qwen model by default if available\n      const preferredModel = models.find(m => {\n        const name = m.name.toLowerCase();\n        return name.includes('deepseek') || name.includes('qwen');\n      });\n      // Only set model if found, don't trigger unnecessary model loads\n      if (preferredModel) {\n        handleModelChange(preferredModel.id);\n      }\n    }\n  }, [models, selectedModel, handleModelChange]);\n\n  // Modify health check to use a lightweight endpoint\n  const checkServerHealth = useCallback(async (headers) => {\n    const now = Date.now();\n    const healthCheckInterval = 60000;\n\n    if (now - lastHealthCheck > healthCheckInterval) {\n      try {\n        // Use basic health check endpoint that doesn't load models\n        const healthCheck = await fetch(`${serverUrl}/health`, {\n          method: 'HEAD', // Use HEAD request instead of GET\n          headers,\n          signal: AbortSignal.timeout(5000),\n          cache: 'no-store'\n        });\n        \n        if (!healthCheck.ok) {\n          throw new Error('Server is not responding properly');\n        }\n        \n        setLastHealthCheck(now);\n        localStorage.setItem('lastHealthCheck', now.toString());\n      } catch (healthError) {\n        if (healthError.name !== 'AbortError') {\n          throw new Error('Cannot connect to server. Please check your connection.');\n        }\n      }\n    }\n  }, [serverUrl, lastHealthCheck]);\n\n  // Update conversation messages\n  const updateConversationMessages = useCallback((newMessages) => {\n    setConversations(prev => prev.map(conv => \n      conv.id === currentConversationId\n        ? { ...conv, messages: newMessages }\n        : conv\n    ));\n  }, [currentConversationId]);\n\n  // Move cleanupConversation before handleConversationChange\n  const cleanupConversation = useCallback((conversationId) => {\n    // Abort any ongoing requests\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n\n    // Clear streaming responses\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n\n    // Clear thinking state\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n\n    // Clear response buffer\n    responseBuffer.current = '';\n\n    // Clear any pending timeouts\n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n      updateTimeoutRef.current = null;\n    }\n  }, [position, setStreamingResponses, setThinking]);\n\n  // Handle conversation switch\n  const handleConversationChange = useCallback((newId) => {\n    if (!conversations.some(conv => conv.id === newId)) {\n      console.warn('Invalid conversation ID, selecting first available conversation');\n      newId = conversations[0]?.id || Date.now().toString();\n    }\n    \n    // Clean up the current conversation before switching\n    cleanupConversation(currentConversationId);\n    setCurrentConversationId(newId);\n  }, [conversations, currentConversationId, cleanupConversation]);\n\n  // Optimize streaming updates\n  const updateStreamingResponse = useCallback((newContent) => {\n    responseBuffer.current = newContent;\n    \n    if (updateTimeoutRef.current) {\n      clearTimeout(updateTimeoutRef.current);\n    }\n\n    updateTimeoutRef.current = setTimeout(() => {\n      setStreamingResponses(prev => ({\n        ...prev,\n        [position]: responseBuffer.current\n      }));\n    }, 1500); // 1.5 second debounce\n  }, [position, setStreamingResponses]);\n\n  // Update handleSendMessage to include model management options\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || !selectedModel) return;\n\n    // Reset states before starting new message\n    setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n    responseBuffer.current = '';\n    \n    const newMessage = {\n      content: inputValue,\n      timestamp: new Date().toISOString(),\n      role: 'user',\n    };\n\n    // Update conversation with new message\n    const updatedMessages = [...currentConversation.messages, newMessage];\n    updateConversationMessages(updatedMessages);\n    setInputValue('');\n    \n    // Set thinking state after message is added\n    setThinking(prev => ({ ...prev, [position]: true }));\n\n    try {\n      abortControllerRef.current = new AbortController();\n      const timeoutId = setTimeout(() => {\n        if (abortControllerRef.current) {\n          abortControllerRef.current.abort();\n        }\n      }, 180000);\n\n      const headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive',\n        'Keep-Alive': 'timeout=180',\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      };\n\n      // Only check basic server health\n      await checkServerHealth(headers);\n\n      const response = await fetch(`${serverUrl}/v1/chat/completions`, {\n        method: 'POST',\n        signal: abortControllerRef.current.signal,\n        headers,\n        body: JSON.stringify({\n          model: selectedModel,\n          messages: updatedMessages.map(msg => ({\n            role: msg.role === 'error' ? 'assistant' : msg.role,\n            content: msg.content\n          })),\n          stream: true,\n          temperature: 0.7,\n          max_tokens: 2000,\n          options: {\n            load_model_only_when_needed: true,\n            unload_model_after_completion: true,\n            skip_embedding_model: true,\n            unload_other_models: true // Add option to unload other models\n          }\n        }),\n        cache: 'no-store'\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\n      }\n\n      if (!response.body) {\n        throw new Error('Server response has no body');\n      }\n\n      const reader = response.body.getReader();\n      responseBuffer.current = '';\n      \n      try {\n        const responseText = await processStreamingResponse(reader);\n        \n        if (responseText) {\n          const updatedMessagesWithResponse = [...updatedMessages, {\n            content: responseText,\n            timestamp: new Date().toISOString(),\n            role: 'assistant',\n          }];\n          updateConversationMessages(updatedMessagesWithResponse);\n        }\n      } finally {\n        if (updateTimeoutRef.current) {\n          clearTimeout(updateTimeoutRef.current);\n          updateTimeoutRef.current = null;\n        }\n\n        setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n        setThinking(prev => ({ ...prev, [position]: false }));\n        responseBuffer.current = '';\n        abortControllerRef.current = null;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'Unable to get response from LM Studio. ';\n      \n      try {\n        // Try to parse the error response\n        const errorData = error.message.includes('{') ? \n          JSON.parse(error.message.substring(error.message.indexOf('{'))) : null;\n        \n        if (errorData?.error?.message) {\n          if (errorData.error.message.includes('Failed to load model')) {\n            errorMessage = `Model loading failed. Please ensure:\\n` +\n              `1. The model file exists and is not corrupted\\n` +\n              `2. You have sufficient RAM available\\n` +\n              `3. Try restarting LM Studio\\n\\n` +\n              `Technical details: ${errorData.error.message}`;\n          } else {\n            errorMessage += errorData.error.message;\n          }\n        } else if (error.name === 'AbortError') {\n          errorMessage += 'Request timed out. The model might be too slow or not responding.';\n        } else if (error.message === 'Failed to fetch') {\n          errorMessage += `Please check that:\\n1. LM Studio is still running\\n2. Local Server is active\\n3. Server address (${serverUrl}) is correct\\n4. Your internet connection is stable`;\n        } else {\n          errorMessage += error.message;\n        }\n      } catch (parseError) {\n        // If we can't parse the error, just use the original error message\n        errorMessage += error.message;\n      }\n      \n      updateConversationMessages([\n        ...updatedMessages,\n        {\n          content: errorMessage,\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n      setThinking(prev => ({ ...prev, [position]: false }));\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(`conversations-${position}`, JSON.stringify(conversations));\n  }, [conversations, position]);\n\n  const scrollToBottom = useCallback(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, []);\n\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  useEffect(() => {\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n  }, [currentConversationId, position, setStreamingResponses]);\n\n  const handleClearChat = useCallback(() => {\n    updateConversationMessages([]); // Clear messages in current conversation\n    setStreamingResponses(prev => ({\n      ...prev,\n      [position]: ''\n    }));\n    setThinking(prev => ({\n      ...prev,\n      [position]: false\n    }));\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n    }\n  }, [position, setStreamingResponses, setThinking, updateConversationMessages]);\n\n  const handleMenuAction = useCallback((action) => {\n    switch (action) {\n      case 'new':\n        startNewConversation();\n        break;\n      case 'clear':\n        handleClearChat();\n        break;\n      case 'delete':\n        // Clean up the conversation before deleting\n        cleanupConversation(currentConversationId);\n        \n        setConversations(prev => {\n          const updatedConversations = prev.filter(conv => conv.id !== currentConversationId);\n          if (updatedConversations.length === 0) {\n            const newId = Date.now().toString();\n            const newConversation = {\n              id: newId,\n              name: 'New Conversation',\n              messages: [],\n              timestamp: new Date().toISOString()\n            };\n            return [newConversation];\n          }\n          // Switch to the first conversation in the list\n          setCurrentConversationId(updatedConversations[0].id);\n          return updatedConversations;\n        });\n        break;\n      default:\n        break;\n    }\n    setMenuAnchor(null);\n  }, [currentConversationId, handleClearChat, startNewConversation, cleanupConversation]);\n\n  const handleStopResponse = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setThinking(prev => ({ ...prev, [position]: false }));\n      setStreamingResponses(prev => ({ ...prev, [position]: '' }));\n    }\n  };\n\n  const updateConversationName = (id, firstMessage) => {\n    if (!firstMessage) return;\n    \n    // Extract first ~30 characters of the first message for the conversation name\n    const name = firstMessage.content.length > 30 \n      ? firstMessage.content.substring(0, 30) + '...'\n      : firstMessage.content;\n\n    setConversations(prev => \n      prev.map(conv => \n        conv.id === id \n          ? { ...conv, name } \n          : conv\n      )\n    );\n  };\n\n  // Batch updates for message list scrolling with longer delay\n  useEffect(() => {\n    const scrollTimer = setTimeout(() => {\n      scrollToBottom();\n    }, 1000); // Delay scroll to 1 second\n\n    return () => clearTimeout(scrollTimer);\n  }, [currentConversation.messages, streamingResponse, scrollToBottom]);\n\n  // Add rate limiting for streaming updates\n  const processStreamingChunk = useCallback((chunk) => {\n    const lines = chunk.split('\\n');\n    let accumulatedContent = '';\n\n    for (const line of lines) {\n      if (!line.trim() || line.includes('[DONE]')) continue;\n\n      try {\n        const jsonStr = line.replace(/^data: /, '');\n        const data = JSON.parse(jsonStr);\n\n        if (data.choices && data.choices[0]?.delta?.content) {\n          accumulatedContent += data.choices[0].delta.content;\n        }\n      } catch (e) {\n        console.warn('Error parsing chunk:', e);\n        continue;\n      }\n    }\n\n    return accumulatedContent;\n  }, []);\n\n  // Clean up timeouts on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeoutRef.current) {\n        clearTimeout(updateTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const processStreamingResponse = async (reader, responseText = '', maxIterations = 1000) => {\n    let iterations = 0;\n    let accumulatedContent = '';\n    let lastUpdateTime = Date.now();\n    const updateInterval = 1500; // Update every 1.5 seconds\n\n    try {\n      while (iterations < maxIterations) {\n        iterations++;\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        const chunk = new TextDecoder().decode(value);\n        const newContent = processStreamingChunk(chunk);\n        responseText += newContent;\n        accumulatedContent += newContent;\n\n        // Only update UI if enough time has passed\n        if (Date.now() - lastUpdateTime >= updateInterval) {\n          updateStreamingResponse(accumulatedContent);\n          accumulatedContent = '';\n          lastUpdateTime = Date.now();\n        }\n      }\n\n      // Final update for any remaining content\n      if (accumulatedContent) {\n        updateStreamingResponse(accumulatedContent);\n      }\n\n      return responseText;\n    } catch (error) {\n      console.error('Error processing stream:', error);\n      throw error;\n    }\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    const emoji = emojiData.emoji;\n    const cursorPosition = document.querySelector('textarea').selectionStart;\n    const updatedText = \n      inputValue.slice(0, cursorPosition) + \n      emoji + \n      inputValue.slice(cursorPosition);\n    setInputValue(updatedText);\n    setEmojiAnchor(null);\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // Reset file input\n    event.target.value = '';\n\n    // Check file size (limit to 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadError('File size must be less than 10MB');\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('model', selectedModel);\n\n      setThinking(prev => ({ ...prev, [position]: true }));\n\n      const response = await fetch(`${serverUrl}/v1/files`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      // Add file message to chat\n      updateConversationMessages([\n        ...currentConversation.messages,\n        {\n          content: `📎 Uploaded file: ${file.name}`,\n          timestamp: new Date().toISOString(),\n          role: 'user',\n          fileId: data.id,\n        },\n      ]);\n\n    } catch (error) {\n      console.error('Upload error:', error);\n      setUploadError(error.message);\n      updateConversationMessages([\n        ...currentConversation.messages,\n        {\n          content: `Failed to upload file: ${error.message}`,\n          timestamp: new Date().toISOString(),\n          role: 'error',\n        },\n      ]);\n    } finally {\n      setThinking(prev => ({ ...prev, [position]: false }));\n    }\n  };\n\n  const supportsFileUpload = () => {\n    if (!selectedModel || !models.length) return false;\n    const currentModel = models.find(m => m.id === selectedModel);\n    const modelName = currentModel?.name?.toLowerCase() || '';\n    \n    // Enable file uploads for both deepseek and qwen models\n    if (modelName.includes('deepseek') || modelName.includes('qwen')) {\n      return true;\n    }\n    // Fallback to checking capabilities if model has them defined\n    return currentModel?.capabilities?.includes('file_upload') || false;\n  };\n\n  const getModelLetter = (modelName) => {\n    if (!modelName) return 'A';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return 'D';\n    if (name.includes('qwen')) return 'Q';\n    if (name.includes('hermes')) return 'H';\n    return modelName.charAt(0).toUpperCase();\n  };\n\n  const getModelColor = (modelName) => {\n    if (!modelName) return 'primary.main';\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return '#4A90E2'; // Blue for Deepseek\n    if (name.includes('qwen')) return '#9C27B0'; // Purple for Qwen\n    if (name.includes('llama')) return '#2E7D32'; // Green for Llama\n    if (name.includes('mistral')) return '#ED6C02'; // Orange for Mistral\n    if (name.includes('openchat')) return '#1976D2'; // Light blue for OpenChat\n    if (name.includes('hermes')) return '#00BFA5'; // Teal for Hermes\n    return '#757575'; // Grey for unknown models\n  };\n\n  const getModelImage = (modelName) => {\n    if (!modelName) return null;\n    const name = modelName.trim().toLowerCase();\n    if (name.includes('deepseek')) return './Images/Deepseek.png';\n    if (name.includes('qwen')) return './Images/Qwen2.png';\n    if (name.includes('starcoder')) return './Images/StarCoder.jpg';\n    if (name.includes('gemma')) return './Images/Gemma.png';\n    if (name.includes('hermes')) return './Images/Hermes.jpg';\n    return null;\n  };\n\n  // Update MessageComponent to include menu\n  const MessageComponent = React.memo(({ message, align }) => {\n    const [menuAnchor, setMenuAnchor] = useState(null);\n    const [isDragging, setIsDragging] = useState(false);\n\n    const handleMessageClick = (event) => {\n      if (!isDragging) {  // Only show menu if not dragging\n        event.preventDefault();\n        setMenuAnchor(event.currentTarget);\n      }\n    };\n\n    const handleDragStart = (e) => {\n      setIsDragging(true);\n      e.dataTransfer.setData('text/plain', message.content);\n      e.dataTransfer.effectAllowed = 'copy';\n      // Add a class to style the dragged element\n      e.currentTarget.classList.add('dragging');\n    };\n\n    const handleDragEnd = (e) => {\n      setIsDragging(false);\n      // Remove the dragging class\n      e.currentTarget.classList.remove('dragging');\n      // Reset after a short delay to allow click events if no drag occurred\n      setTimeout(() => setIsDragging(false), 100);\n    };\n\n    const handleAddToNotebook = () => {\n      const event = new CustomEvent('addToNotebook', {\n        detail: {\n          content: message.content,\n          timestamp: message.timestamp,\n          role: message.role\n        }\n      });\n      window.dispatchEvent(event);\n      setMenuAnchor(null);\n    };\n\n    return (\n      <Message \n        align={align}\n        draggable={true}\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n        onClick={handleMessageClick}\n        sx={{ \n          cursor: isDragging ? 'grabbing' : 'grab',\n          '&:hover': {\n            '& .message-content': {\n              boxShadow: 2,\n            }\n          },\n          '&.dragging .message-content': {\n            opacity: 0.7,\n            boxShadow: 4,\n          }\n        }}\n      >\n        {message.role === 'error' ? (\n          <ErrorMessage>\n            <CircularProgress size={16} color=\"error\" />\n            <Typography variant=\"body2\">{message.content}</Typography>\n          </ErrorMessage>\n        ) : (\n          <>\n            <MessageContent \n              align={align} \n              className=\"message-content\"\n              sx={{ \n                transition: 'all 0.2s ease',\n              }}\n            >\n              <ReactMarkdown>{message.content}</ReactMarkdown>\n            </MessageContent>\n            <Typography \n              variant=\"caption\" \n              color=\"textSecondary\" \n              sx={{ \n                mt: 0.5,\n                opacity: 0.7,\n                fontSize: '0.7rem',\n              }}\n            >\n              {new Date(message.timestamp).toLocaleTimeString()}\n            </Typography>\n          </>\n        )}\n        <Menu\n          anchorEl={menuAnchor}\n          open={Boolean(menuAnchor)}\n          onClose={() => setMenuAnchor(null)}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: align === 'right' ? 'right' : 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: align === 'right' ? 'right' : 'left',\n          }}\n        >\n          <MenuItem onClick={handleAddToNotebook}>\n            <NoteAddIcon sx={{ mr: 1, fontSize: 20 }} />\n            Add to Notebook\n          </MenuItem>\n        </Menu>\n      </Message>\n    );\n  });\n\n  // Memoize streaming response component\n  const StreamingResponseComponent = React.memo(({ content }) => (\n    content ? (\n      <Message align=\"left\">\n        <MessageContent \n          align=\"left\"\n          sx={{ \n            backgroundColor: 'rgba(0, 0, 0, 0.2)', // Slightly darker background to distinguish from final responses\n            minWidth: '200px',\n            width: 'fit-content',\n            maxWidth: '70%'\n          }}\n        >\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            <Typography variant=\"body1\">\n              {content}\n            </Typography>\n          </Box>\n        </MessageContent>\n      </Message>\n    ) : null\n  ));\n\n  // Update ThinkingIndicator to be more precise\n  const ThinkingIndicator = React.memo(({ isThinking, onStop }) => (\n    isThinking && !streamingResponse && !currentConversation.messages.find(m => m.role === 'error') ? (\n      <Message align=\"left\">\n        <MessageContent \n          align=\"left\" \n          sx={{ \n            backgroundColor: 'rgba(0, 0, 0, 0.2)',\n            minWidth: '200px',\n            width: 'fit-content',\n            maxWidth: '70%',\n            position: 'relative',\n            padding: '12px 16px',\n            '& pre': {\n              margin: 0,\n              padding: 0,\n              backgroundColor: 'transparent',\n              fontFamily: 'inherit',\n              whiteSpace: 'pre-wrap',\n              fontSize: '0.875rem',\n            }\n          }}\n        >\n          <Box sx={{ \n            display: 'flex', \n            flexDirection: 'column',\n            gap: 1,\n          }}>\n            <pre>{\"<think>\"}</pre>\n            <pre style={{ marginLeft: '8px' }}>\n              {\"Processing request and generating response...\"}\n            </pre>\n            <pre>{\"</think>\"}</pre>\n            <Box sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: 1,\n              mt: 1,\n              pt: 1,\n              borderTop: '1px solid rgba(255, 255, 255, 0.1)',\n            }}>\n              <CircularProgress size={16} />\n              <Typography>Thinking...</Typography>\n              <IconButton \n                size=\"small\" \n                onClick={onStop}\n                sx={{ \n                  ml: 'auto',\n                  bgcolor: 'error.main',\n                  color: 'error.contrastText',\n                  '&:hover': {\n                    bgcolor: 'error.dark',\n                  },\n                  width: 24,\n                  height: 24,\n                }}\n              >\n                <StopIcon sx={{ fontSize: 16 }} />\n              </IconButton>\n            </Box>\n          </Box>\n        </MessageContent>\n      </Message>\n    ) : null\n  ));\n\n  return (\n    <StyledPaper elevation={3}>\n      <ChatHeader>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Tooltip title={selectedModel ? (models.find(m => m.id === selectedModel)?.name || 'Select a model') : 'Select a model'}>\n            <Avatar sx={{ \n              bgcolor: selectedModel ? \n                getModelColor(models.find(m => m.id === selectedModel)?.name || '') :\n                'primary.main',\n              transition: 'all 0.3s ease',\n              fontWeight: 600,\n              width: 40,\n              height: 40,\n              cursor: 'help',\n              '& img': {\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover',\n              }\n            }}>\n              {selectedModel ? (\n                (() => {\n                  const modelName = models.find(m => m.id === selectedModel)?.name || '';\n                  const imagePath = getModelImage(modelName);\n                  return imagePath ? (\n                    <img \n                      src={imagePath} \n                      alt={modelName}\n                      style={{\n                        width: '100%',\n                        height: '100%',\n                        objectFit: 'cover',\n                      }}\n                    />\n                  ) : (\n                    getModelLetter(modelName)\n                  );\n                })()\n              ) : 'A'}\n            </Avatar>\n          </Tooltip>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n            <ConversationSelector size=\"small\">\n              <Select\n                value={currentConversationId}\n                onChange={(e) => handleConversationChange(e.target.value)}\n                variant=\"standard\"\n                sx={{ fontSize: '0.875rem' }}\n              >\n                {conversations.map((conv) => (\n                  <MenuItem key={conv.id} value={conv.id}>\n                    {conv.name || 'New Conversation'}\n                  </MenuItem>\n                ))}\n              </Select>\n            </ConversationSelector>\n            {models.length > 0 ? (\n              <ModelSelector size=\"small\" sx={{ minWidth: 200 }}>\n                <Select\n                  value={selectedModel || ''}\n                  onChange={(e) => handleModelChange(e.target.value)}\n                  variant=\"standard\"\n                  displayEmpty\n                >\n                  {models.map((model) => (\n                    <MenuItem key={model.id} value={model.id}>\n                      {model.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </ModelSelector>\n            ) : (\n              <Typography variant=\"caption\" color=\"error\">\n                No AI models available\n              </Typography>\n            )}\n          </Box>\n        </Box>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <IconButton \n            onClick={startNewConversation}\n            title=\"New Conversation\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\n            <MoreIcon />\n          </IconButton>\n        </Box>\n      </ChatHeader>\n\n      <MessageList>\n        {currentConversation.messages.map((msg, index) => (\n          <MessageComponent\n            key={`${msg.timestamp}-${index}`}\n            message={msg}\n            align={msg.role === 'user' ? 'right' : 'left'}\n          />\n        ))}\n        <StreamingResponseComponent content={streamingResponse} />\n        <ThinkingIndicator \n          isThinking={isThinking} \n          onStop={handleStopResponse}\n        />\n        <div ref={messagesEndRef} />\n      </MessageList>\n\n      <ChatFooter>\n        <InputContainer\n          onDragOver={(e) => {\n            e.preventDefault();\n            e.currentTarget.style.backgroundColor = 'rgba(255, 255, 255, 0.1)';\n          }}\n          onDragLeave={(e) => {\n            e.preventDefault();\n            e.currentTarget.style.backgroundColor = '';\n          }}\n          onDrop={(e) => {\n            e.preventDefault();\n            e.currentTarget.style.backgroundColor = '';\n            const text = e.dataTransfer.getData('text/plain');\n            setInputValue(prev => {\n              const cursorPosition = document.querySelector('textarea')?.selectionStart || prev.length;\n              return prev.slice(0, cursorPosition) + text + prev.slice(cursorPosition);\n            });\n          }}\n          sx={{\n            transition: 'background-color 0.2s ease',\n            '&:hover': {\n              '&[data-dragging=\"true\"]': {\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n              }\n            }\n          }}\n        >\n          <IconButton \n            size=\"small\" \n            onClick={(e) => setEmojiAnchor(e.currentTarget)}\n          >\n            <EmojiIcon />\n          </IconButton>\n          <Popover\n            open={Boolean(emojiAnchor)}\n            anchorEl={emojiAnchor}\n            onClose={() => setEmojiAnchor(null)}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n          >\n            <Box sx={{ \n              '.EmojiPickerReact': {\n                '--epr-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-category-label-bg-color': 'rgba(18, 18, 18, 0.95)',\n                '--epr-hover-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-focus-bg-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-highlight-color': 'rgba(255, 255, 255, 0.2)',\n                '--epr-search-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-border-color': 'rgba(255, 255, 255, 0.1)',\n                '--epr-text-color': '#fff',\n                border: 'none',\n                boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n              }\n            }}>\n              <EmojiPicker\n                onEmojiClick={handleEmojiClick}\n                autoFocusSearch={false}\n                theme=\"dark\"\n                searchPlaceHolder=\"Search emojis...\"\n                width={320}\n                height={400}\n                previewConfig={{\n                  showPreview: false\n                }}\n              />\n            </Box>\n          </Popover>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleFileUpload}\n            accept=\"image/*,.pdf,.txt,.doc,.docx\"\n          />\n          <Tooltip title={\n            !selectedModel ? \"Please select a model first\" :\n            !supportsFileUpload() ? \"This model doesn't support file uploads\" :\n            \"Upload a file\"\n          }>\n            <span>\n              <IconButton \n                size=\"small\"\n                disabled={!supportsFileUpload()}\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <ImageIcon sx={{ \n                  color: theme => !supportsFileUpload() ? \n                    theme.palette.action.disabled : \n                    'inherit'\n                }} />\n              </IconButton>\n            </span>\n          </Tooltip>\n          <TextField\n            fullWidth\n            multiline\n            maxRows={4}\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Type your message...\"\n            variant=\"standard\"\n            InputProps={{\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={handleSendMessage}\n                    disabled={!inputValue.trim() || !selectedModel}\n                    color=\"primary\"\n                  >\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </InputContainer>\n        {uploadError && (\n          <Typography \n            variant=\"caption\" \n            color=\"error\" \n            sx={{ mt: 1, display: 'block' }}\n            onClick={() => setUploadError('')}\n          >\n            {uploadError}\n          </Typography>\n        )}\n      </ChatFooter>\n\n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={() => setMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => handleMenuAction('new')}>\n          New Conversation\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('clear')}>\n          Clear Current Conversation\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('delete')}>\n          Delete Current Conversation\n        </MenuItem>\n      </Menu>\n    </StyledPaper>\n  );\n}\n\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}