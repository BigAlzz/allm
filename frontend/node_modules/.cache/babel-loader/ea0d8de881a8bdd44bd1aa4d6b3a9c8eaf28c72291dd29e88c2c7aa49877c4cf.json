{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, CssBaseline, CircularProgress, Typography, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button, IconButton } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { VideoCall as VideoIcon, OpenInFull as ExpandIcon, MoreVert as MoreIcon, Settings as SettingsIcon, Refresh as RefreshIcon } from '@mui/icons-material';\nimport ChatWindow from './components/ChatWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  height: '100vh',\n  backgroundColor: theme.palette.primary.dark,\n  padding: theme.spacing(2)\n}));\n_c = AppContainer;\nconst ChatContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  gap: theme.spacing(2),\n  width: '100%',\n  maxWidth: 1600,\n  margin: '0 auto',\n  height: '100%'\n}));\n_c2 = ChatContainer;\nconst LoadingContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: theme.spacing(2),\n  width: '100%',\n  color: theme.palette.common.white\n}));\n_c3 = LoadingContainer;\nconst RetryButton = styled(Button)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.primary.main,\n  '&:hover': {\n    backgroundColor: theme.palette.grey[100]\n  }\n}));\n_c4 = RetryButton;\nfunction App() {\n  _s();\n  const [models, setModels] = useState([]);\n  const [streamingResponses, setStreamingResponses] = useState({\n    left: '',\n    right: ''\n  });\n  const [thinking, setThinking] = useState({\n    left: false,\n    right: false\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [serverConfig, setServerConfig] = useState({\n    address: localStorage.getItem('lmStudioAddress') || '192.168.56.1',\n    port: localStorage.getItem('lmStudioPort') || '1234'\n  });\n  const [configOpen, setConfigOpen] = useState(false);\n  const cleanAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\n  const serverUrl = `http://${cleanAddress}:${serverConfig.port}`;\n  const handleConfigSave = () => {\n    const cleanedAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\n    localStorage.setItem('lmStudioAddress', cleanedAddress);\n    localStorage.setItem('lmStudioPort', serverConfig.port);\n    setConfigOpen(false);\n    setRetryCount(0);\n    setLoading(true);\n  };\n  const fetchModels = async (retryAttempt = 0) => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\n      const optionsResponse = await fetch(serverUrl + '/v1/models', {\n        method: 'OPTIONS',\n        signal: controller.signal,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Origin': window.location.origin\n        }\n      });\n      const response = await fetch(serverUrl + '/v1/models', {\n        method: 'GET',\n        signal: controller.signal,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Origin': window.location.origin\n        }\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        throw new Error(`Server returned ${response.status}: ${response.statusText}`);\n      }\n      const data = await response.json();\n      const modelList = data.models || [];\n      if (!modelList.length) {\n        throw new Error('No models available in LM Studio. Please load a model first.');\n      }\n      setModels(modelList.map(model => ({\n        id: model,\n        name: model.split('/').pop().replace(/-GGUF$/, '')\n      })));\n      setError(null);\n      setRetryCount(0);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n      let errorMessage = error.message;\n      if (error.name === 'AbortError') {\n        errorMessage = 'Connection timed out. Is LM Studio running?';\n      } else if (error.message === 'Failed to fetch') {\n        errorMessage = `Unable to connect to LM Studio at ${serverUrl}\\nPlease check that:\\n1. LM Studio is running\\n2. Local Server is started in LM Studio\\n3. The server address is correct`;\n      }\n      setError(errorMessage);\n      const maxRetries = 3;\n      const backoffDelay = Math.min(1000 * Math.pow(2, retryAttempt), 10000);\n      if (retryAttempt < maxRetries) {\n        console.log(`Retrying in ${backoffDelay / 1000} seconds... (Attempt ${retryAttempt + 1}/${maxRetries})`);\n        setTimeout(() => {\n          setRetryCount(retryAttempt + 1);\n        }, backoffDelay);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const initializeApp = async () => {\n      await fetchModels(retryCount);\n      if (!error) {\n        const interval = setInterval(() => fetchModels(0), 30000);\n        return () => clearInterval(interval);\n      }\n    };\n    initializeApp();\n  }, [retryCount, serverUrl]);\n  const handleRetry = () => {\n    setLoading(true);\n    setRetryCount(0);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\",\n          size: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Connecting to LM Studio...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            opacity: 0.7,\n            textAlign: 'center'\n          },\n          children: [\"Attempting to connect to \", serverUrl]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            opacity: 0.7,\n            textAlign: 'center'\n          },\n          children: \"Make sure LM Studio is running and the Local Server is started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: \"Unable to connect to LM Studio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error.light\",\n          sx: {\n            whiteSpace: 'pre-line',\n            textAlign: 'center'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(RetryButton, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 26\n            }, this),\n            onClick: handleRetry,\n            children: \"Retry Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RetryButton, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 26\n            }, this),\n            onClick: () => setConfigOpen(true),\n            children: \"Configure Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: configOpen,\n        onClose: () => setConfigOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Configure LM Studio Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2,\n              pt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Server Address\",\n              value: serverConfig.address,\n              onChange: e => setServerConfig(prev => ({\n                ...prev,\n                address: e.target.value\n              })),\n              helperText: \"Example: localhost or 192.168.56.1\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Port\",\n              value: serverConfig.port,\n              onChange: e => setServerConfig(prev => ({\n                ...prev,\n                port: e.target.value\n              })),\n              helperText: \"Default: 1234\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setConfigOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleConfigSave,\n            variant: \"contained\",\n            children: \"Save & Reconnect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 16,\n        right: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => setConfigOpen(true),\n        sx: {\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n        position: \"left\",\n        models: models,\n        streamingResponse: streamingResponses.left,\n        isThinking: thinking.left,\n        setStreamingResponses: setStreamingResponses,\n        setThinking: setThinking,\n        serverUrl: serverUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n        position: \"right\",\n        models: models,\n        streamingResponse: streamingResponses.right,\n        isThinking: thinking.right,\n        setStreamingResponses: setStreamingResponses,\n        setThinking: setThinking,\n        serverUrl: serverUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"StJD4FEkQTy3pZcy5EJ2CJhzLQE=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"LoadingContainer\");\n$RefreshReg$(_c4, \"RetryButton\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","CssBaseline","CircularProgress","Typography","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","IconButton","styled","VideoCall","VideoIcon","OpenInFull","ExpandIcon","MoreVert","MoreIcon","Settings","SettingsIcon","Refresh","RefreshIcon","ChatWindow","jsxDEV","_jsxDEV","AppContainer","theme","display","height","backgroundColor","palette","primary","dark","padding","spacing","_c","ChatContainer","gap","width","maxWidth","margin","_c2","LoadingContainer","flexDirection","alignItems","justifyContent","color","common","white","_c3","RetryButton","marginTop","background","paper","main","grey","_c4","App","_s","models","setModels","streamingResponses","setStreamingResponses","left","right","thinking","setThinking","loading","setLoading","error","setError","retryCount","setRetryCount","serverConfig","setServerConfig","address","localStorage","getItem","port","configOpen","setConfigOpen","cleanAddress","replace","serverUrl","handleConfigSave","cleanedAddress","setItem","fetchModels","retryAttempt","controller","AbortController","timeoutId","setTimeout","abort","optionsResponse","fetch","method","signal","headers","window","location","origin","response","clearTimeout","ok","Error","status","statusText","data","json","modelList","length","map","model","id","name","split","pop","console","errorMessage","message","maxRetries","backoffDelay","Math","min","pow","log","initializeApp","interval","setInterval","clearInterval","handleRetry","children","fileName","_jsxFileName","lineNumber","columnNumber","size","variant","sx","opacity","textAlign","whiteSpace","mt","startIcon","onClick","open","onClose","pt","label","value","onChange","e","prev","target","helperText","fullWidth","position","top","streamingResponse","isThinking","_c5","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  CssBaseline,\r\n  CircularProgress,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  VideoCall as VideoIcon,\r\n  OpenInFull as ExpandIcon,\r\n  MoreVert as MoreIcon,\r\n  Settings as SettingsIcon,\r\n  Refresh as RefreshIcon,\r\n} from '@mui/icons-material';\r\nimport ChatWindow from './components/ChatWindow';\r\n\r\nconst AppContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  height: '100vh',\r\n  backgroundColor: theme.palette.primary.dark,\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nconst ChatContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  gap: theme.spacing(2),\r\n  width: '100%',\r\n  maxWidth: 1600,\r\n  margin: '0 auto',\r\n  height: '100%',\r\n}));\r\n\r\nconst LoadingContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  gap: theme.spacing(2),\r\n  width: '100%',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\nconst RetryButton = styled(Button)(({ theme }) => ({\r\n  marginTop: theme.spacing(2),\r\n  backgroundColor: theme.palette.background.paper,\r\n  color: theme.palette.primary.main,\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.grey[100],\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const [models, setModels] = useState([]);\r\n  const [streamingResponses, setStreamingResponses] = useState({ left: '', right: '' });\r\n  const [thinking, setThinking] = useState({ left: false, right: false });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n  const [serverConfig, setServerConfig] = useState({\r\n    address: localStorage.getItem('lmStudioAddress') || '192.168.56.1',\r\n    port: localStorage.getItem('lmStudioPort') || '1234',\r\n  });\r\n  const [configOpen, setConfigOpen] = useState(false);\r\n\r\n  const cleanAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\r\n  const serverUrl = `http://${cleanAddress}:${serverConfig.port}`;\r\n\r\n  const handleConfigSave = () => {\r\n    const cleanedAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\r\n    localStorage.setItem('lmStudioAddress', cleanedAddress);\r\n    localStorage.setItem('lmStudioPort', serverConfig.port);\r\n    setConfigOpen(false);\r\n    setRetryCount(0);\r\n    setLoading(true);\r\n  };\r\n\r\n  const fetchModels = async (retryAttempt = 0) => {\r\n    try {\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000);\r\n\r\n      const optionsResponse = await fetch(serverUrl + '/v1/models', {\r\n        method: 'OPTIONS',\r\n        signal: controller.signal,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Origin': window.location.origin\r\n        },\r\n      });\r\n\r\n      const response = await fetch(serverUrl + '/v1/models', {\r\n        method: 'GET',\r\n        signal: controller.signal,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Origin': window.location.origin\r\n        },\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server returned ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const modelList = data.models || [];\r\n      if (!modelList.length) {\r\n        throw new Error('No models available in LM Studio. Please load a model first.');\r\n      }\r\n\r\n      setModels(modelList.map(model => ({\r\n        id: model,\r\n        name: model.split('/').pop().replace(/-GGUF$/, '')\r\n      })));\r\n      setError(null);\r\n      setRetryCount(0);\r\n    } catch (error) {\r\n      console.error('Error fetching models:', error);\r\n      let errorMessage = error.message;\r\n      if (error.name === 'AbortError') {\r\n        errorMessage = 'Connection timed out. Is LM Studio running?';\r\n      } else if (error.message === 'Failed to fetch') {\r\n        errorMessage = `Unable to connect to LM Studio at ${serverUrl}\\nPlease check that:\\n1. LM Studio is running\\n2. Local Server is started in LM Studio\\n3. The server address is correct`;\r\n      }\r\n      setError(errorMessage);\r\n\r\n      const maxRetries = 3;\r\n      const backoffDelay = Math.min(1000 * Math.pow(2, retryAttempt), 10000);\r\n      \r\n      if (retryAttempt < maxRetries) {\r\n        console.log(`Retrying in ${backoffDelay/1000} seconds... (Attempt ${retryAttempt + 1}/${maxRetries})`);\r\n        setTimeout(() => {\r\n          setRetryCount(retryAttempt + 1);\r\n        }, backoffDelay);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeApp = async () => {\r\n      await fetchModels(retryCount);\r\n      if (!error) {\r\n        const interval = setInterval(() => fetchModels(0), 30000);\r\n        return () => clearInterval(interval);\r\n      }\r\n    };\r\n\r\n    initializeApp();\r\n  }, [retryCount, serverUrl]);\r\n\r\n  const handleRetry = () => {\r\n    setLoading(true);\r\n    setRetryCount(0);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppContainer>\r\n        <CssBaseline />\r\n        <LoadingContainer>\r\n          <CircularProgress color=\"inherit\" size={40} />\r\n          <Typography variant=\"h6\">\r\n            Connecting to LM Studio...\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ opacity: 0.7, textAlign: 'center' }}>\r\n            Attempting to connect to {serverUrl}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ opacity: 0.7, textAlign: 'center' }}>\r\n            Make sure LM Studio is running and the Local Server is started\r\n          </Typography>\r\n        </LoadingContainer>\r\n      </AppContainer>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <AppContainer>\r\n        <CssBaseline />\r\n        <LoadingContainer>\r\n          <Typography variant=\"h6\" color=\"error\">\r\n            Unable to connect to LM Studio\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"error.light\" sx={{ whiteSpace: 'pre-line', textAlign: 'center' }}>\r\n            {error}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', gap: 2, mt: 2 }}>\r\n            <RetryButton\r\n              variant=\"contained\"\r\n              startIcon={<RefreshIcon />}\r\n              onClick={handleRetry}\r\n            >\r\n              Retry Connection\r\n            </RetryButton>\r\n            <RetryButton\r\n              variant=\"contained\"\r\n              startIcon={<SettingsIcon />}\r\n              onClick={() => setConfigOpen(true)}\r\n            >\r\n              Configure Server\r\n            </RetryButton>\r\n          </Box>\r\n        </LoadingContainer>\r\n\r\n        <Dialog open={configOpen} onClose={() => setConfigOpen(false)}>\r\n          <DialogTitle>Configure LM Studio Server</DialogTitle>\r\n          <DialogContent>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 1 }}>\r\n              <TextField\r\n                label=\"Server Address\"\r\n                value={serverConfig.address}\r\n                onChange={(e) => setServerConfig(prev => ({ ...prev, address: e.target.value }))}\r\n                helperText=\"Example: localhost or 192.168.56.1\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Port\"\r\n                value={serverConfig.port}\r\n                onChange={(e) => setServerConfig(prev => ({ ...prev, port: e.target.value }))}\r\n                helperText=\"Default: 1234\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setConfigOpen(false)}>Cancel</Button>\r\n            <Button onClick={handleConfigSave} variant=\"contained\">\r\n              Save & Reconnect\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </AppContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppContainer>\r\n      <CssBaseline />\r\n      <Box sx={{ position: 'absolute', top: 16, right: 16 }}>\r\n        <IconButton \r\n          onClick={() => setConfigOpen(true)}\r\n          sx={{ color: 'white' }}\r\n        >\r\n          <SettingsIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <ChatContainer>\r\n        <ChatWindow\r\n          position=\"left\"\r\n          models={models}\r\n          streamingResponse={streamingResponses.left}\r\n          isThinking={thinking.left}\r\n          setStreamingResponses={setStreamingResponses}\r\n          setThinking={setThinking}\r\n          serverUrl={serverUrl}\r\n        />\r\n        <ChatWindow\r\n          position=\"right\"\r\n          models={models}\r\n          streamingResponse={streamingResponses.right}\r\n          isThinking={thinking.right}\r\n          setStreamingResponses={setStreamingResponses}\r\n          setThinking={setThinking}\r\n          serverUrl={serverUrl}\r\n        />\r\n      </ChatContainer>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}