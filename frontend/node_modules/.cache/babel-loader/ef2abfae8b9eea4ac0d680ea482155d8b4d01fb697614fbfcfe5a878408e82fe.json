{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\components\\\\BrainstormControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, IconButton, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, Tooltip, Select, MenuItem, Button, Chip, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, ClickAwayListener, Collapse, Slide } from '@mui/material';\nimport { DragHandle as DragIcon, PlayArrow as PlayIcon, Delete as DeleteIcon, Send as SendIcon, Add as AddIcon, Settings as SettingsIcon, Info as InfoIcon, ExpandMore as ExpandMoreIcon, ExpandLess as ExpandLessIcon } from '@mui/icons-material';\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\n\n// Model configuration presets\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MODEL_PRESETS = {\n  creative: {\n    name: \"Creative\",\n    config: {\n      temperature: 0.9,\n      max_tokens: 2000,\n      top_p: 0.95,\n      frequency_penalty: 0.5,\n      presence_penalty: 0.5\n    }\n  },\n  balanced: {\n    name: \"Balanced\",\n    config: {\n      temperature: 0.7,\n      max_tokens: 2000,\n      top_p: 0.9,\n      frequency_penalty: 0.2,\n      presence_penalty: 0.2\n    }\n  },\n  precise: {\n    name: \"Precise\",\n    config: {\n      temperature: 0.3,\n      max_tokens: 2000,\n      top_p: 0.8,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    }\n  }\n};\nconst BrainstormControl = ({\n  panels,\n  onSubmitToPanels,\n  currentMessage\n}) => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [results, setResults] = useState(null);\n  const [availableModels, setAvailableModels] = useState([]);\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  // Add a panel to the sequence with default preset\n  const handleAddToSequence = panelId => {\n    setSequence(prev => {\n      var _availableModels$;\n      return [...prev, {\n        id: `seq-${Date.now()}`,\n        panelId,\n        modelId: ((_availableModels$ = availableModels[0]) === null || _availableModels$ === void 0 ? void 0 : _availableModels$.id) || 'default',\n        preset: 'balanced',\n        config: {\n          ...MODEL_PRESETS.balanced.config\n        }\n      }];\n    });\n  };\n\n  // Helper function to get assistant name from panel\n  const getAssistantName = panelId => {\n    const panel = panels.find(p => p.id === panelId);\n    return (panel === null || panel === void 0 ? void 0 : panel.assistantName) || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\n  };\n\n  // Display current configuration\n  const renderConfigInfo = item => {\n    const preset = item.preset || 'balanced';\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Preset: \", MODEL_PRESETS[preset].name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"medium\",\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Remove a panel from the sequence\n  const handleRemoveFromSequence = sequenceId => {\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\n  };\n\n  // Open model settings dialog\n  const handleOpenModelSettings = sequenceItem => {\n    setSelectedPanelForSettings(sequenceItem);\n    setModelSettingsOpen(true);\n  };\n\n  // Update model for a panel\n  const handleModelChange = modelId => {\n    setSequence(prev => prev.map(item => item.id === selectedPanelForSettings.id ? {\n      ...item,\n      modelId\n    } : item));\n    setModelSettingsOpen(false);\n  };\n\n  // Fetch available models on component mount\n  useEffect(() => {\n    fetchAvailableModels();\n  }, []);\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await fetch('/api/models');\n      const data = await response.json();\n      if (data.status === 'online') {\n        setAvailableModels(data.models);\n      }\n    } catch (error) {\n      console.error('Error fetching models:', error);\n    }\n  };\n\n  // Start the brainstorming process\n  const handleStartBrainstorm = async () => {\n    if (sequence.length === 0 || !currentMessage) return;\n    setIsProcessing(true);\n    try {\n      const results = [];\n      for (const item of sequence) {\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\n        results.push({\n          panelId: item.panelId,\n          response\n        });\n      }\n      const summary = generateSummary(results);\n      setResults(summary);\n      if (selectedOutputPanel) {\n        onSubmitToPanels(selectedOutputPanel, summary);\n      }\n    } catch (error) {\n      console.error('Brainstorm error:', error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleClickAway = () => {\n    if (isExpanded && !modelSettingsOpen) {\n      setIsExpanded(false);\n    }\n  };\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: handleClickAway,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative',\n        mb: isExpanded ? 2 : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"down\",\n        in: !isExpanded,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 1,\n            display: 'flex',\n            alignItems: 'center',\n            cursor: 'pointer',\n            '&:hover': {\n              bgcolor: 'action.hover'\n            }\n          },\n          onClick: toggleExpanded,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              flex: 1\n            },\n            children: \"AI Brainstorm Control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: isExpanded,\n        timeout: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            m: 2,\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              zIndex: 1,\n              cursor: 'pointer'\n            },\n            onClick: toggleExpanded,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Collapse\",\n              children: /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"AI Brainstorm Control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Processing Sequence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: sequence.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                sx: {\n                  bgcolor: 'background.paper',\n                  mb: 1,\n                  borderRadius: 1,\n                  border: '1px solid',\n                  borderColor: 'divider',\n                  '&:hover': {\n                    bgcolor: 'action.hover'\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n                  sx: {\n                    mr: 1,\n                    color: 'action.active'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: getAssistantName(item.panelId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 27\n                    }, this), renderConfigInfo(item)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this),\n                  secondary: `Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Model Settings\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: e => {\n                        e.stopPropagation();\n                        handleOpenModelSettings(item);\n                      },\n                      color: \"primary\",\n                      size: \"medium\",\n                      children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Remove Panel\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: e => {\n                        e.stopPropagation();\n                        handleRemoveFromSequence(item.id);\n                      },\n                      color: \"error\",\n                      size: \"medium\",\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: panels.map(panel => /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Add to sequence\",\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: getAssistantName(panel.id),\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleAddToSequence(panel.id);\n                  },\n                  icon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 29\n                  }, this),\n                  sx: {\n                    mr: 1\n                  },\n                  color: \"primary\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)\n              }, panel.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Output Panel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedOutputPanel,\n              onChange: e => setSelectedOutputPanel(e.target.value),\n              fullWidth: true,\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), panels.map(panel => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: panel.id,\n                children: getAssistantName(panel.id)\n              }, panel.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 28\n              }, this),\n              onClick: handleStartBrainstorm,\n              disabled: isProcessing || sequence.length === 0,\n              size: \"large\",\n              children: \"Start Brainstorm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), results && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: \"Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              variant: \"outlined\",\n              sx: {\n                p: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"pre\",\n                sx: {\n                  whiteSpace: 'pre-wrap'\n                },\n                children: JSON.stringify(results, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            open: modelSettingsOpen,\n            onClose: () => setModelSettingsOpen(false),\n            maxWidth: \"sm\",\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              children: [\"Model Settings for \", selectedPanelForSettings ? getAssistantName(selectedPanelForSettings.panelId) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Model\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: (selectedPanelForSettings === null || selectedPanelForSettings === void 0 ? void 0 : selectedPanelForSettings.modelId) || '',\n                  onChange: e => handleModelChange(e.target.value),\n                  label: \"Model\",\n                  children: availableModels.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: model.id,\n                    children: model.name\n                  }, model.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setModelSettingsOpen(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(BrainstormControl, \"Sa/nm/ukaqNbOmBJ0Q9AoMlBDhU=\");\n_c = BrainstormControl;\nexport default _c2 = /*#__PURE__*/React.memo(BrainstormControl);\nvar _c, _c2;\n$RefreshReg$(_c, \"BrainstormControl\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","IconButton","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","Tooltip","Select","MenuItem","Button","Chip","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","ClickAwayListener","Collapse","Slide","DragHandle","DragIcon","PlayArrow","PlayIcon","Delete","DeleteIcon","Send","SendIcon","Add","AddIcon","Settings","SettingsIcon","Info","InfoIcon","ExpandMore","ExpandMoreIcon","ExpandLess","ExpandLessIcon","processWithAssistant","generateSummary","jsxDEV","_jsxDEV","MODEL_PRESETS","creative","name","config","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","balanced","precise","BrainstormControl","panels","onSubmitToPanels","currentMessage","_s","sequence","setSequence","selectedOutputPanel","setSelectedOutputPanel","isProcessing","setIsProcessing","results","setResults","availableModels","setAvailableModels","modelSettingsOpen","setModelSettingsOpen","selectedPanelForSettings","setSelectedPanelForSettings","isExpanded","setIsExpanded","handleAddToSequence","panelId","prev","_availableModels$","id","Date","now","modelId","preset","getAssistantName","panel","find","p","assistantName","findIndex","renderConfigInfo","item","sx","display","alignItems","ml","children","title","variant","fileName","_jsxFileName","lineNumber","columnNumber","size","color","handleRemoveFromSequence","sequenceId","filter","handleOpenModelSettings","sequenceItem","handleModelChange","map","fetchAvailableModels","response","fetch","data","json","status","models","error","console","handleStartBrainstorm","length","push","summary","handleClickAway","toggleExpanded","onClickAway","position","mb","direction","in","mountOnEnter","unmountOnExit","cursor","bgcolor","onClick","flex","timeout","m","top","right","zIndex","gutterBottom","index","borderRadius","border","borderColor","mr","primary","secondary","gap","e","stopPropagation","mt","label","icon","value","onChange","target","fullWidth","justifyContent","startIcon","disabled","component","whiteSpace","JSON","stringify","open","onClose","maxWidth","model","_c","_c2","memo","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/components/BrainstormControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  ClickAwayListener,\r\n  Collapse,\r\n  Slide,\r\n} from '@mui/material';\r\nimport {\r\n  DragHandle as DragIcon,\r\n  PlayArrow as PlayIcon,\r\n  Delete as DeleteIcon,\r\n  Send as SendIcon,\r\n  Add as AddIcon,\r\n  Settings as SettingsIcon,\r\n  Info as InfoIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  ExpandLess as ExpandLessIcon,\r\n} from '@mui/icons-material';\r\nimport { processWithAssistant, generateSummary } from '../utils/brainstormUtils';\r\n\r\n// Model configuration presets\r\nconst MODEL_PRESETS = {\r\n  creative: {\r\n    name: \"Creative\",\r\n    config: {\r\n      temperature: 0.9,\r\n      max_tokens: 2000,\r\n      top_p: 0.95,\r\n      frequency_penalty: 0.5,\r\n      presence_penalty: 0.5\r\n    }\r\n  },\r\n  balanced: {\r\n    name: \"Balanced\",\r\n    config: {\r\n      temperature: 0.7,\r\n      max_tokens: 2000,\r\n      top_p: 0.9,\r\n      frequency_penalty: 0.2,\r\n      presence_penalty: 0.2\r\n    }\r\n  },\r\n  precise: {\r\n    name: \"Precise\",\r\n    config: {\r\n      temperature: 0.3,\r\n      max_tokens: 2000,\r\n      top_p: 0.8,\r\n      frequency_penalty: 0,\r\n      presence_penalty: 0\r\n    }\r\n  }\r\n};\r\n\r\nconst BrainstormControl = ({ panels, onSubmitToPanels, currentMessage }) => {\r\n  const [sequence, setSequence] = useState([]);\r\n  const [selectedOutputPanel, setSelectedOutputPanel] = useState('');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  const [availableModels, setAvailableModels] = useState([]);\r\n  const [modelSettingsOpen, setModelSettingsOpen] = useState(false);\r\n  const [selectedPanelForSettings, setSelectedPanelForSettings] = useState(null);\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n\r\n  // Add a panel to the sequence with default preset\r\n  const handleAddToSequence = (panelId) => {\r\n    setSequence(prev => [...prev, {\r\n      id: `seq-${Date.now()}`,\r\n      panelId,\r\n      modelId: availableModels[0]?.id || 'default',\r\n      preset: 'balanced',\r\n      config: { ...MODEL_PRESETS.balanced.config }\r\n    }]);\r\n  };\r\n\r\n  // Helper function to get assistant name from panel\r\n  const getAssistantName = (panelId) => {\r\n    const panel = panels.find(p => p.id === panelId);\r\n    return panel?.assistantName || `Assistant ${panels.findIndex(p => p.id === panelId) + 1}`;\r\n  };\r\n\r\n  // Display current configuration\r\n  const renderConfigInfo = (item) => {\r\n    const preset = item.preset || 'balanced';\r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n        <Tooltip title={\r\n          <Box>\r\n            <Typography variant=\"body2\">Preset: {MODEL_PRESETS[preset].name}</Typography>\r\n          </Box>\r\n        }>\r\n          <IconButton size=\"medium\" color=\"primary\">\r\n            <InfoIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  // Remove a panel from the sequence\r\n  const handleRemoveFromSequence = (sequenceId) => {\r\n    setSequence(prev => prev.filter(item => item.id !== sequenceId));\r\n  };\r\n\r\n  // Open model settings dialog\r\n  const handleOpenModelSettings = (sequenceItem) => {\r\n    setSelectedPanelForSettings(sequenceItem);\r\n    setModelSettingsOpen(true);\r\n  };\r\n\r\n  // Update model for a panel\r\n  const handleModelChange = (modelId) => {\r\n    setSequence(prev => prev.map(item => \r\n      item.id === selectedPanelForSettings.id\r\n        ? { ...item, modelId }\r\n        : item\r\n    ));\r\n    setModelSettingsOpen(false);\r\n  };\r\n\r\n  // Fetch available models on component mount\r\n  useEffect(() => {\r\n    fetchAvailableModels();\r\n  }, []);\r\n\r\n  const fetchAvailableModels = async () => {\r\n    try {\r\n      const response = await fetch('/api/models');\r\n      const data = await response.json();\r\n      if (data.status === 'online') {\r\n        setAvailableModels(data.models);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching models:', error);\r\n    }\r\n  };\r\n\r\n  // Start the brainstorming process\r\n  const handleStartBrainstorm = async () => {\r\n    if (sequence.length === 0 || !currentMessage) return;\r\n    setIsProcessing(true);\r\n    \r\n    try {\r\n      const results = [];\r\n      for (const item of sequence) {\r\n        const response = await processWithAssistant(item.panelId, currentMessage, item.modelId);\r\n        results.push({\r\n          panelId: item.panelId,\r\n          response\r\n        });\r\n      }\r\n      \r\n      const summary = generateSummary(results);\r\n      setResults(summary);\r\n      \r\n      if (selectedOutputPanel) {\r\n        onSubmitToPanels(selectedOutputPanel, summary);\r\n      }\r\n    } catch (error) {\r\n      console.error('Brainstorm error:', error);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    if (isExpanded && !modelSettingsOpen) {\r\n      setIsExpanded(false);\r\n    }\r\n  };\r\n\r\n  const toggleExpanded = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <Box sx={{ position: 'relative', mb: isExpanded ? 2 : 0 }}>\r\n        <Slide direction=\"down\" in={!isExpanded} mountOnEnter unmountOnExit>\r\n          <Paper \r\n            sx={{ \r\n              p: 1, \r\n              display: 'flex', \r\n              alignItems: 'center',\r\n              cursor: 'pointer',\r\n              '&:hover': {\r\n                bgcolor: 'action.hover',\r\n              }\r\n            }}\r\n            onClick={toggleExpanded}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ flex: 1 }}>\r\n              AI Brainstorm Control\r\n            </Typography>\r\n            <ExpandMoreIcon />\r\n          </Paper>\r\n        </Slide>\r\n\r\n        <Collapse in={isExpanded} timeout=\"auto\">\r\n          <Paper \r\n            sx={{ \r\n              p: 2, \r\n              m: 2,\r\n              position: 'relative',\r\n            }}\r\n          >\r\n            <Box sx={{ \r\n              position: 'absolute', \r\n              top: 8, \r\n              right: 8, \r\n              zIndex: 1,\r\n              cursor: 'pointer',\r\n            }}\r\n              onClick={toggleExpanded}\r\n            >\r\n              <Tooltip title=\"Collapse\">\r\n                <ExpandLessIcon />\r\n              </Tooltip>\r\n            </Box>\r\n\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              AI Brainstorm Control\r\n            </Typography>\r\n            \r\n            {/* Sequence Builder */}\r\n            <Box sx={{ mb: 2 }}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Processing Sequence\r\n              </Typography>\r\n              <List>\r\n                {sequence.map((item, index) => (\r\n                  <ListItem\r\n                    key={item.id}\r\n                    sx={{ \r\n                      bgcolor: 'background.paper', \r\n                      mb: 1,\r\n                      borderRadius: 1,\r\n                      border: '1px solid',\r\n                      borderColor: 'divider',\r\n                      '&:hover': {\r\n                        bgcolor: 'action.hover',\r\n                      }\r\n                    }}\r\n                  >\r\n                    <DragIcon sx={{ mr: 1, color: 'action.active' }} />\r\n                    <ListItemText \r\n                      primary={\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Typography variant=\"subtitle2\">\r\n                            {getAssistantName(item.panelId)}\r\n                          </Typography>\r\n                          {renderConfigInfo(item)}\r\n                        </Box>\r\n                      }\r\n                      secondary={`Model: ${item.modelId} - ${MODEL_PRESETS[item.preset || 'balanced'].name}`}\r\n                    />\r\n                    <ListItemSecondaryAction sx={{ display: 'flex', gap: 1 }}>\r\n                      <Tooltip title=\"Model Settings\">\r\n                        <IconButton \r\n                          onClick={(e) => { e.stopPropagation(); handleOpenModelSettings(item); }}\r\n                          color=\"primary\"\r\n                          size=\"medium\"\r\n                        >\r\n                          <SettingsIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                      <Tooltip title=\"Remove Panel\">\r\n                        <IconButton \r\n                          onClick={(e) => { e.stopPropagation(); handleRemoveFromSequence(item.id); }}\r\n                          color=\"error\"\r\n                          size=\"medium\"\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n\r\n              {/* Add Panel to Sequence */}\r\n              <Box sx={{ mt: 2 }}>\r\n                {panels.map((panel) => (\r\n                  <Tooltip key={panel.id} title=\"Add to sequence\">\r\n                    <Chip\r\n                      label={getAssistantName(panel.id)}\r\n                      onClick={(e) => { e.stopPropagation(); handleAddToSequence(panel.id); }}\r\n                      icon={<AddIcon />}\r\n                      sx={{ mr: 1 }}\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Tooltip>\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n            \r\n            {/* Output Panel Selector */}\r\n            <Box sx={{ mb: 2 }}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Output Panel\r\n              </Typography>\r\n              <Select\r\n                value={selectedOutputPanel}\r\n                onChange={(e) => setSelectedOutputPanel(e.target.value)}\r\n                fullWidth\r\n                size=\"small\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                {panels.map((panel) => (\r\n                  <MenuItem key={panel.id} value={panel.id}>\r\n                    {getAssistantName(panel.id)}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Box>\r\n            \r\n            {/* Control Buttons */}\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                startIcon={<PlayIcon />}\r\n                onClick={handleStartBrainstorm}\r\n                disabled={isProcessing || sequence.length === 0}\r\n                size=\"large\"\r\n              >\r\n                Start Brainstorm\r\n              </Button>\r\n            </Box>\r\n            \r\n            {/* Results Display */}\r\n            {results && (\r\n              <Box sx={{ mt: 2 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Results\r\n                </Typography>\r\n                <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n                  <Typography variant=\"body2\" component=\"pre\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n                    {JSON.stringify(results, null, 2)}\r\n                  </Typography>\r\n                </Paper>\r\n              </Box>\r\n            )}\r\n\r\n            {/* Model Settings Dialog */}\r\n            <Dialog \r\n              open={modelSettingsOpen} \r\n              onClose={() => setModelSettingsOpen(false)}\r\n              maxWidth=\"sm\"\r\n              fullWidth\r\n            >\r\n              <DialogTitle>\r\n                Model Settings for {selectedPanelForSettings ? \r\n                  getAssistantName(selectedPanelForSettings.panelId) : \r\n                  ''}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <FormControl fullWidth sx={{ mt: 2 }}>\r\n                  <InputLabel>Model</InputLabel>\r\n                  <Select\r\n                    value={selectedPanelForSettings?.modelId || ''}\r\n                    onChange={(e) => handleModelChange(e.target.value)}\r\n                    label=\"Model\"\r\n                  >\r\n                    {availableModels.map((model) => (\r\n                      <MenuItem key={model.id} value={model.id}>\r\n                        {model.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={() => setModelSettingsOpen(false)}>Cancel</Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Paper>\r\n        </Collapse>\r\n      </Box>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nexport default React.memo(BrainstormControl); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}