{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, CssBaseline, CircularProgress, Typography, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button, IconButton, AppBar, Toolbar, Container, Alert, createTheme, ThemeProvider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { VideoCall as VideoIcon, OpenInFull as ExpandIcon, MoreVert as MoreIcon, Settings as SettingsIcon, Refresh as RefreshIcon, NoteAdd as NoteAddIcon } from '@mui/icons-material';\nimport ChatWindow from './components/ChatWindow';\nimport NetworkDiagnostics from './components/NetworkDiagnostics';\nimport { alpha } from '@mui/material/styles';\nimport Notebook from './components/Notebook';\nimport PanelLayout from './components/PanelLayout';\nimport { StrictMode } from 'react';\n\n// Create a dark theme with purple accents\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#8B5CF6',\n      // Purple accent color\n      light: '#A78BFA',\n      dark: '#7C3AED'\n    },\n    background: {\n      default: '#1E1E2D',\n      // Dark background\n      paper: '#27293D' // Slightly lighter for cards\n    },\n    text: {\n      primary: '#FFFFFF',\n      secondary: 'rgba(255, 255, 255, 0.7)'\n    }\n  },\n  shape: {\n    borderRadius: 12\n  },\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          textTransform: 'none',\n          borderRadius: 8\n        }\n      }\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          backgroundImage: 'none',\n          borderRadius: 12\n        }\n      }\n    },\n    MuiDialog: {\n      styleOverrides: {\n        paper: {\n          backgroundImage: 'none',\n          borderRadius: 12\n        }\n      }\n    }\n  }\n});\nconst AppContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  minHeight: '100vh',\n  maxHeight: '100vh',\n  overflow: 'hidden',\n  backgroundColor: theme.palette.background.default\n}));\n_c = AppContainer;\nconst ChatContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  gap: theme.spacing(2),\n  width: '100%',\n  maxWidth: 1600,\n  margin: '0 auto',\n  height: 'calc(100vh - 64px)',\n  // Account for AppBar height\n  padding: theme.spacing(2),\n  overflow: 'hidden',\n  '@media (max-width: 960px)': {\n    flexDirection: 'column',\n    height: 'auto'\n  }\n}));\nconst LoadingContainer = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  gap: theme.spacing(2),\n  minHeight: '100vh',\n  padding: theme.spacing(3),\n  color: theme.palette.text.primary,\n  textAlign: 'center'\n}));\n_c2 = LoadingContainer;\nconst StyledAppBar = styled(AppBar)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.default,\n  backgroundImage: 'none',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  boxShadow: 'none',\n  position: 'sticky',\n  top: 0,\n  zIndex: theme.zIndex.appBar\n}));\nconst StyledToolbar = styled(Toolbar)(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n  padding: theme.spacing(0, 2)\n}));\nconst ActionButton = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.primary.contrastText,\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.primary.contrastText, 0.1)\n  },\n  borderRadius: 8,\n  padding: '6px 16px'\n}));\nconst MessageInput = styled('input')(({\n  theme\n}) => ({\n  width: '100%',\n  padding: '12px 16px',\n  borderRadius: '12px',\n  border: `1px solid ${theme.palette.divider}`,\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.text.primary,\n  fontSize: '14px',\n  outline: 'none',\n  '&:focus': {\n    borderColor: theme.palette.primary.main\n  }\n}));\nconst DEFAULT_HEADERS = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nfunction App() {\n  _s();\n  const [streamingResponses, setStreamingResponses] = useState({});\n  const [thinking, setThinking] = useState({});\n  const [models, setModels] = useState([]);\n  const [serverConfig, setServerConfig] = useState({\n    address: localStorage.getItem('lmStudioAddress') || '192.168.50.89',\n    port: localStorage.getItem('lmStudioPort') || '1234'\n  });\n  const [configOpen, setConfigOpen] = useState(false);\n  const [isNotebookOpen, setIsNotebookOpen] = useState(false);\n  const cleanAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\n  const serverUrl = `http://${cleanAddress}:${serverConfig.port}`;\n\n  // Add state for panel messages\n  const [panelMessages, setPanelMessages] = useState({\n    left: [],\n    right: []\n  });\n  const [currentMessage, setCurrentMessage] = useState('');\n\n  // Handle brainstorm messages\n  const handleBrainstormMessage = (position, message) => {\n    var _message$metadata;\n    console.log(`Handling brainstorm message from ${position}:`, message);\n    const otherPosition = position === 'left' ? 'right' : 'left';\n\n    // Create a new message object to avoid mutation\n    const newMessage = {\n      ...message,\n      processed: false,\n      metadata: {\n        ...message.metadata,\n        fromPanel: position,\n        timestamp: new Date().toISOString(),\n        iterationCount: ((_message$metadata = message.metadata) === null || _message$metadata === void 0 ? void 0 : _message$metadata.iterationCount) || 0\n      }\n    };\n    setPanelMessages(prev => {\n      // Create a new state object with existing messages\n      const updatedMessages = {\n        left: [...(prev.left || [])],\n        right: [...(prev.right || [])]\n      };\n\n      // Add the new message to the other panel's messages\n      updatedMessages[otherPosition] = [...updatedMessages[otherPosition], newMessage];\n      console.log(`Updated panel messages for ${otherPosition}:`, updatedMessages[otherPosition]);\n      return updatedMessages;\n    });\n  };\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const handleConfigSave = () => {\n    const cleanedAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\n    localStorage.setItem('lmStudioAddress', cleanedAddress);\n    localStorage.setItem('lmStudioPort', serverConfig.port);\n    setConfigOpen(false);\n    setRetryCount(0);\n    setLoading(true);\n  };\n  const fetchModels = async (retryAttempt = 0) => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // Increase timeout to 30s for initial load\n\n      const response = await fetch(`${serverUrl}/v1/models`, {\n        method: 'GET',\n        headers: {\n          ...DEFAULT_HEADERS,\n          'Connection': 'keep-alive',\n          'Keep-Alive': 'timeout=120',\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        },\n        signal: controller.signal,\n        cache: 'no-store'\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('Models response:', data);\n      if (!data.data || !data.data.length) {\n        throw new Error('No models available in LM Studio. Please load a model first.');\n      }\n\n      // Sort models to prioritize Qwen and Deepseek\n      const sortedModels = data.data.sort((a, b) => {\n        const nameA = a.id.toLowerCase();\n        const nameB = b.id.toLowerCase();\n        if (nameA.includes('qwen') || nameA.includes('deepseek')) return -1;\n        if (nameB.includes('qwen') || nameB.includes('deepseek')) return 1;\n        return 0;\n      });\n      setModels(sortedModels.map(model => ({\n        id: model.id,\n        name: model.id.split('/').pop().replace(/-GGUF$/, '')\n      })));\n      setError(null);\n      setRetryCount(0);\n    } catch (error) {\n      console.error('Error fetching models:', error);\n      let errorMessage = error.message;\n      if (error.name === 'AbortError') {\n        errorMessage = 'Connection timed out. Is LM Studio running?';\n      } else if (error.message === 'Failed to fetch') {\n        errorMessage = `Unable to connect to LM Studio at ${serverUrl}\\nPlease check that:\\n1. LM Studio is running\\n2. Local Server is started in LM Studio\\n3. The server address is correct\\n4. You are on the same network as the LM Studio server`;\n      }\n      setError(errorMessage);\n      const maxRetries = 5; // Increase max retries\n      const backoffDelay = Math.min(1000 * Math.pow(2, retryAttempt), 30000); // Cap at 30 seconds\n\n      if (retryAttempt < maxRetries) {\n        console.log(`Retrying in ${backoffDelay / 1000} seconds... (Attempt ${retryAttempt + 1}/${maxRetries})`);\n        setTimeout(() => {\n          setRetryCount(retryAttempt + 1);\n        }, backoffDelay);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const initializeApp = async () => {\n      await fetchModels(retryCount);\n      if (!error) {\n        // Poll every 2 minutes instead of 30 seconds to reduce server load\n        const interval = setInterval(() => fetchModels(0), 120000);\n        return () => clearInterval(interval);\n      }\n    };\n    initializeApp();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [retryCount, serverUrl, error]);\n\n  // Cache models in localStorage to reduce initial load\n  useEffect(() => {\n    if (models.length > 0) {\n      localStorage.setItem('cachedModels', JSON.stringify(models));\n    }\n  }, [models]);\n\n  // Load cached models on startup\n  useEffect(() => {\n    const cachedModels = localStorage.getItem('cachedModels');\n    if (cachedModels) {\n      try {\n        setModels(JSON.parse(cachedModels));\n      } catch (e) {\n        console.error('Error loading cached models:', e);\n      }\n    }\n  }, []);\n  const handleRetry = () => {\n    setLoading(true);\n    setRetryCount(0);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: loading ? /*#__PURE__*/_jsxDEV(LoadingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Connecting to LM Studio at \", serverUrl, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(PanelLayout, {\n        currentMessage: currentMessage,\n        children: panelId => /*#__PURE__*/_jsxDEV(ChatWindow, {\n          position: panelId,\n          models: models,\n          streamingResponse: streamingResponses[panelId] || '',\n          isThinking: thinking[panelId] || false,\n          setStreamingResponses: setStreamingResponses,\n          setThinking: setThinking,\n          serverUrl: serverUrl,\n          otherPanelMessages: panelMessages[panelId === 'left' ? 'right' : 'left'],\n          onBrainstormMessage: message => handleBrainstormMessage(panelId, message),\n          onMessageSubmit: message => setCurrentMessage(message)\n        }, panelId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B9Kd3xAjIMO/USGEjyXbeMCVU6U=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"LoadingContainer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","CssBaseline","CircularProgress","Typography","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","IconButton","AppBar","Toolbar","Container","Alert","createTheme","ThemeProvider","styled","VideoCall","VideoIcon","OpenInFull","ExpandIcon","MoreVert","MoreIcon","Settings","SettingsIcon","Refresh","RefreshIcon","NoteAdd","NoteAddIcon","ChatWindow","NetworkDiagnostics","alpha","Notebook","PanelLayout","StrictMode","jsxDEV","_jsxDEV","theme","palette","mode","primary","main","light","dark","background","default","paper","text","secondary","shape","borderRadius","components","MuiButton","styleOverrides","root","textTransform","MuiCard","backgroundImage","MuiDialog","AppContainer","display","flexDirection","minHeight","maxHeight","overflow","backgroundColor","_c","ChatContainer","gap","spacing","width","maxWidth","margin","height","padding","LoadingContainer","alignItems","justifyContent","color","textAlign","_c2","StyledAppBar","borderBottom","divider","boxShadow","position","top","zIndex","appBar","StyledToolbar","ActionButton","contrastText","MessageInput","border","fontSize","outline","borderColor","DEFAULT_HEADERS","App","_s","streamingResponses","setStreamingResponses","thinking","setThinking","models","setModels","serverConfig","setServerConfig","address","localStorage","getItem","port","configOpen","setConfigOpen","isNotebookOpen","setIsNotebookOpen","cleanAddress","replace","serverUrl","panelMessages","setPanelMessages","left","right","currentMessage","setCurrentMessage","handleBrainstormMessage","message","_message$metadata","console","log","otherPosition","newMessage","processed","metadata","fromPanel","timestamp","Date","toISOString","iterationCount","prev","updatedMessages","loading","setLoading","error","setError","retryCount","setRetryCount","handleConfigSave","cleanedAddress","setItem","fetchModels","retryAttempt","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","headers","signal","cache","clearTimeout","ok","errorText","Error","status","data","json","length","sortedModels","sort","a","b","nameA","id","toLowerCase","nameB","includes","map","model","name","split","pop","errorMessage","maxRetries","backoffDelay","Math","min","pow","initializeApp","interval","setInterval","clearInterval","JSON","stringify","cachedModels","parse","e","handleRetry","children","fileName","_jsxFileName","lineNumber","columnNumber","panelId","streamingResponse","isThinking","otherPanelMessages","onBrainstormMessage","onMessageSubmit","_c3","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  CssBaseline,\r\n  CircularProgress,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Container,\r\n  Alert,\r\n  createTheme,\r\n  ThemeProvider,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  VideoCall as VideoIcon,\r\n  OpenInFull as ExpandIcon,\r\n  MoreVert as MoreIcon,\r\n  Settings as SettingsIcon,\r\n  Refresh as RefreshIcon,\r\n  NoteAdd as NoteAddIcon,\r\n} from '@mui/icons-material';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport NetworkDiagnostics from './components/NetworkDiagnostics';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Notebook from './components/Notebook';\r\nimport PanelLayout from './components/PanelLayout';\r\nimport { StrictMode } from 'react';\r\n\r\n// Create a dark theme with purple accents\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#8B5CF6', // Purple accent color\r\n      light: '#A78BFA',\r\n      dark: '#7C3AED',\r\n    },\r\n    background: {\r\n      default: '#1E1E2D', // Dark background\r\n      paper: '#27293D',   // Slightly lighter for cards\r\n    },\r\n    text: {\r\n      primary: '#FFFFFF',\r\n      secondary: 'rgba(255, 255, 255, 0.7)',\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 12,\r\n  },\r\n  components: {\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n          borderRadius: 8,\r\n        },\r\n      },\r\n    },\r\n    MuiCard: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundImage: 'none',\r\n          borderRadius: 12,\r\n        },\r\n      },\r\n    },\r\n    MuiDialog: {\r\n      styleOverrides: {\r\n        paper: {\r\n          backgroundImage: 'none',\r\n          borderRadius: 12,\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst AppContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  minHeight: '100vh',\r\n  maxHeight: '100vh',\r\n  overflow: 'hidden',\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst ChatContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  gap: theme.spacing(2),\r\n  width: '100%',\r\n  maxWidth: 1600,\r\n  margin: '0 auto',\r\n  height: 'calc(100vh - 64px)', // Account for AppBar height\r\n  padding: theme.spacing(2),\r\n  overflow: 'hidden',\r\n  '@media (max-width: 960px)': {\r\n    flexDirection: 'column',\r\n    height: 'auto',\r\n  },\r\n}));\r\n\r\nconst LoadingContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  gap: theme.spacing(2),\r\n  minHeight: '100vh',\r\n  padding: theme.spacing(3),\r\n  color: theme.palette.text.primary,\r\n  textAlign: 'center',\r\n}));\r\n\r\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n  backgroundImage: 'none',\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n  boxShadow: 'none',\r\n  position: 'sticky',\r\n  top: 0,\r\n  zIndex: theme.zIndex.appBar,\r\n}));\r\n\r\nconst StyledToolbar = styled(Toolbar)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  gap: theme.spacing(2),\r\n  padding: theme.spacing(0, 2),\r\n}));\r\n\r\nconst ActionButton = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.primary.contrastText,\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.primary.contrastText, 0.1),\r\n  },\r\n  borderRadius: 8,\r\n  padding: '6px 16px',\r\n}));\r\n\r\nconst MessageInput = styled('input')(({ theme }) => ({\r\n  width: '100%',\r\n  padding: '12px 16px',\r\n  borderRadius: '12px',\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  backgroundColor: theme.palette.background.paper,\r\n  color: theme.palette.text.primary,\r\n  fontSize: '14px',\r\n  outline: 'none',\r\n  '&:focus': {\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst DEFAULT_HEADERS = {\r\n  'Accept': 'application/json',\r\n  'Content-Type': 'application/json'\r\n};\r\n\r\nfunction App() {\r\n  const [streamingResponses, setStreamingResponses] = useState({});\r\n  const [thinking, setThinking] = useState({});\r\n  const [models, setModels] = useState([]);\r\n  const [serverConfig, setServerConfig] = useState({\r\n    address: localStorage.getItem('lmStudioAddress') || '192.168.50.89',\r\n    port: localStorage.getItem('lmStudioPort') || '1234',\r\n  });\r\n  const [configOpen, setConfigOpen] = useState(false);\r\n  const [isNotebookOpen, setIsNotebookOpen] = useState(false);\r\n\r\n  const cleanAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\r\n  const serverUrl = `http://${cleanAddress}:${serverConfig.port}`;\r\n\r\n  // Add state for panel messages\r\n  const [panelMessages, setPanelMessages] = useState({\r\n    left: [],\r\n    right: [],\r\n  });\r\n\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n\r\n  // Handle brainstorm messages\r\n  const handleBrainstormMessage = (position, message) => {\r\n    console.log(`Handling brainstorm message from ${position}:`, message);\r\n    const otherPosition = position === 'left' ? 'right' : 'left';\r\n    \r\n    // Create a new message object to avoid mutation\r\n    const newMessage = {\r\n      ...message,\r\n      processed: false,\r\n      metadata: {\r\n        ...message.metadata,\r\n        fromPanel: position,\r\n        timestamp: new Date().toISOString(),\r\n        iterationCount: (message.metadata?.iterationCount || 0)\r\n      }\r\n    };\r\n\r\n    setPanelMessages(prev => {\r\n      // Create a new state object with existing messages\r\n      const updatedMessages = {\r\n        left: [...(prev.left || [])],\r\n        right: [...(prev.right || [])]\r\n      };\r\n\r\n      // Add the new message to the other panel's messages\r\n      updatedMessages[otherPosition] = [...updatedMessages[otherPosition], newMessage];\r\n      \r\n      console.log(`Updated panel messages for ${otherPosition}:`, updatedMessages[otherPosition]);\r\n      return updatedMessages;\r\n    });\r\n  };\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n\r\n  const handleConfigSave = () => {\r\n    const cleanedAddress = serverConfig.address.replace(/^https?:\\/\\//, '');\r\n    localStorage.setItem('lmStudioAddress', cleanedAddress);\r\n    localStorage.setItem('lmStudioPort', serverConfig.port);\r\n    setConfigOpen(false);\r\n    setRetryCount(0);\r\n    setLoading(true);\r\n  };\r\n\r\n  const fetchModels = async (retryAttempt = 0) => {\r\n    try {\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // Increase timeout to 30s for initial load\r\n\r\n      const response = await fetch(`${serverUrl}/v1/models`, {\r\n        method: 'GET',\r\n        headers: {\r\n          ...DEFAULT_HEADERS,\r\n          'Connection': 'keep-alive',\r\n          'Keep-Alive': 'timeout=120',\r\n          'Cache-Control': 'no-cache',\r\n          'Pragma': 'no-cache'\r\n        },\r\n        signal: controller.signal,\r\n        cache: 'no-store'\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Server returned ${response.status}: ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Models response:', data);\r\n\r\n      if (!data.data || !data.data.length) {\r\n        throw new Error('No models available in LM Studio. Please load a model first.');\r\n      }\r\n\r\n      // Sort models to prioritize Qwen and Deepseek\r\n      const sortedModels = data.data.sort((a, b) => {\r\n        const nameA = a.id.toLowerCase();\r\n        const nameB = b.id.toLowerCase();\r\n        if (nameA.includes('qwen') || nameA.includes('deepseek')) return -1;\r\n        if (nameB.includes('qwen') || nameB.includes('deepseek')) return 1;\r\n        return 0;\r\n      });\r\n\r\n      setModels(sortedModels.map(model => ({\r\n        id: model.id,\r\n        name: model.id.split('/').pop().replace(/-GGUF$/, '')\r\n      })));\r\n\r\n      setError(null);\r\n      setRetryCount(0);\r\n    } catch (error) {\r\n      console.error('Error fetching models:', error);\r\n      let errorMessage = error.message;\r\n      \r\n      if (error.name === 'AbortError') {\r\n        errorMessage = 'Connection timed out. Is LM Studio running?';\r\n      } else if (error.message === 'Failed to fetch') {\r\n        errorMessage = `Unable to connect to LM Studio at ${serverUrl}\\nPlease check that:\\n1. LM Studio is running\\n2. Local Server is started in LM Studio\\n3. The server address is correct\\n4. You are on the same network as the LM Studio server`;\r\n      }\r\n      setError(errorMessage);\r\n\r\n      const maxRetries = 5; // Increase max retries\r\n      const backoffDelay = Math.min(1000 * Math.pow(2, retryAttempt), 30000); // Cap at 30 seconds\r\n      \r\n      if (retryAttempt < maxRetries) {\r\n        console.log(`Retrying in ${backoffDelay/1000} seconds... (Attempt ${retryAttempt + 1}/${maxRetries})`);\r\n        setTimeout(() => {\r\n          setRetryCount(retryAttempt + 1);\r\n        }, backoffDelay);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeApp = async () => {\r\n      await fetchModels(retryCount);\r\n      if (!error) {\r\n        // Poll every 2 minutes instead of 30 seconds to reduce server load\r\n        const interval = setInterval(() => fetchModels(0), 120000);\r\n        return () => clearInterval(interval);\r\n      }\r\n    };\r\n\r\n    initializeApp();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [retryCount, serverUrl, error]);\r\n\r\n  // Cache models in localStorage to reduce initial load\r\n  useEffect(() => {\r\n    if (models.length > 0) {\r\n      localStorage.setItem('cachedModels', JSON.stringify(models));\r\n    }\r\n  }, [models]);\r\n\r\n  // Load cached models on startup\r\n  useEffect(() => {\r\n    const cachedModels = localStorage.getItem('cachedModels');\r\n    if (cachedModels) {\r\n      try {\r\n        setModels(JSON.parse(cachedModels));\r\n      } catch (e) {\r\n        console.error('Error loading cached models:', e);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleRetry = () => {\r\n    setLoading(true);\r\n    setRetryCount(0);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <AppContainer>\r\n        {loading ? (\r\n          <LoadingContainer>\r\n            <CircularProgress />\r\n            <Typography>\r\n              Connecting to LM Studio at {serverUrl}...\r\n            </Typography>\r\n            {error && (\r\n              <Typography color=\"error\">\r\n                {error}\r\n              </Typography>\r\n            )}\r\n          </LoadingContainer>\r\n        ) : (\r\n          <PanelLayout currentMessage={currentMessage}>\r\n            {(panelId) => (\r\n              <ChatWindow\r\n                key={panelId}\r\n                position={panelId}\r\n                models={models}\r\n                streamingResponse={streamingResponses[panelId] || ''}\r\n                isThinking={thinking[panelId] || false}\r\n                setStreamingResponses={setStreamingResponses}\r\n                setThinking={setThinking}\r\n                serverUrl={serverUrl}\r\n                otherPanelMessages={panelMessages[panelId === 'left' ? 'right' : 'left']}\r\n                onBrainstormMessage={(message) => handleBrainstormMessage(panelId, message)}\r\n                onMessageSubmit={(message) => setCurrentMessage(message)}\r\n              />\r\n            )}\r\n          </PanelLayout>\r\n        )}\r\n      </AppContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}