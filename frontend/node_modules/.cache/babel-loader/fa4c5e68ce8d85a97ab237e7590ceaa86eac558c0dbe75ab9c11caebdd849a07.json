{"ast":null,"code":"var _jsxFileName = \"E:\\\\Cline\\\\allm\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Grid, IconButton, Typography, Paper, CssBaseline, Drawer, List, ListItem, ListItemIcon, ListItemText, AppBar, Toolbar } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Home as HomeIcon, Chat as ChatIcon, ContactSupport as ContactIcon, Notifications as NotificationsIcon, CalendarToday as CalendarIcon, Settings as SettingsIcon, Menu as MenuIcon, Logout as LogoutIcon } from '@mui/icons-material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport ChatWindow from './components/ChatWindow';\nimport ServerStatus from './components/ServerStatus';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst Main = styled('main', {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  marginLeft: `-${drawerWidth}px`,\n  ...(open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  })\n}));\n_c = Main;\nconst menuItems = [{\n  text: 'HOME',\n  icon: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this)\n}, {\n  text: 'CHAT',\n  icon: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this)\n}, {\n  text: 'CONTACT',\n  icon: /*#__PURE__*/_jsxDEV(ContactIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 28\n  }, this)\n}, {\n  text: 'NOTIFICATIONS',\n  icon: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 34\n  }, this)\n}, {\n  text: 'CALENDAR',\n  icon: /*#__PURE__*/_jsxDEV(CalendarIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 29\n  }, this)\n}, {\n  text: 'SETTINGS',\n  icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 29\n  }, this)\n}];\nfunction App() {\n  _s();\n  const [serverStatus, setServerStatus] = useState('checking');\n  const [models, setModels] = useState([]);\n  const [chats, setChats] = useState(() => {\n    // Load chat histories from localStorage\n    const savedChats = localStorage.getItem('chatHistories');\n    return savedChats ? JSON.parse(savedChats) : {\n      left: [],\n      right: []\n    };\n  });\n  const [loading, setLoading] = useState({\n    left: false,\n    right: false\n  });\n  const [thinking, setThinking] = useState({\n    left: false,\n    right: false\n  });\n  const [activeRequests, setActiveRequests] = useState({\n    left: null,\n    right: null\n  });\n  const [streamingResponses, setStreamingResponses] = useState({\n    left: '',\n    right: ''\n  });\n  const [drawerOpen, setDrawerOpen] = useState(true);\n\n  // Save chats to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('chatHistories', JSON.stringify(chats));\n  }, [chats]);\n  const checkServer = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/models');\n      setServerStatus(response.data.status);\n      setModels(response.data.models);\n    } catch (error) {\n      setServerStatus('offline');\n      setModels([]);\n    }\n  };\n  useEffect(() => {\n    checkServer();\n    // Poll for server status every 30 seconds\n    const interval = setInterval(checkServer, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleStopResponse = chatId => {\n    if (activeRequests[chatId]) {\n      activeRequests[chatId].abort();\n      setActiveRequests(prev => ({\n        ...prev,\n        [chatId]: null\n      }));\n      setLoading(prev => ({\n        ...prev,\n        [chatId]: false\n      }));\n      setThinking(prev => ({\n        ...prev,\n        [chatId]: false\n      }));\n      if (streamingResponses[chatId]) {\n        setChats(prev => ({\n          ...prev,\n          [chatId]: [...prev[chatId], {\n            role: 'assistant',\n            content: streamingResponses[chatId],\n            timestamp: new Date().toISOString()\n          }]\n        }));\n        setStreamingResponses(prev => ({\n          ...prev,\n          [chatId]: ''\n        }));\n      }\n    }\n  };\n  const handleSendMessage = async (message, model, chatId) => {\n    const updatedChats = {\n      ...chats,\n      [chatId]: [...chats[chatId], {\n        role: 'user',\n        content: message,\n        timestamp: new Date().toISOString()\n      }]\n    };\n    setChats(updatedChats);\n    setLoading(prev => ({\n      ...prev,\n      [chatId]: true\n    }));\n    setThinking(prev => ({\n      ...prev,\n      [chatId]: false\n    }));\n    setStreamingResponses(prev => ({\n      ...prev,\n      [chatId]: ''\n    }));\n    const controller = new AbortController();\n    setActiveRequests(prev => ({\n      ...prev,\n      [chatId]: controller\n    }));\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chatId,\n          messages: updatedChats[chatId],\n          model\n        }),\n        signal: controller.signal\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let responseText = '';\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value);\n        const lines = chunk.split('\\n');\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const data = JSON.parse(line.slice(5));\n\n              // Handle different streaming states\n              if (data.status === 'thinking') {\n                setThinking(prev => ({\n                  ...prev,\n                  [chatId]: true\n                }));\n              } else if (data.status === 'streaming') {\n                setThinking(prev => ({\n                  ...prev,\n                  [chatId]: false\n                }));\n              } else if (data.status === 'done') {\n                // Response is complete\n                continue;\n              } else if (data.chunk) {\n                responseText += data.chunk;\n                setStreamingResponses(prev => ({\n                  ...prev,\n                  [chatId]: responseText\n                }));\n              }\n            } catch (e) {\n              console.error('Error parsing SSE data:', e);\n            }\n          }\n        }\n      }\n      setChats(prev => ({\n        ...prev,\n        [chatId]: [...prev[chatId], {\n          role: 'assistant',\n          content: responseText,\n          timestamp: new Date().toISOString()\n        }]\n      }));\n    } catch (error) {\n      if (error.name !== 'AbortError') {\n        console.error('Error sending message:', error);\n        setChats(prev => ({\n          ...prev,\n          [chatId]: [...prev[chatId], {\n            role: 'assistant',\n            content: '❌ Error: Failed to get response from AI. Please try again.',\n            timestamp: new Date().toISOString()\n          }]\n        }));\n      }\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        [chatId]: false\n      }));\n      setThinking(prev => ({\n        ...prev,\n        [chatId]: false\n      }));\n      setActiveRequests(prev => ({\n        ...prev,\n        [chatId]: null\n      }));\n      setStreamingResponses(prev => ({\n        ...prev,\n        [chatId]: ''\n      }));\n    }\n  };\n  const clearChatHistory = chatId => {\n    setChats(prev => ({\n      ...prev,\n      [chatId]: []\n    }));\n  };\n  const handleDrawerToggle = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n  const drawer = /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      overflow: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: \"https://via.placeholder.com/40\",\n        alt: \"User\",\n        sx: {\n          width: 40,\n          height: 40,\n          borderRadius: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: \"User Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, item.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        sx: {\n          mt: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"LOG OUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      sx: {\n        width: `calc(100% - ${drawerOpen ? drawerWidth : 0}px)`,\n        ml: `${drawerOpen ? drawerWidth : 0}px`,\n        transition: theme => theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          onClick: handleDrawerToggle,\n          sx: {\n            mr: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          children: \"Dual Chat Interface\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box'\n        }\n      },\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: drawerOpen,\n      children: drawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      open: drawerOpen,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          height: 'calc(100vh - 88px)',\n          pt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n          position: \"left\",\n          models: models,\n          streamingResponse: streamingResponses.left,\n          isThinking: thinking.left,\n          setStreamingResponses: setStreamingResponses,\n          setThinking: setThinking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n          position: \"right\",\n          models: models,\n          streamingResponse: streamingResponses.right,\n          isThinking: thinking.right,\n          setStreamingResponses: setStreamingResponses,\n          setThinking: setThinking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4ss7vUzSQg2fMFsC451iW+kjvyw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Grid","IconButton","Typography","Paper","CssBaseline","Drawer","List","ListItem","ListItemIcon","ListItemText","AppBar","Toolbar","styled","Home","HomeIcon","Chat","ChatIcon","ContactSupport","ContactIcon","Notifications","NotificationsIcon","CalendarToday","CalendarIcon","Settings","SettingsIcon","Menu","MenuIcon","Logout","LogoutIcon","RefreshIcon","ChatWindow","ServerStatus","axios","jsxDEV","_jsxDEV","drawerWidth","Main","shouldForwardProp","prop","theme","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","_c","menuItems","text","icon","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","serverStatus","setServerStatus","models","setModels","chats","setChats","savedChats","localStorage","getItem","JSON","parse","left","right","loading","setLoading","thinking","setThinking","activeRequests","setActiveRequests","streamingResponses","setStreamingResponses","drawerOpen","setDrawerOpen","setItem","stringify","checkServer","response","get","data","status","error","interval","setInterval","clearInterval","handleStopResponse","chatId","abort","prev","role","content","timestamp","Date","toISOString","handleSendMessage","message","model","updatedChats","controller","AbortController","fetch","method","headers","body","messages","signal","reader","getReader","decoder","TextDecoder","responseText","value","done","read","chunk","decode","lines","split","line","startsWith","slice","e","console","name","clearChatHistory","handleDrawerToggle","drawer","sx","overflow","children","p","display","alignItems","gap","component","src","alt","width","height","borderRadius","variant","fontWeight","map","item","button","primary","mt","position","ml","color","edge","onClick","mr","noWrap","flexShrink","boxSizing","anchor","pt","streamingResponse","isThinking","_c2","$RefreshReg$"],"sources":["E:/Cline/allm/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Container, Grid, IconButton, Typography, Paper, CssBaseline, Drawer, List, ListItem, ListItemIcon, ListItemText, AppBar, Toolbar } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Home as HomeIcon,\r\n  Chat as ChatIcon,\r\n  ContactSupport as ContactIcon,\r\n  Notifications as NotificationsIcon,\r\n  CalendarToday as CalendarIcon,\r\n  Settings as SettingsIcon,\r\n  Menu as MenuIcon,\r\n  Logout as LogoutIcon\r\n} from '@mui/icons-material';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport ServerStatus from './components/ServerStatus';\r\nimport axios from 'axios';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: `-${drawerWidth}px`,\r\n    ...(open && {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    }),\r\n  }),\r\n);\r\n\r\nconst menuItems = [\r\n  { text: 'HOME', icon: <HomeIcon /> },\r\n  { text: 'CHAT', icon: <ChatIcon /> },\r\n  { text: 'CONTACT', icon: <ContactIcon /> },\r\n  { text: 'NOTIFICATIONS', icon: <NotificationsIcon /> },\r\n  { text: 'CALENDAR', icon: <CalendarIcon /> },\r\n  { text: 'SETTINGS', icon: <SettingsIcon /> },\r\n];\r\n\r\nfunction App() {\r\n  const [serverStatus, setServerStatus] = useState('checking');\r\n  const [models, setModels] = useState([]);\r\n  const [chats, setChats] = useState(() => {\r\n    // Load chat histories from localStorage\r\n    const savedChats = localStorage.getItem('chatHistories');\r\n    return savedChats ? JSON.parse(savedChats) : {\r\n      left: [],\r\n      right: []\r\n    };\r\n  });\r\n  const [loading, setLoading] = useState({\r\n    left: false,\r\n    right: false\r\n  });\r\n  const [thinking, setThinking] = useState({\r\n    left: false,\r\n    right: false\r\n  });\r\n  const [activeRequests, setActiveRequests] = useState({\r\n    left: null,\r\n    right: null\r\n  });\r\n  const [streamingResponses, setStreamingResponses] = useState({\r\n    left: '',\r\n    right: ''\r\n  });\r\n  const [drawerOpen, setDrawerOpen] = useState(true);\r\n\r\n  // Save chats to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('chatHistories', JSON.stringify(chats));\r\n  }, [chats]);\r\n\r\n  const checkServer = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/models');\r\n      setServerStatus(response.data.status);\r\n      setModels(response.data.models);\r\n    } catch (error) {\r\n      setServerStatus('offline');\r\n      setModels([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkServer();\r\n    // Poll for server status every 30 seconds\r\n    const interval = setInterval(checkServer, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleStopResponse = (chatId) => {\r\n    if (activeRequests[chatId]) {\r\n      activeRequests[chatId].abort();\r\n      setActiveRequests(prev => ({ ...prev, [chatId]: null }));\r\n      setLoading(prev => ({ ...prev, [chatId]: false }));\r\n      setThinking(prev => ({ ...prev, [chatId]: false }));\r\n      \r\n      if (streamingResponses[chatId]) {\r\n        setChats(prev => ({\r\n          ...prev,\r\n          [chatId]: [...prev[chatId], { \r\n            role: 'assistant', \r\n            content: streamingResponses[chatId],\r\n            timestamp: new Date().toISOString()\r\n          }]\r\n        }));\r\n        setStreamingResponses(prev => ({ ...prev, [chatId]: '' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (message, model, chatId) => {\r\n    const updatedChats = {\r\n      ...chats,\r\n      [chatId]: [...chats[chatId], { \r\n        role: 'user', \r\n        content: message,\r\n        timestamp: new Date().toISOString()\r\n      }]\r\n    };\r\n    setChats(updatedChats);\r\n    setLoading(prev => ({ ...prev, [chatId]: true }));\r\n    setThinking(prev => ({ ...prev, [chatId]: false }));\r\n    setStreamingResponses(prev => ({ ...prev, [chatId]: '' }));\r\n\r\n    const controller = new AbortController();\r\n    setActiveRequests(prev => ({ ...prev, [chatId]: controller }));\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          chatId,\r\n          messages: updatedChats[chatId],\r\n          model\r\n        }),\r\n        signal: controller.signal\r\n      });\r\n\r\n      const reader = response.body.getReader();\r\n      const decoder = new TextDecoder();\r\n      let responseText = '';\r\n\r\n      while (true) {\r\n        const { value, done } = await reader.read();\r\n        if (done) break;\r\n\r\n        const chunk = decoder.decode(value);\r\n        const lines = chunk.split('\\n');\r\n\r\n        for (const line of lines) {\r\n          if (line.startsWith('data: ')) {\r\n            try {\r\n              const data = JSON.parse(line.slice(5));\r\n              \r\n              // Handle different streaming states\r\n              if (data.status === 'thinking') {\r\n                setThinking(prev => ({ ...prev, [chatId]: true }));\r\n              } else if (data.status === 'streaming') {\r\n                setThinking(prev => ({ ...prev, [chatId]: false }));\r\n              } else if (data.status === 'done') {\r\n                // Response is complete\r\n                continue;\r\n              } else if (data.chunk) {\r\n                responseText += data.chunk;\r\n                setStreamingResponses(prev => ({\r\n                  ...prev,\r\n                  [chatId]: responseText\r\n                }));\r\n              }\r\n            } catch (e) {\r\n              console.error('Error parsing SSE data:', e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      setChats(prev => ({\r\n        ...prev,\r\n        [chatId]: [...prev[chatId], { \r\n          role: 'assistant', \r\n          content: responseText,\r\n          timestamp: new Date().toISOString()\r\n        }]\r\n      }));\r\n    } catch (error) {\r\n      if (error.name !== 'AbortError') {\r\n        console.error('Error sending message:', error);\r\n        setChats(prev => ({\r\n          ...prev,\r\n          [chatId]: [...prev[chatId], { \r\n            role: 'assistant', \r\n            content: '❌ Error: Failed to get response from AI. Please try again.',\r\n            timestamp: new Date().toISOString()\r\n          }]\r\n        }));\r\n      }\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, [chatId]: false }));\r\n      setThinking(prev => ({ ...prev, [chatId]: false }));\r\n      setActiveRequests(prev => ({ ...prev, [chatId]: null }));\r\n      setStreamingResponses(prev => ({ ...prev, [chatId]: '' }));\r\n    }\r\n  };\r\n\r\n  const clearChatHistory = (chatId) => {\r\n    setChats(prev => ({\r\n      ...prev,\r\n      [chatId]: []\r\n    }));\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <Box sx={{ overflow: 'auto' }}>\r\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center', gap: 1 }}>\r\n        <Box\r\n          component=\"img\"\r\n          src=\"https://via.placeholder.com/40\"\r\n          alt=\"User\"\r\n          sx={{ width: 40, height: 40, borderRadius: '50%' }}\r\n        />\r\n        <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n          User Name\r\n        </Typography>\r\n      </Box>\r\n      <List>\r\n        {menuItems.map((item) => (\r\n          <ListItem button key={item.text}>\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        ))}\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <ListItem button sx={{ mt: 'auto' }}>\r\n          <ListItemIcon><LogoutIcon /></ListItemIcon>\r\n          <ListItemText primary=\"LOG OUT\" />\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh' }}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        sx={{\r\n          width: `calc(100% - ${drawerOpen ? drawerWidth : 0}px)`,\r\n          ml: `${drawerOpen ? drawerWidth : 0}px`,\r\n          transition: (theme) =>\r\n            theme.transitions.create(['margin', 'width'], {\r\n              easing: theme.transitions.easing.sharp,\r\n              duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap component=\"div\">\r\n            Dual Chat Interface\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        sx={{\r\n          width: drawerWidth,\r\n          flexShrink: 0,\r\n          '& .MuiDrawer-paper': {\r\n            width: drawerWidth,\r\n            boxSizing: 'border-box',\r\n          },\r\n        }}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={drawerOpen}\r\n      >\r\n        {drawer}\r\n      </Drawer>\r\n      <Main open={drawerOpen}>\r\n        <Toolbar /> {/* Spacer for AppBar */}\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          gap: 2, \r\n          height: 'calc(100vh - 88px)',\r\n          pt: 2\r\n        }}>\r\n          <ChatWindow\r\n            position=\"left\"\r\n            models={models}\r\n            streamingResponse={streamingResponses.left}\r\n            isThinking={thinking.left}\r\n            setStreamingResponses={setStreamingResponses}\r\n            setThinking={setThinking}\r\n          />\r\n          <ChatWindow\r\n            position=\"right\"\r\n            models={models}\r\n            streamingResponse={streamingResponses.right}\r\n            isThinking={thinking.right}\r\n            setStreamingResponses={setStreamingResponses}\r\n            setThinking={setThinking}\r\n          />\r\n        </Box>\r\n      </Main>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}